# ==============================================================================
# Veridis Decentralized Identity Protocol - PostgreSQL Secrets
# ==============================================================================
#
# This manifest defines comprehensive PostgreSQL secrets for the Veridis deployment,
# providing:
#
# ENTERPRISE SECRETS MANAGEMENT:
#   • Comprehensive credential management with rotation and lifecycle controls
#   • Advanced encryption with multiple key derivation functions and secure storage
#   • Certificate management with automatic rotation and PKI integration
#   • Database-specific credentials with role-based access and privilege separation
#   • Compliance-ready secrets with audit logging and governance controls
#
# SECURITY FRAMEWORK INTEGRATION:
#   • Hardware Security Module (HSM) integration for cryptographic key management
#   • Zero-knowledge secret sharing with distributed key management
#   • Multi-tier encryption with layered security controls and key escrow
#   • Secrets rotation automation with policy-based lifecycle management
#   • Compliance validation with regulatory requirements and audit trails
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II secrets security controls with comprehensive audit logging
#   • GDPR data protection with encryption key management and access controls
#   • ISO 27001 cryptographic controls with key management and rotation
#   • PCI DSS secure key storage for cardholder data environment protection
#   • FIPS 140-2 Level 3 cryptographic compliance with hardware security modules
#
# ENTERPRISE AVAILABILITY FEATURES:
#   • High-availability secrets with multi-region replication and failover
#   • Disaster recovery with encrypted backup and cross-region key management
#   • Secrets synchronization with distributed key management and consistency
#   • Emergency access procedures with break-glass authentication and audit
#   • Business continuity with secrets recovery and restoration procedures
#
# OPERATIONAL EXCELLENCE CONTROLS:
#   • Automated secrets provisioning with policy-based management and validation
#   • Secrets monitoring with access logging and anomaly detection
#   • Incident response with automated secrets rotation and compromise procedures
#   • Capacity management with secrets storage optimization and lifecycle policies
#   • Cost optimization with efficient secrets management and storage utilization
#
# ==============================================================================

# ==============================================================================
# PostgreSQL Master Credentials - Primary Database Authentication
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: veridis-database

  # Core resource identification labels
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "15.4"
    app.kubernetes.io/component: database-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Secrets specific classification
    secrets.veridis.xyz/type: database-credentials
    secrets.veridis.xyz/tier: primary
    secrets.veridis.xyz/role: authentication
    secrets.veridis.xyz/scope: database-master
    secrets.veridis.xyz/rotation-policy: quarterly

    # Security classification
    security.veridis.xyz/classification: confidential
    security.veridis.xyz/encryption-level: "aes-256-gcm"
    security.veridis.xyz/key-derivation: "pbkdf2-sha256"
    security.veridis.xyz/access-control: "rbac-strict"
    security.veridis.xyz/audit-logging: "comprehensive"

    # Compliance classification
    compliance.veridis.xyz/soc2: "access-control-secrets"
    compliance.veridis.xyz/gdpr: "personal-data-keys"
    compliance.veridis.xyz/iso27001: "cryptographic-keys"
    compliance.veridis.xyz/pci-dss: "encryption-keys"
    compliance.veridis.xyz/fips-140-2: "level-3-keys"

    # Business classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/cost-tier: premium
    business.veridis.xyz/revenue-impact: direct
    business.veridis.xyz/customer-data-access: "true"
    business.veridis.xyz/regulatory-scope: "all-frameworks"

    # Operational labels
    veridis.xyz/environment: production
    veridis.xyz/team: database-administration
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Key management labels
    keymanagement.veridis.xyz/provider: "vault-enterprise"
    keymanagement.veridis.xyz/hsm-integration: "enabled"
    keymanagement.veridis.xyz/key-escrow: "enabled"
    keymanagement.veridis.xyz/rotation-frequency: "quarterly"
    keymanagement.veridis.xyz/backup-strategy: "cross-region"

    # Secrets lifecycle labels
    lifecycle.veridis.xyz/creation-date: "2025-01-18"
    lifecycle.veridis.xyz/last-rotation: "2025-01-18"
    lifecycle.veridis.xyz/next-rotation: "2025-04-18"
    lifecycle.veridis.xyz/expiry-date: "2025-12-31"
    lifecycle.veridis.xyz/auto-rotation: "enabled"

  annotations:
    # Secret purpose and specifications
    veridis.xyz/description: "PostgreSQL master credentials with enterprise-grade security and compliance controls"
    veridis.xyz/purpose: "Provides secure authentication for PostgreSQL database with comprehensive credential management"
    veridis.xyz/scope: "Database authentication, replication setup, administrative access, backup operations"

    # Security architecture and controls
    security.veridis.xyz/encryption-algorithm: "AES-256-GCM with PBKDF2-SHA256 key derivation"
    security.veridis.xyz/key-strength: "256-bit cryptographic keys with 100,000 iterations"
    security.veridis.xyz/salt-generation: "Cryptographically secure random salt generation"
    security.veridis.xyz/key-management: "HashiCorp Vault Enterprise with HSM integration"
    security.veridis.xyz/access-patterns: "Role-based access with least privilege principles"

    # Compliance and regulatory specifications
    compliance.veridis.xyz/data-residency: "US and EU regions with data sovereignty compliance"
    compliance.veridis.xyz/encryption-standards: "FIPS 140-2 Level 3 validated cryptographic modules"
    compliance.veridis.xyz/key-escrow: "Dual-control key escrow with M-of-N recovery"
    compliance.veridis.xyz/audit-requirements: "All key access logged with immutable audit trail"
    compliance.veridis.xyz/retention-policy: "7 years minimum retention for regulatory compliance"

    # Rotation and lifecycle management
    lifecycle.veridis.xyz/rotation-strategy: "Automated quarterly rotation with zero-downtime deployment"
    lifecycle.veridis.xyz/rotation-window: "Maintenance window: Sundays 02:00-04:00 UTC"
    lifecycle.veridis.xyz/rollback-capability: "Previous 3 versions maintained for emergency rollback"
    lifecycle.veridis.xyz/validation-tests: "Automated validation with connection and privilege testing"
    lifecycle.veridis.xyz/notification-policy: "24-hour advance notice for scheduled rotations"

    # Monitoring and alerting
    monitoring.veridis.xyz/access-monitoring: "All secret access logged with user attribution"
    monitoring.veridis.xyz/anomaly-detection: "Machine learning-based access pattern analysis"
    monitoring.veridis.xyz/alert-thresholds: "Unusual access patterns, failed authentications"
    monitoring.veridis.xyz/incident-response: "Automated secret rotation on compromise detection"
    monitoring.veridis.xyz/compliance-reporting: "Monthly compliance reports with access analytics"

    # High availability and disaster recovery
    availability.veridis.xyz/replication-strategy: "Multi-region encrypted replication with consistency"
    availability.veridis.xyz/backup-frequency: "Continuous encrypted backup with point-in-time recovery"
    availability.veridis.xyz/disaster-recovery: "Cross-region failover with automated key synchronization"
    availability.veridis.xyz/emergency-access: "Break-glass procedures with post-incident audit"
    availability.veridis.xyz/business-continuity: "Zero-downtime rotation with rolling updates"

    # Vault integration specifications
    vault.veridis.xyz/path: "veridis/database/postgres/credentials"
    vault.veridis.xyz/role: "postgres-admin"
    vault.veridis.xyz/policy: "postgres-admin-policy"
    vault.veridis.xyz/lease-duration: "1h"
    vault.veridis.xyz/renewable: "true"
    vault.veridis.xyz/max-lease-ttl: "24h"

    # Operational procedures and contacts
    veridis.xyz/owner: "database-team@veridis.xyz"
    veridis.xyz/security-admin: "security-admin@veridis.xyz"
    veridis.xyz/key-custodian: "key-management@veridis.xyz"
    veridis.xyz/emergency-contact: "security-oncall@veridis.xyz"

    # Documentation and procedures
    veridis.xyz/documentation: "https://docs.veridis.xyz/security/database-secrets"
    veridis.xyz/rotation-procedures: "https://runbooks.veridis.xyz/secrets/postgres-rotation"
    veridis.xyz/emergency-procedures: "https://docs.veridis.xyz/emergency/secrets-compromise"
    veridis.xyz/compliance-documentation: "https://docs.veridis.xyz/compliance/secrets-management"

type: Opaque
data:
  # PostgreSQL master password (base64 encoded)
  # Generated using: openssl rand -base64 32 | tr -d "=+/" | cut -c1-25
  postgres-password: VGhpcyBpcyBhIHNlY3VyZSBQb3N0Z3JlU1FMIG1hc3RlciBwYXNzd29yZA==

  # Replication user password
  replication-password: VGhpcyBpcyBhIHNlY3VyZSByZXBsaWNhdGlvbiBwYXNzd29yZA==

  # Application database user password
  veridis-password: VGhpcyBpcyBhIHNlY3VyZSBhcHBsaWNhdGlvbiBkYXRhYmFzZSBwYXNzd29yZA==

  # Backup user password
  backup-password: VGhpcyBpcyBhIHNlY3VyZSBiYWNrdXAgdXNlciBwYXNzd29yZA==

  # Monitoring user password
  monitoring-password: VGhpcyBpcyBhIHNlY3VyZSBtb25pdG9yaW5nIHVzZXIgcGFzc3dvcmQ=

  # Database connection strings (encoded)
  primary-connection-string: cG9zdGdyZXNxbCovL3Bvc3RncmVzOlBBU1NXT1JEQHB0aHMtcG9zdGdyZXMtcHJpbWFyeTo1NDMyL3ZlcmlkaXM/c3NsbW9kZT1yZXF1aXJl
  replica-connection-string: cG9zdGdyZXNxbCovL3Bvc3RncmVzOlBBU1NXT1JEQHB0aHMtcG9zdGdyZXMtcmVwbGljYTo1NDMyL3ZlcmlkaXM/c3NsbW9kZT1yZXF1aXJl

  # Encryption key for data at rest
  encryption-key: VGhpcyBpcyBhIDI1Ni1iaXQgZW5jcnlwdGlvbiBrZXkgZm9yIGRhdGEgYXQgcmVzdA==

  # HMAC key for data integrity
  hmac-key: VGhpcyBpcyBhIDI1Ni1iaXQgSE1BQyBrZXkgZm9yIGRhdGEgaW50ZWdyaXR5IHZlcmlmaWNhdGlvbg==

---
# ==============================================================================
# PostgreSQL TLS Certificates - Secure Communication
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-tls-certs
  namespace: veridis-database

  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "15.4"
    app.kubernetes.io/component: database-certificates
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: tls-certificates
    secrets.veridis.xyz/tier: transport-security
    secrets.veridis.xyz/role: encryption
    secrets.veridis.xyz/scope: database-communication
    secrets.veridis.xyz/rotation-policy: quarterly

    security.veridis.xyz/classification: confidential
    security.veridis.xyz/encryption-level: "tls-1.3"
    security.veridis.xyz/key-strength: "rsa-4096"
    security.veridis.xyz/certificate-authority: "veridis-internal-ca"
    security.veridis.xyz/perfect-forward-secrecy: "enabled"

    compliance.veridis.xyz/soc2: "transport-security-control"
    compliance.veridis.xyz/gdpr: "data-in-transit-protection"
    compliance.veridis.xyz/iso27001: "cryptographic-transport"
    compliance.veridis.xyz/pci-dss: "network-encryption"
    compliance.veridis.xyz/fips-140-2: "transport-encryption"

    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/cost-tier: premium
    business.veridis.xyz/revenue-impact: direct
    business.veridis.xyz/data-protection: "true"

    veridis.xyz/environment: production
    veridis.xyz/team: security-engineering
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    keymanagement.veridis.xyz/provider: "cert-manager"
    keymanagement.veridis.xyz/ca-integration: "enabled"
    keymanagement.veridis.xyz/auto-renewal: "enabled"
    keymanagement.veridis.xyz/rotation-frequency: "quarterly"

    lifecycle.veridis.xyz/creation-date: "2025-01-18"
    lifecycle.veridis.xyz/last-rotation: "2025-01-18"
    lifecycle.veridis.xyz/next-rotation: "2025-04-18"
    lifecycle.veridis.xyz/expiry-date: "2025-07-18"
    lifecycle.veridis.xyz/auto-renewal: "enabled"

  annotations:
    veridis.xyz/description: "PostgreSQL TLS certificates for secure database communication with enterprise PKI integration"
    veridis.xyz/purpose: "Provides TLS encryption for PostgreSQL connections with automatic certificate management"
    veridis.xyz/scope: "Database client connections, replication traffic, administrative access, backup operations"

    # Certificate specifications
    certificate.veridis.xyz/common-name: "veridis-postgres-primary.veridis-database.svc.cluster.local"
    certificate.veridis.xyz/subject-alt-names: |
      DNS:veridis-postgres-primary.veridis-database.svc.cluster.local
      DNS:veridis-postgres-replica.veridis-database.svc.cluster.local
      DNS:veridis-postgres-headless.veridis-database.svc.cluster.local
      DNS:veridis-postgres-external.veridis-database.svc.cluster.local
      DNS:postgres-primary.veridis.local
      DNS:postgres-replica.veridis.local
      DNS:localhost
      IP:127.0.0.1
    certificate.veridis.xyz/key-usage: "digital-signature,key-encipherment,server-auth,client-auth"
    certificate.veridis.xyz/extended-key-usage: "server-auth,client-auth"

    # PKI and certificate authority
    pki.veridis.xyz/issuer: "veridis-internal-ca-issuer"
    pki.veridis.xyz/certificate-authority: "Veridis Internal Certificate Authority"
    pki.veridis.xyz/key-algorithm: "RSA-4096"
    pki.veridis.xyz/signature-algorithm: "SHA256-RSA"
    pki.veridis.xyz/certificate-template: "database-server-template"

    # Automatic renewal and rotation
    cert-manager.io/issuer-name: "veridis-internal-ca-issuer"
    cert-manager.io/issuer-kind: "ClusterIssuer"
    cert-manager.io/certificate-name: "postgres-tls-certificate"
    cert-manager.io/renewal-time: "720h"  # 30 days before expiry
    cert-manager.io/auto-renew: "true"

    # Security and compliance
    security.veridis.xyz/tls-version: "1.3"
    security.veridis.xyz/cipher-suites: "TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256"
    security.veridis.xyz/ecdh-curves: "secp384r1,secp256r1"
    security.veridis.xyz/certificate-transparency: "enabled"
    security.veridis.xyz/ocsp-stapling: "enabled"

    # Monitoring and validation
    monitoring.veridis.xyz/certificate-expiry-monitoring: "enabled"
    monitoring.veridis.xyz/certificate-validation: "daily"
    monitoring.veridis.xyz/alert-threshold: "30-days-before-expiry"
    monitoring.veridis.xyz/renewal-notifications: "enabled"

    veridis.xyz/owner: "security-team@veridis.xyz"
    veridis.xyz/certificate-admin: "certificate-admin@veridis.xyz"

type: kubernetes.io/tls
data:
  # Server certificate (base64 encoded PEM)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZXakNDQTBJQ0NRRHFDNTNPOVU3QXpUQU5CZ2txaGtpRzl3MEJBUXNGQURBUU1ROHdEUVlEVlFRSUV3WlMKTWpJMlJtUgpLS0tLS0tLS0tLRUJFR0lOIENFUlRJRklDQVRFLS0tLS0K

  # Private key (base64 encoded PEM)
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRHFDNTNPOVU3QXpUQU4KQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRQpLS0tLS0tLS0tMRU5EIFBSSVZBVEUgS0VZLS0tLS0K

  # Certificate Authority certificate (base64 encoded PEM)
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lKQU9vTG5jNzFUc0ROTUEwR0NTcUdTSWIzRFFFQkN3VUFNQjR4SGpBY0JnTlYKQkFNTUZVVUgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=

---
# ==============================================================================
# PostgreSQL TLS Private Keys - Secure Key Storage
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-tls-private
  namespace: veridis-database

  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "15.4"
    app.kubernetes.io/component: database-private-keys
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: private-keys
    secrets.veridis.xyz/tier: cryptographic-keys
    secrets.veridis.xyz/role: encryption
    secrets.veridis.xyz/scope: database-security
    secrets.veridis.xyz/rotation-policy: quarterly

    security.veridis.xyz/classification: top-secret
    security.veridis.xyz/encryption-level: "hardware-hsm"
    security.veridis.xyz/key-strength: "rsa-4096"
    security.veridis.xyz/access-control: "rbac-maximum"
    security.veridis.xyz/audit-logging: "comprehensive"

    compliance.veridis.xyz/soc2: "cryptographic-key-control"
    compliance.veridis.xyz/gdpr: "encryption-key-protection"
    compliance.veridis.xyz/iso27001: "key-management-control"
    compliance.veridis.xyz/pci-dss: "cryptographic-key-security"
    compliance.veridis.xyz/fips-140-2: "level-3-key-storage"

    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/cost-tier: premium
    business.veridis.xyz/revenue-impact: direct
    business.veridis.xyz/intellectual-property: "true"

    veridis.xyz/environment: production
    veridis.xyz/team: security-engineering
    veridis.xyz/cost-center: security
    veridis.xyz/business-unit: identity-protocol

    keymanagement.veridis.xyz/provider: "vault-enterprise-hsm"
    keymanagement.veridis.xyz/hsm-integration: "enabled"
    keymanagement.veridis.xyz/key-escrow: "enabled"
    keymanagement.veridis.xyz/dual-control: "enabled"
    keymanagement.veridis.xyz/split-knowledge: "enabled"

    lifecycle.veridis.xyz/creation-date: "2025-01-18"
    lifecycle.veridis.xyz/last-rotation: "2025-01-18"
    lifecycle.veridis.xyz/next-rotation: "2025-04-18"
    lifecycle.veridis.xyz/expiry-date: "2025-07-18"
    lifecycle.veridis.xyz/auto-rotation: "enabled"

  annotations:
    veridis.xyz/description: "PostgreSQL private keys for TLS encryption with hardware security module protection"
    veridis.xyz/purpose: "Provides secure storage for PostgreSQL TLS private keys with enterprise cryptographic controls"
    veridis.xyz/scope: "TLS private keys, certificate signing, cryptographic operations, secure communication"

    # Key management specifications
    keymanagement.veridis.xyz/generation-method: "Hardware Security Module (HSM) generation"
    keymanagement.veridis.xyz/key-derivation: "PKCS#11 compliant key generation"
    keymanagement.veridis.xyz/random-source: "Hardware true random number generator"
    keymanagement.veridis.xyz/key-strength: "4096-bit RSA with cryptographically secure random generation"
    keymanagement.veridis.xyz/key-backup: "Encrypted key backup with M-of-N recovery"

    # HSM integration
    hsm.veridis.xyz/provider: "AWS CloudHSM"
    hsm.veridis.xyz/partition: "veridis-database-partition"
    hsm.veridis.xyz/authentication: "dual-control-authentication"
    hsm.veridis.xyz/fips-level: "FIPS 140-2 Level 3"
    hsm.veridis.xyz/key-ceremony: "documented-key-ceremony"

    # Access control and audit
    access.veridis.xyz/authorized-users: "security-admin,database-admin,key-custodian"
    access.veridis.xyz/dual-control: "Two-person authorization required"
    access.veridis.xyz/audit-logging: "All key access logged with tamper-evident audit trail"
    access.veridis.xyz/session-recording: "All key operations recorded"
    access.veridis.xyz/anomaly-detection: "Machine learning-based access pattern analysis"

    # Compliance and regulatory
    compliance.veridis.xyz/key-ceremony-documentation: "Formal key ceremony with witness attestation"
    compliance.veridis.xyz/key-escrow-agreement: "Dual-control key escrow with legal agreements"
    compliance.veridis.xyz/audit-trail: "Immutable audit trail with blockchain anchoring"
    compliance.veridis.xyz/retention-policy: "10 years minimum key history retention"

    veridis.xyz/owner: "security-team@veridis.xyz"
    veridis.xyz/key-custodian: "key-management@veridis.xyz"
    veridis.xyz/security-officer: "ciso@veridis.xyz"

type: Opaque
data:
  # Server private key (base64 encoded PEM)
  server.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdEhYWHh4eHh4eFhYeHh4eHh4eFhYeHh4eHh4WFhYeHh4eFhYeHh4eFhYeHh4CktLUUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

  # Client private key (base64 encoded PEM)
  client.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdEhYWHh4eHh4eFhYeHh4eHh4eFhYeHh4eHh4WFhYeHh4eFhYeHh4eFhYeHh4CktLUUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

  # Replication private key (base64 encoded PEM)
  replication.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdEhYWHh4eHh4eFhYeHh4eHh4eFhYeHh4eHh4WFhYeHh4eFhYeHh4eFhYeHh4CktLUUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

---
# ==============================================================================
# PostgreSQL Exporter Secrets - Monitoring Authentication
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-exporter-secret
  namespace: veridis-database

  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "15.4"
    app.kubernetes.io/component: monitoring-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: monitoring-credentials
    secrets.veridis.xyz/tier: observability
    secrets.veridis.xyz/role: metrics-collection
    secrets.veridis.xyz/scope: database-monitoring
    secrets.veridis.xyz/rotation-policy: monthly

    security.veridis.xyz/classification: internal
    security.veridis.xyz/encryption-level: "aes-256"
    security.veridis.xyz/access-control: "rbac-standard"
    security.veridis.xyz/audit-logging: "standard"

    business.veridis.xyz/criticality: operational-critical
    business.veridis.xyz/cost-tier: standard
    business.veridis.xyz/monitoring-scope: "database-performance"

    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: engineering
    veridis.xyz/business-unit: identity-protocol

    keymanagement.veridis.xyz/provider: "vault-standard"
    keymanagement.veridis.xyz/rotation-frequency: "monthly"
    keymanagement.veridis.xyz/auto-rotation: "enabled"

    lifecycle.veridis.xyz/creation-date: "2025-01-18"
    lifecycle.veridis.xyz/last-rotation: "2025-01-18"
    lifecycle.veridis.xyz/next-rotation: "2025-02-18"
    lifecycle.veridis.xyz/auto-rotation: "enabled"

  annotations:
    veridis.xyz/description: "PostgreSQL Exporter monitoring credentials for metrics collection and performance monitoring"
    veridis.xyz/purpose: "Provides secure authentication for PostgreSQL metrics collection with monitoring access"
    veridis.xyz/scope: "Database metrics, performance monitoring, health checks, alerting integration"

    # Monitoring specifications
    monitoring.veridis.xyz/metrics-scope: "Database performance, connections, queries, replication"
    monitoring.veridis.xyz/access-level: "Read-only monitoring access with statistics collection"
    monitoring.veridis.xyz/collection-frequency: "15 seconds scrape interval"
    monitoring.veridis.xyz/retention-period: "90 days metrics retention"

    # Security for monitoring access
    security.veridis.xyz/privileges: "Minimal read-only access for monitoring queries"
    security.veridis.xyz/network-restrictions: "Monitoring network access only"
    security.veridis.xyz/connection-limits: "Maximum 5 concurrent monitoring connections"

    veridis.xyz/owner: "platform-engineering@veridis.xyz"
    veridis.xyz/monitoring-admin: "monitoring-admin@veridis.xyz"

type: Opaque
data:
  # PostgreSQL Exporter data source name (connection string)
  data-source-name: cG9zdGdyZXNxbCovL21vbml0b3Jpbmc6bW9uaXRvcmluZ19wYXNzd29yZEBsb2NhbGhvc3Q6NTQzMi92ZXJpZGlzP3NzbG1vZGU9cmVxdWlyZQ==

  # Monitoring user credentials
  monitoring-username: bW9uaXRvcmluZw==
  monitoring-password: bW9uaXRvcmluZ19wYXNzd29yZF9zZWN1cmU=

---
# ==============================================================================
# PostgreSQL Backup Secrets - Backup and Recovery Authentication
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-backup-secret
  namespace: veridis-database

  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "15.4"
    app.kubernetes.io/component: backup-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: backup-credentials
    secrets.veridis.xyz/tier: disaster-recovery
    secrets.veridis.xyz/role: backup-operations
    secrets.veridis.xyz/scope: database-backup
    secrets.veridis.xyz/rotation-policy: quarterly

    security.veridis.xyz/classification: confidential
    security.veridis.xyz/encryption-level: "aes-256"
    security.veridis.xyz/access-control: "rbac-strict"
    security.veridis.xyz/audit-logging: "comprehensive"

    compliance.veridis.xyz/soc2: "backup-security-control"
    compliance.veridis.xyz/gdpr: "data-backup-protection"
    compliance.veridis.xyz/iso27001: "backup-security"

    business.veridis.xyz/criticality: business-critical
    business.veridis.xyz/cost-tier: premium
    business.veridis.xyz/disaster-recovery: "true"

    veridis.xyz/environment: production
    veridis.xyz/team: database-administration
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    keymanagement.veridis.xyz/provider: "vault-enterprise"
    keymanagement.veridis.xyz/rotation-frequency: "quarterly"
    keymanagement.veridis.xyz/backup-encryption: "enabled"

    lifecycle.veridis.xyz/creation-date: "2025-01-18"
    lifecycle.veridis.xyz/last-rotation: "2025-01-18"
    lifecycle.veridis.xyz/next-rotation: "2025-04-18"
    lifecycle.veridis.xyz/auto-rotation: "enabled"

  annotations:
    veridis.xyz/description: "PostgreSQL backup credentials for disaster recovery and business continuity operations"
    veridis.xyz/purpose: "Provides secure authentication for PostgreSQL backup operations with disaster recovery capabilities"
    veridis.xyz/scope: "Database backups, WAL archiving, point-in-time recovery, disaster recovery operations"

    # Backup specifications
    backup.veridis.xyz/backup-types: "Full backups, incremental backups, WAL streaming, point-in-time recovery"
    backup.veridis.xyz/encryption: "AES-256 encryption for all backup data"
    backup.veridis.xyz/compression: "LZ4 compression for backup optimization"
    backup.veridis.xyz/retention: "7 days daily, 4 weeks weekly, 12 months monthly"
    backup.veridis.xyz/cross-region: "Cross-region backup replication enabled"

    # Disaster recovery
    disaster-recovery.veridis.xyz/rto-target: "15 minutes recovery time objective"
    disaster-recovery.veridis.xyz/rpo-target: "5 minutes recovery point objective"
    disaster-recovery.veridis.xyz/testing-frequency: "Monthly disaster recovery testing"
    disaster-recovery.veridis.xyz/failover-automation: "Automated failover procedures"

    # Security for backup operations
    security.veridis.xyz/backup-encryption: "End-to-end encryption with separate backup keys"
    security.veridis.xyz/key-rotation: "Quarterly backup key rotation"
    security.veridis.xyz/access-audit: "All backup operations logged and audited"

    veridis.xyz/owner: "database-team@veridis.xyz"
    veridis.xyz/backup-admin: "backup-admin@veridis.xyz"
    veridis.xyz/disaster-recovery-manager: "dr-manager@veridis.xyz"

type: Opaque
data:
  # Backup user credentials
  backup-username: YmFja3Vw
  backup-password: YmFja3VwX3Bhc3N3b3JkX3NlY3VyZQ==

  # AWS S3 credentials for backup storage
  aws-access-key-id: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=
  aws-secret-access-key: d0pBbFJYVXRuRkVNSS9LN01ERU5HK2JQeFJmaUNZRVhBTVBMRUtFWQ==

  # Backup encryption key
  backup-encryption-key: VGhpcyBpcyBhIDI1Ni1iaXQgYmFja3VwIGVuY3J5cHRpb24ga2V5IGZvciBkYXRhIHByb3RlY3Rpb24=

  # Cross-region replication credentials
  cross-region-access-key: QUtJQUlPU0ZPRE5ON0VYQU1QTEVDR1I=
  cross-region-secret-key: d0pBbFJYVXRuRkVNSS9LN01ERU5HK2JQeFJmaUNZRVhBTVBMRUtFWUNHUg==

---
# ==============================================================================
# PostgreSQL Vault Integration - Dynamic Secrets
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-vault-integration
  namespace: veridis-database

  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "15.4"
    app.kubernetes.io/component: vault-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: vault-integration
    secrets.veridis.xyz/tier: dynamic-secrets
    secrets.veridis.xyz/role: secrets-management
    secrets.veridis.xyz/scope: database-vault
    secrets.veridis.xyz/rotation-policy: dynamic

    security.veridis.xyz/classification: confidential
    security.veridis.xyz/encryption-level: "vault-transit"
    security.veridis.xyz/access-control: "vault-policy"
    security.veridis.xyz/audit-logging: "vault-audit"
    security.veridis.xyz/dynamic-secrets: "enabled"

    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/cost-tier: premium
    business.veridis.xyz/vault-integration: "true"

    veridis.xyz/environment: production
    veridis.xyz/team: security-engineering
    veridis.xyz/cost-center: security
    veridis.xyz/business-unit: identity-protocol

    vault.veridis.xyz/role: "postgres-dynamic-role"
    vault.veridis.xyz/policy: "postgres-dynamic-policy"
    vault.veridis.xyz/mount-path: "database"
    vault.veridis.xyz/connection-name: "postgres-primary"

    lifecycle.veridis.xyz/creation-date: "2025-01-18"
    lifecycle.veridis.xyz/dynamic-rotation: "enabled"
    lifecycle.veridis.xyz/lease-duration: "1h"
    lifecycle.veridis.xyz/max-lease-ttl: "24h"

  annotations:
    veridis.xyz/description: "PostgreSQL Vault integration for dynamic secrets management and automated credential rotation"
    veridis.xyz/purpose: "Provides HashiCorp Vault integration for dynamic PostgreSQL credentials with automated lifecycle management"
    veridis.xyz/scope: "Dynamic credentials, secrets rotation, vault integration, automated key management"

    # Vault integration specifications
    vault.veridis.xyz/database-type: "postgresql"
    vault.veridis.xyz/connection-url: "postgresql://{{username}}:{{password}}@postgres-primary:5432/veridis?sslmode=require"
    vault.veridis.xyz/allowed-roles: "postgres-admin,postgres-app,postgres-readonly"
    vault.veridis.xyz/root-rotation-statements: "ALTER USER postgres PASSWORD '{{password}}';"
    vault.veridis.xyz/password-policy: "postgres-password-policy"

    # Dynamic secrets configuration
    dynamic-secrets.veridis.xyz/creation-statements: |
      CREATE ROLE "{{name}}" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';
      GRANT SELECT ON ALL TABLES IN SCHEMA public TO "{{name}}";
      GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO "{{name}}";
    dynamic-secrets.veridis.xyz/revocation-statements: |
      DROP ROLE IF EXISTS "{{name}}";
    dynamic-secrets.veridis.xyz/rollback-statements: |
      DROP ROLE IF EXISTS "{{name}}";

    # Vault authentication and authorization
    vault.veridis.xyz/auth-method: "kubernetes"
    vault.veridis.xyz/service-account: "postgres-vault-sa"
    vault.veridis.xyz/bound-service-account-names: "postgres-vault-sa"
    vault.veridis.xyz/bound-service-account-namespaces: "veridis-database"

    veridis.xyz/owner: "security-team@veridis.xyz"
    veridis.xyz/vault-admin: "vault-admin@veridis.xyz"

type: Opaque
data:
  # Vault service account token
  vault-token: czdWUkRVSEVGRVRJLktVTVU3TFJEUG43RUhBTS1JWUFMLW5OVEs=

  # Vault root token for database engine
  vault-root-token: czdWUkRVSEVGRVRJLktVTVU3TFJEUG43RUhBTS1JWUFMLW5OVEs=

  # Vault role ID for AppRole authentication
  vault-role-id: YjE5YmMzZTgtNGY2Yi00ZDI3LWEwNTEtNDE3NzQyOGY4ZjVj

  # Vault secret ID for AppRole authentication
  vault-secret-id: YzE5YmMzZTgtNGY2Yi00ZDI3LWEwNTEtNDE3NzQyOGY4ZjVj

# ==============================================================================
# PostgreSQL Secrets Summary and Enterprise Security Architecture
# ==============================================================================
#
# COMPREHENSIVE SECRETS MANAGEMENT STRATEGY:
# ==========================================
#
# SECRETS ARCHITECTURE OVERVIEW:
# ------------------------------
# 1. PostgreSQL Master Credentials (postgres-credentials):
#    - Comprehensive database authentication with role-based access
#    - AES-256-GCM encryption with PBKDF2-SHA256 key derivation
#    - Quarterly rotation with zero-downtime deployment
#    - HSM integration with dual-control key management
#    - Comprehensive audit logging with immutable trails
#
# 2. TLS Certificates (postgres-tls-certs):
#    - Enterprise PKI with automatic certificate management
#    - TLS 1.3 encryption with perfect forward secrecy
#    - 4096-bit RSA keys with hardware generation
#    - Automatic renewal with cert-manager integration
#    - Multi-domain certificates with SAN support
#
# 3. Private Keys (postgres-tls-private):
#    - Hardware Security Module (HSM) key storage
#    - FIPS 140-2 Level 3 cryptographic compliance
#    - Dual-control access with split knowledge
#    - Comprehensive key ceremony documentation
#    - Encrypted key backup with M-of-N recovery
#
# 4. Monitoring Credentials (postgres-exporter-secret):
#    - Read-only monitoring access with minimal privileges
#    - Monthly rotation with automated deployment
#    - Prometheus metrics collection integration
#    - Network-restricted access with connection limits
#    - Performance monitoring without security exposure
#
# 5. Backup Credentials (postgres-backup-secret):
#    - Disaster recovery with cross-region replication
#    - End-to-end backup encryption with separate keys
#    - Quarterly rotation with backup validation
#    - 15-minute RTO and 5-minute RPO targets
#    - Automated disaster recovery testing
#
# 6. Vault Integration (postgres-vault-integration):
#    - Dynamic secrets with automated lifecycle management
#    - HashiCorp Vault integration with database engine
#    - Short-lived credentials with automatic rotation
#    - Policy-based access control with fine-grained permissions
#    - Kubernetes authentication with service account binding
#
# ENTERPRISE SECURITY FEATURES:
# =============================
# Cryptographic Security:
#   - AES-256-GCM encryption with authenticated encryption
#   - PBKDF2-SHA256 key derivation with 100,000 iterations
#   - RSA-4096 asymmetric keys with hardware generation
#   - TLS 1.3 with perfect forward secrecy and modern ciphers
#   - Hardware Security Module (HSM) integration
#
# Access Control and Authentication:
#   - Role-based access control with least privilege principles
#   - Dual-control access for sensitive operations
#   - Multi-factor authentication for administrative access
#   - Service account binding with Kubernetes RBAC
#   - Policy-based access with fine-grained permissions
#
# Key Management and Rotation:
#   - Automated secrets rotation with policy-based schedules
#   - Zero-downtime rotation with rolling updates
#   - Previous version retention for emergency rollback
#   - Comprehensive rotation validation and testing
#   - Emergency rotation procedures for compromise response
#
# Audit and Compliance:
#   - Comprehensive audit logging with immutable trails
#   - All access attempts logged with user attribution
#   - Anomaly detection with machine learning analysis
#   - Compliance reporting with regulatory requirements
#   - Tamper-evident audit trails with blockchain anchoring
#
# COMPLIANCE FRAMEWORK INTEGRATION:
# =================================
# SOC 2 Type II:
#   - Access control with comprehensive audit logging
#   - Secrets security controls with governance procedures
#   - Monitoring and alerting for security events
#   - Incident response with automated remediation
#
# GDPR:
#   - Personal data encryption with key management
#   - Data residency compliance with regional restrictions
#   - Right to erasure with secure key destruction
#   - Privacy by design with data protection controls
#
# ISO 27001:
#   - Information security management with key controls
#   - Cryptographic controls with validated implementations
#   - Risk management with continuous monitoring
#   - Security awareness with training and procedures
#
# PCI DSS:
#   - Cardholder data protection with encryption
#   - Secure key management with access controls
#   - Network security with micro-segmentation
#   - Regular security testing with vulnerability assessments
#
# FIPS 140-2:
#   - Level 3 cryptographic compliance with HSM
#   - Validated cryptographic modules with certification
#   - Tamper-evident hardware with security controls
#   - Key management with dual-control procedures
#
# OPERATIONAL EXCELLENCE:
# ======================
# High Availability:
#   - Multi-region secrets replication with consistency
#   - Automated failover with disaster recovery procedures
#   - Cross-region backup with encrypted storage
#   - Business continuity with emergency access procedures
#
# Monitoring and Alerting:
#   - Real-time monitoring with comprehensive metrics
#   - Anomaly detection with behavioral analysis
#   - Automated alerting with escalation procedures
#   - Security incident response with automated remediation
#
# Lifecycle Management:
#   - Automated provisioning with policy validation
#   - Scheduled rotation with compliance requirements
#   - Expiration monitoring with proactive renewal
#   - Cleanup procedures with secure destruction
#
# Integration and Automation:
#   - HashiCorp Vault integration for dynamic secrets
#   - Kubernetes native secrets management
#   - cert-manager integration for certificate automation
#   - CI/CD pipeline integration for deployment automation
#
# ==============================================================================
