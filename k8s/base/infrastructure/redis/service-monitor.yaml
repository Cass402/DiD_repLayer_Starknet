# ==============================================================================
# Veridis Decentralized Identity Protocol - Redis ServiceMonitor
# ==============================================================================
#
# This manifest defines comprehensive Redis ServiceMonitor configurations for the
# Veridis deployment, providing:
#
# ENTERPRISE REDIS MONITORING:
#   • Advanced Prometheus ServiceMonitor with intelligent metrics collection
#   • Multi-tier monitoring strategy with primary, replica, cache, and sentinel monitoring
#   • Comprehensive performance metrics with business and technical observability
#   • Advanced alerting integration with intelligent threshold management
#   • Enterprise-grade monitoring controls with compliance and audit integration
#
# REDIS OBSERVABILITY OPTIMIZATION:
#   • Performance monitoring with latency, throughput, and resource metrics
#   • Business metrics monitoring with session, authentication, and rate limiting
#   • Custom metrics collection with Veridis-specific KPIs and SLAs
#   • Real-time monitoring with high-resolution metrics and alerting
#   • Advanced analytics integration with trend analysis and capacity planning
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II monitoring controls with comprehensive audit logging
#   • GDPR monitoring compliance with data protection and privacy metrics
#   • ISO 27001 monitoring security with access controls and audit trails
#   • PCI DSS monitoring requirements for cardholder data environment protection
#   • FIPS 140-2 monitoring compliance with validated observability procedures
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent monitoring with machine learning-based anomaly detection
#   • Predictive monitoring with capacity planning and trend analysis
#   • Automated monitoring validation with health checks and quality assurance
#   • Comprehensive monitoring coordination with alerting and response procedures
#   • Advanced monitoring optimization with performance tuning and efficiency
#
# REDIS BUSINESS INTELLIGENCE:
#   • Session monitoring with user activity patterns and performance analytics
#   • Authentication monitoring with security metrics and login pattern analysis
#   • Cache monitoring with hit rates, efficiency, and performance optimization
#   • Rate limiting monitoring with traffic patterns and DDoS protection metrics
#   • Analytics monitoring with data processing and reporting performance
#
# ==============================================================================

# ==============================================================================
# Redis Primary ServiceMonitor - Critical Service Monitoring
# ==============================================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-primary-monitor
  namespace: veridis-cache

  # Core ServiceMonitor identification labels
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "7.2.4"
    app.kubernetes.io/component: primary-monitor
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # ServiceMonitor specific classification
    monitor.veridis.xyz/type: redis-primary
    monitor.veridis.xyz/tier: enterprise
    monitor.veridis.xyz/role: primary-monitoring
    monitor.veridis.xyz/monitoring-level: comprehensive
    monitor.veridis.xyz/alerting-priority: critical

    # Monitoring configuration classification
    monitoring.veridis.xyz/scope: comprehensive
    monitoring.veridis.xyz/intelligence: ml-enhanced
    monitoring.veridis.xyz/resolution: high-frequency
    monitoring.veridis.xyz/retention: long-term
    monitoring.veridis.xyz/analytics: advanced

    # Business monitoring classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: service-availability
    business.veridis.xyz/sla-monitoring: "99.99"
    business.veridis.xyz/cost-monitoring: comprehensive
    business.veridis.xyz/performance-monitoring: critical

    # Performance monitoring classification
    performance.veridis.xyz/latency-monitoring: comprehensive
    performance.veridis.xyz/throughput-monitoring: detailed
    performance.veridis.xyz/resource-monitoring: advanced
    performance.veridis.xyz/capacity-monitoring: predictive
    performance.veridis.xyz/optimization-monitoring: continuous

    # Security monitoring classification
    security.veridis.xyz/access-monitoring: comprehensive
    security.veridis.xyz/auth-monitoring: detailed
    security.veridis.xyz/audit-monitoring: complete
    security.veridis.xyz/threat-monitoring: advanced
    security.veridis.xyz/compliance-monitoring: strict

    # Operational monitoring labels
    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "monitoring-control"
    compliance.veridis.xyz/gdpr: "monitoring-data-protection"
    compliance.veridis.xyz/iso27001: "monitoring-security-management"
    compliance.veridis.xyz/pci-dss: "monitoring-requirements"
    governance.veridis.xyz/policy-enforcement: "strict"

    # Monitoring integration and validation
    integration.veridis.xyz/prometheus: "enabled"
    integration.veridis.xyz/grafana: "enabled"
    integration.veridis.xyz/alertmanager: "enabled"
    integration.veridis.xyz/pagerduty: "enabled"
    integration.veridis.xyz/slack: "enabled"

  annotations:
    # ServiceMonitor purpose and specifications
    veridis.xyz/description: "Comprehensive Redis primary ServiceMonitor with enterprise monitoring, advanced analytics, and business intelligence"
    veridis.xyz/purpose: "Provides comprehensive monitoring for Redis primary with performance, business, and security metrics collection"
    veridis.xyz/scope: "Primary Redis monitoring including write operations, session management, authentication, and critical cache operations"

    # Monitoring architecture and strategy
    monitoring.veridis.xyz/architecture: "Multi-tier monitoring with comprehensive metrics collection, intelligent alerting, and advanced analytics"
    monitoring.veridis.xyz/strategy: "Performance-first monitoring with business intelligence integration and predictive analytics"
    monitoring.veridis.xyz/intelligence: "ML-enhanced monitoring with anomaly detection, trend analysis, and capacity planning"
    monitoring.veridis.xyz/integration: "Comprehensive integration with Prometheus, Grafana, AlertManager, and business intelligence tools"

    # Performance monitoring specifications
    performance.veridis.xyz/latency-tracking: "Sub-millisecond latency tracking with percentile analysis and trend monitoring"
    performance.veridis.xyz/throughput-analysis: "Operations per second tracking with burst analysis and capacity optimization"
    performance.veridis.xyz/resource-optimization: "CPU, memory, and network optimization with intelligent threshold management"
    performance.veridis.xyz/capacity-planning: "Predictive capacity planning with demand forecasting and trend analysis"

    # Business monitoring specifications
    business.veridis.xyz/sla-tracking: "SLA tracking with availability, performance, and business impact analysis"
    business.veridis.xyz/cost-analysis: "Cost analysis with resource utilization, efficiency, and optimization recommendations"
    business.veridis.xyz/revenue-impact: "Revenue impact analysis with service correlation and business continuity tracking"
    business.veridis.xyz/user-experience: "User experience monitoring with session performance and authentication analytics"

    # Security monitoring specifications
    security.veridis.xyz/threat-detection: "Advanced threat detection with anomaly analysis and security event correlation"
    security.veridis.xyz/access-control: "Access control monitoring with authentication tracking and authorization analytics"
    security.veridis.xyz/audit-compliance: "Comprehensive audit compliance with regulatory requirement tracking and reporting"
    security.veridis.xyz/incident-response: "Security incident response with automated alerting and escalation procedures"

    # Compliance monitoring specifications
    compliance.veridis.xyz/regulatory-tracking: "Regulatory compliance tracking with automated validation and reporting"
    compliance.veridis.xyz/audit-preparation: "Audit preparation with comprehensive logging and evidence collection"
    compliance.veridis.xyz/risk-assessment: "Risk assessment monitoring with threat analysis and mitigation tracking"
    compliance.veridis.xyz/policy-enforcement: "Policy enforcement monitoring with compliance validation and reporting"

    # Advanced monitoring specifications
    analytics.veridis.xyz/predictive-monitoring: "Predictive monitoring with machine learning-based forecasting and optimization"
    analytics.veridis.xyz/anomaly-detection: "Advanced anomaly detection with pattern recognition and automated alerting"
    analytics.veridis.xyz/trend-analysis: "Comprehensive trend analysis with capacity planning and optimization recommendations"
    analytics.veridis.xyz/business-intelligence: "Business intelligence integration with KPI tracking and decision support"

    # Operational excellence specifications
    operations.veridis.xyz/automation-level: "Full automation with intelligent monitoring and human oversight capabilities"
    operations.veridis.xyz/maintenance-integration: "Maintenance integration with monitoring coordination and impact analysis"
    operations.veridis.xyz/disaster-recovery: "Disaster recovery monitoring with business continuity and failover tracking"
    operations.veridis.xyz/change-management: "Change management monitoring with impact analysis and validation procedures"

    # Documentation and procedures
    veridis.xyz/owner: "platform-team@veridis.xyz"
    veridis.xyz/monitoring-admin: "redis-monitoring-admin@veridis.xyz"
    veridis.xyz/escalation: "platform-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "infrastructure-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/infrastructure/redis/primary-monitoring"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/redis/primary-monitoring-operations"
    veridis.xyz/dashboard: "https://grafana.veridis.xyz/d/redis-primary/redis-primary-dashboard"
    veridis.xyz/alerts: "https://alertmanager.veridis.xyz/#/alerts?filter=%7Bservice%3D%22redis-primary%22%7D"

    # Monitoring configuration annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
    prometheus.io/scheme: "https"

# ServiceMonitor specification for Redis primary
spec:
  # Target service selector
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: veridis-production
      app.kubernetes.io/component: primary
      redis.veridis.xyz/role: cache-primary

  # Endpoint configuration
  endpoints:
  - port: metrics
    path: /metrics
    scheme: https

    # High-frequency monitoring for critical service
    interval: 15s
    scrapeTimeout: 10s

    # TLS configuration for secure metrics collection
    tlsConfig:
      caFile: /etc/prometheus/secrets/redis-tls/ca.crt
      certFile: /etc/prometheus/secrets/redis-tls/tls.crt
      keyFile: /etc/prometheus/secrets/redis-tls/tls.key
      serverName: redis-primary.veridis-cache.svc.cluster.local
      insecureSkipVerify: false

    # Authentication configuration
    basicAuth:
      username:
        name: redis-monitoring-auth
        key: username
      password:
        name: redis-monitoring-auth
        key: password

    # Advanced metric collection configuration
    metricRelabelings:
    # ==============================================================================
    # Performance Metrics Relabeling
    # ==============================================================================
    # Add instance role label
    - sourceLabels: [__meta_kubernetes_pod_label_redis_veridis_xyz_role]
      targetLabel: redis_role
      action: replace

    # Add environment label
    - sourceLabels: [__meta_kubernetes_namespace]
      targetLabel: environment
      action: replace

    # Add business unit label
    - sourceLabels: [__meta_kubernetes_pod_label_veridis_xyz_business_unit]
      targetLabel: business_unit
      action: replace

    # Add cost center label
    - sourceLabels: [__meta_kubernetes_pod_label_veridis_xyz_cost_center]
      targetLabel: cost_center
      action: replace

    # Add SLA target label
    - sourceLabels: [__meta_kubernetes_pod_label_business_veridis_xyz_sla_monitoring]
      targetLabel: sla_target
      action: replace

    # ==============================================================================
    # Business Metrics Relabeling
    # ==============================================================================
    # Add service tier label
    - sourceLabels: [__meta_kubernetes_pod_label_monitor_veridis_xyz_tier]
      targetLabel: service_tier
      action: replace

    # Add criticality label
    - sourceLabels: [__meta_kubernetes_pod_label_business_veridis_xyz_criticality]
      targetLabel: service_criticality
      action: replace

    # Add monitoring level label
    - sourceLabels: [__meta_kubernetes_pod_label_monitor_veridis_xyz_monitoring_level]
      targetLabel: monitoring_level
      action: replace

    # ==============================================================================
    # Security and Compliance Metrics Relabeling
    # ==============================================================================
    # Add compliance framework labels
    - sourceLabels: [__meta_kubernetes_pod_label_compliance_veridis_xyz_soc2]
      targetLabel: soc2_compliance
      action: replace

    - sourceLabels: [__meta_kubernetes_pod_label_compliance_veridis_xyz_gdpr]
      targetLabel: gdpr_compliance
      action: replace

    - sourceLabels: [__meta_kubernetes_pod_label_compliance_veridis_xyz_iso27001]
      targetLabel: iso27001_compliance
      action: replace

    # Add security monitoring label
    - sourceLabels: [__meta_kubernetes_pod_label_security_veridis_xyz_audit_monitoring]
      targetLabel: security_monitoring
      action: replace

    # ==============================================================================
    # Custom Metrics Enhancement
    # ==============================================================================
    # Enhance Redis info metrics with business context
    - sourceLabels: [__name__]
      regex: 'redis_info_memory_used_bytes'
      targetLabel: metric_category
      replacement: 'performance'
      action: replace

    - sourceLabels: [__name__]
      regex: 'redis_connected_clients'
      targetLabel: metric_category
      replacement: 'capacity'
      action: replace

    - sourceLabels: [__name__]
      regex: 'redis_keyspace_hits_total'
      targetLabel: metric_category
      replacement: 'business'
      action: replace

    # Drop unnecessary metrics for performance
    - sourceLabels: [__name__]
      regex: 'redis_debug_.*'
      action: drop

    - sourceLabels: [__name__]
      regex: 'redis_slowlog_.*'
      action: drop

    # ==============================================================================
    # Veridis-Specific Metrics Enhancement
    # ==============================================================================
    # Add Veridis session metrics context
    - sourceLabels: [__name__]
      regex: 'veridis_session_.*'
      targetLabel: veridis_metric_type
      replacement: 'session_management'
      action: replace

    # Add Veridis authentication metrics context
    - sourceLabels: [__name__]
      regex: 'veridis_auth_.*'
      targetLabel: veridis_metric_type
      replacement: 'authentication'
      action: replace

    # Add Veridis rate limiting metrics context
    - sourceLabels: [__name__]
      regex: 'veridis_rate_.*'
      targetLabel: veridis_metric_type
      replacement: 'rate_limiting'
      action: replace

    # Add Veridis analytics metrics context
    - sourceLabels: [__name__]
      regex: 'veridis_analytics_.*'
      targetLabel: veridis_metric_type
      replacement: 'analytics'
      action: replace

  # Namespace selector
  namespaceSelector:
    matchNames:
    - veridis-cache

  # Additional monitoring configuration
  jobLabel: redis-primary

  # Advanced sampling configuration
  sampleLimit: 10000
  targetLimit: 5000
  labelLimit: 50
  labelNameLengthLimit: 200
  labelValueLengthLimit: 500

---
# ==============================================================================
# Redis Replica ServiceMonitor - Read Performance Monitoring
# ==============================================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-replica-monitor
  namespace: veridis-cache

  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "7.2.4"
    app.kubernetes.io/component: replica-monitor
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    monitor.veridis.xyz/type: redis-replica
    monitor.veridis.xyz/tier: enterprise
    monitor.veridis.xyz/role: replica-monitoring
    monitor.veridis.xyz/monitoring-level: detailed
    monitor.veridis.xyz/alerting-priority: high

    monitoring.veridis.xyz/scope: read-optimized
    monitoring.veridis.xyz/intelligence: pattern-aware
    monitoring.veridis.xyz/resolution: standard
    monitoring.veridis.xyz/analytics: read-focused

    business.veridis.xyz/criticality: business-critical
    business.veridis.xyz/impact: read-performance
    business.veridis.xyz/sla-monitoring: "99.9"
    business.veridis.xyz/read-scaling: "true"
    business.veridis.xyz/analytics-workload: "true"

    performance.veridis.xyz/read-monitoring: comprehensive
    performance.veridis.xyz/throughput-monitoring: detailed
    performance.veridis.xyz/latency-monitoring: standard
    performance.veridis.xyz/analytics-monitoring: specialized

    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    compliance.veridis.xyz/soc2: "replica-monitoring-control"
    compliance.veridis.xyz/gdpr: "read-data-protection"
    governance.veridis.xyz/policy-enforcement: "standard"

    integration.veridis.xyz/prometheus: "enabled"
    integration.veridis.xyz/grafana: "enabled"
    integration.veridis.xyz/alertmanager: "enabled"

  annotations:
    veridis.xyz/description: "Redis replica ServiceMonitor with read performance optimization, analytics monitoring, and scaling intelligence"
    veridis.xyz/purpose: "Provides comprehensive read performance monitoring for Redis replicas with analytics and scaling optimization"
    veridis.xyz/scope: "Replica Redis monitoring including read operations, analytics queries, and reporting workloads"

    # Replica monitoring strategy
    monitoring.veridis.xyz/replica-strategy: "Read-optimized monitoring with analytics workload intelligence and scaling coordination"
    monitoring.veridis.xyz/read-optimization: "Read performance monitoring with connection analysis and query optimization"
    monitoring.veridis.xyz/analytics-optimization: "Analytics workload monitoring with batch processing and streaming analysis"
    monitoring.veridis.xyz/scaling-intelligence: "Scaling intelligence with HPA coordination and capacity optimization"

    # Read performance specifications
    performance.veridis.xyz/read-latency: "Read latency monitoring with percentile analysis and geographic distribution"
    performance.veridis.xyz/throughput-analysis: "Read throughput analysis with connection multiplexing and query batching"
    performance.veridis.xyz/analytics-performance: "Analytics performance monitoring with parallel processing and aggregation"

    # Business intelligence specifications
    business.veridis.xyz/read-availability: "Read availability monitoring with multi-replica distribution and load balancing"
    business.veridis.xyz/analytics-availability: "Analytics availability monitoring with dedicated replica scaling and optimization"

    veridis.xyz/owner: "platform-team@veridis.xyz"
    veridis.xyz/replica-admin: "redis-replica-admin@veridis.xyz"
    veridis.xyz/documentation: "https://docs.veridis.xyz/infrastructure/redis/replica-monitoring"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: veridis-production
      app.kubernetes.io/component: replica
      redis.veridis.xyz/role: cache-replica

  endpoints:
  - port: metrics
    path: /metrics
    scheme: https

    # Standard frequency monitoring for read workloads
    interval: 30s
    scrapeTimeout: 15s

    # TLS configuration
    tlsConfig:
      caFile: /etc/prometheus/secrets/redis-tls/ca.crt
      certFile: /etc/prometheus/secrets/redis-tls/tls.crt
      keyFile: /etc/prometheus/secrets/redis-tls/tls.key
      serverName: redis-replica.veridis-cache.svc.cluster.local
      insecureSkipVerify: false

    # Authentication configuration
    basicAuth:
      username:
        name: redis-monitoring-auth
        key: username
      password:
        name: redis-monitoring-auth
        key: password

    # Replica-specific metric relabeling
    metricRelabelings:
    # Add replica-specific labels
    - sourceLabels: [__meta_kubernetes_pod_label_redis_veridis_xyz_role]
      targetLabel: redis_role
      replacement: 'replica'
      action: replace

    # Add read workload label
    - sourceLabels: [__name__]
      regex: 'redis_commands_processed_total'
      targetLabel: workload_type
      replacement: 'read-heavy'
      action: replace

    # Add analytics workload label
    - sourceLabels: [__name__]
      regex: 'veridis_analytics_.*'
      targetLabel: workload_type
      replacement: 'analytics'
      action: replace

    # Add replica instance label
    - sourceLabels: [__meta_kubernetes_pod_name]
      targetLabel: replica_instance
      action: replace

    # Add scaling coordination label
    - sourceLabels: [__meta_kubernetes_pod_label_hpa_veridis_xyz_type]
      targetLabel: scaling_type
      action: replace

    # Drop write-specific metrics for replicas
    - sourceLabels: [__name__]
      regex: 'redis_rdb_.*'
      action: drop

    - sourceLabels: [__name__]
      regex: 'redis_aof_.*'
      action: drop

  namespaceSelector:
    matchNames:
    - veridis-cache

  jobLabel: redis-replica
  sampleLimit: 8000
  targetLimit: 3000

---
# ==============================================================================
# Redis Cache ServiceMonitor - Cache Performance Monitoring
# ==============================================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-cache-monitor
  namespace: veridis-cache

  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "7.2.4"
    app.kubernetes.io/component: cache-monitor
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    monitor.veridis.xyz/type: redis-cache
    monitor.veridis.xyz/tier: enterprise
    monitor.veridis.xyz/role: cache-monitoring
    monitor.veridis.xyz/monitoring-level: specialized
    monitor.veridis.xyz/alerting-priority: high

    monitoring.veridis.xyz/scope: cache-optimized
    monitoring.veridis.xyz/intelligence: cache-aware
    monitoring.veridis.xyz/resolution: high-frequency
    monitoring.veridis.xyz/analytics: cache-focused

    business.veridis.xyz/criticality: business-critical
    business.veridis.xyz/impact: cache-performance
    business.veridis.xyz/session-impact: high
    business.veridis.xyz/auth-impact: high
    business.veridis.xyz/cache-efficiency: critical

    performance.veridis.xyz/hit-rate-monitoring: comprehensive
    performance.veridis.xyz/session-monitoring: detailed
    performance.veridis.xyz/auth-monitoring: specialized
    performance.veridis.xyz/rate-limit-monitoring: advanced

    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    compliance.veridis.xyz/soc2: "cache-monitoring-control"
    compliance.veridis.xyz/gdpr: "cache-data-protection"
    governance.veridis.xyz/policy-enforcement: "standard"

    integration.veridis.xyz/prometheus: "enabled"
    integration.veridis.xyz/grafana: "enabled"
    integration.veridis.xyz/alertmanager: "enabled"

  annotations:
    veridis.xyz/description: "Redis cache ServiceMonitor with specialized cache monitoring, hit rate optimization, and session analytics"
    veridis.xyz/purpose: "Provides comprehensive cache performance monitoring with hit rate optimization, session analytics, and authentication monitoring"
    veridis.xyz/scope: "Cache Redis monitoring including session storage, authentication caching, rate limiting, and cache efficiency"

    # Cache monitoring strategy
    monitoring.veridis.xyz/cache-strategy: "Cache-optimized monitoring with hit rate analysis, session tracking, and authentication performance"
    monitoring.veridis.xyz/hit-rate-optimization: "Cache hit rate monitoring with efficiency analysis and optimization recommendations"
    monitoring.veridis.xyz/session-analytics: "Session analytics with user activity patterns and performance optimization"
    monitoring.veridis.xyz/auth-performance: "Authentication performance monitoring with security and speed optimization"

    # Cache performance specifications
    performance.veridis.xyz/cache-efficiency: "Cache efficiency monitoring with hit rate analysis and optimization recommendations"
    performance.veridis.xyz/session-performance: "Session performance monitoring with connection analysis and data locality optimization"
    performance.veridis.xyz/auth-performance: "Authentication performance monitoring with security validation and speed optimization"

    veridis.xyz/owner: "platform-team@veridis.xyz"
    veridis.xyz/cache-admin: "redis-cache-admin@veridis.xyz"
    veridis.xyz/documentation: "https://docs.veridis.xyz/infrastructure/redis/cache-monitoring"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: veridis-production
      app.kubernetes.io/component: cache
      redis.veridis.xyz/role: cache-instance

  endpoints:
  - port: metrics
    path: /metrics
    scheme: https

    # High-frequency monitoring for cache efficiency
    interval: 20s
    scrapeTimeout: 10s

    # TLS configuration
    tlsConfig:
      caFile: /etc/prometheus/secrets/redis-tls/ca.crt
      certFile: /etc/prometheus/secrets/redis-tls/tls.crt
      keyFile: /etc/prometheus/secrets/redis-tls/tls.key
      serverName: redis-cache.veridis-cache.svc.cluster.local
      insecureSkipVerify: false

    # Authentication configuration
    basicAuth:
      username:
        name: redis-monitoring-auth
        key: username
      password:
        name: redis-monitoring-auth
        key: password

    # Cache-specific metric relabeling
    metricRelabelings:
    # Add cache-specific labels
    - sourceLabels: [__meta_kubernetes_pod_label_redis_veridis_xyz_role]
      targetLabel: redis_role
      replacement: 'cache'
      action: replace

    # Add cache workload labels
    - sourceLabels: [__name__]
      regex: 'redis_keyspace_hits_total'
      targetLabel: cache_metric_type
      replacement: 'hit_rate'
      action: replace

    - sourceLabels: [__name__]
      regex: 'redis_keyspace_misses_total'
      targetLabel: cache_metric_type
      replacement: 'miss_rate'
      action: replace

    - sourceLabels: [__name__]
      regex: 'redis_evicted_keys_total'
      targetLabel: cache_metric_type
      replacement: 'eviction'
      action: replace

    # Add Veridis cache-specific labels
    - sourceLabels: [__name__]
      regex: 'veridis_session_.*'
      targetLabel: veridis_cache_type
      replacement: 'session_cache'
      action: replace

    - sourceLabels: [__name__]
      regex: 'veridis_auth_.*'
      targetLabel: veridis_cache_type
      replacement: 'auth_cache'
      action: replace

    - sourceLabels: [__name__]
      regex: 'veridis_rate_.*'
      targetLabel: veridis_cache_type
      replacement: 'rate_limit_cache'
      action: replace

    # Add cache instance identification
    - sourceLabels: [__meta_kubernetes_pod_name]
      targetLabel: cache_instance
      action: replace

    # Add cache tier label
    - sourceLabels: [__meta_kubernetes_pod_label_hpa_veridis_xyz_type]
      targetLabel: cache_tier
      action: replace

    # Focus on cache-relevant metrics
    - sourceLabels: [__name__]
      regex: 'redis_replication_.*'
      action: drop

    - sourceLabels: [__name__]
      regex: 'redis_persistence_.*'
      action: drop

  namespaceSelector:
    matchNames:
    - veridis-cache

  jobLabel: redis-cache
  sampleLimit: 12000
  targetLimit: 4000

---
# ==============================================================================
# Redis Sentinel ServiceMonitor - Cluster Management Monitoring
# ==============================================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-sentinel-monitor
  namespace: veridis-cache

  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "7.2.4"
    app.kubernetes.io/component: sentinel-monitor
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    monitor.veridis.xyz/type: redis-sentinel
    monitor.veridis.xyz/tier: enterprise
    monitor.veridis.xyz/role: sentinel-monitoring
    monitor.veridis.xyz/monitoring-level: critical
    monitor.veridis.xyz/alerting-priority: critical

    monitoring.veridis.xyz/scope: cluster-management
    monitoring.veridis.xyz/intelligence: quorum-aware
    monitoring.veridis.xyz/resolution: high-frequency
    monitoring.veridis.xyz/analytics: cluster-focused

    business.veridis.xyz/criticality: infrastructure-critical
    business.veridis.xyz/impact: cluster-availability
    business.veridis.xyz/failover-capability: required
    business.veridis.xyz/monitoring-capability: required

    performance.veridis.xyz/cluster-monitoring: comprehensive
    performance.veridis.xyz/failover-monitoring: critical
    performance.veridis.xyz/quorum-monitoring: essential
    performance.veridis.xyz/health-monitoring: detailed

    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    compliance.veridis.xyz/soc2: "sentinel-monitoring-control"
    compliance.veridis.xyz/gdpr: "cluster-management-protection"
    governance.veridis.xyz/policy-enforcement: "strict"

    integration.veridis.xyz/prometheus: "enabled"
    integration.veridis.xyz/grafana: "enabled"
    integration.veridis.xyz/alertmanager: "enabled"
    integration.veridis.xyz/pagerduty: "critical"

  annotations:
    veridis.xyz/description: "Redis Sentinel ServiceMonitor with cluster management monitoring, quorum tracking, and failover analytics"
    veridis.xyz/purpose: "Provides comprehensive Sentinel monitoring with cluster health, quorum status, and failover capability tracking"
    veridis.xyz/scope: "Sentinel monitoring including cluster management, failover coordination, and health tracking"

    # Sentinel monitoring strategy
    monitoring.veridis.xyz/sentinel-strategy: "Quorum-aware monitoring with cluster health tracking and failover analytics"
    monitoring.veridis.xyz/quorum-monitoring: "Sentinel quorum monitoring with decision-making capability and health tracking"
    monitoring.veridis.xyz/failover-monitoring: "Failover monitoring with automated detection and recovery analytics"
    monitoring.veridis.xyz/cluster-health: "Cluster health monitoring with comprehensive tracking and alerting"

    # Cluster management specifications
    cluster.veridis.xyz/management-monitoring: "Cluster management monitoring with Sentinel coordination and health tracking"
    cluster.veridis.xyz/health-analytics: "Cluster health analytics with trend analysis and capacity planning"
    cluster.veridis.xyz/failover-analytics: "Failover analytics with recovery time tracking and optimization"

    veridis.xyz/owner: "platform-team@veridis.xyz"
    veridis.xyz/sentinel-admin: "redis-sentinel-admin@veridis.xyz"
    veridis.xyz/documentation: "https://docs.veridis.xyz/infrastructure/redis/sentinel-monitoring"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: veridis-production
      app.kubernetes.io/component: sentinel
      redis.veridis.xyz/role: sentinel

  endpoints:
  - port: metrics
    path: /metrics
    scheme: https

    # Critical monitoring for cluster management
    interval: 10s
    scrapeTimeout: 5s

    # TLS configuration
    tlsConfig:
      caFile: /etc/prometheus/secrets/redis-tls/ca.crt
      certFile: /etc/prometheus/secrets/redis-tls/tls.crt
      keyFile: /etc/prometheus/secrets/redis-tls/tls.key
      serverName: redis-sentinel.veridis-cache.svc.cluster.local
      insecureSkipVerify: false

    # Authentication configuration
    basicAuth:
      username:
        name: redis-monitoring-auth
        key: username
      password:
        name: redis-monitoring-auth
        key: password

    # Sentinel-specific metric relabeling
    metricRelabelings:
    # Add sentinel-specific labels
    - sourceLabels: [__meta_kubernetes_pod_label_redis_veridis_xyz_role]
      targetLabel: redis_role
      replacement: 'sentinel'
      action: replace

    # Add quorum labels
    - sourceLabels: [__name__]
      regex: 'redis_sentinel_.*'
      targetLabel: sentinel_metric_type
      replacement: 'cluster_management'
      action: replace

    # Add failover labels
    - sourceLabels: [__name__]
      regex: 'redis_sentinel_failover_.*'
      targetLabel: sentinel_metric_type
      replacement: 'failover'
      action: replace

    # Add sentinel instance identification
    - sourceLabels: [__meta_kubernetes_pod_name]
      targetLabel: sentinel_instance
      action: replace

    # Add quorum status
    - sourceLabels: [__meta_kubernetes_pod_label_pdb_veridis_xyz_protection_level]
      targetLabel: quorum_protection
      action: replace

    # Focus on sentinel-relevant metrics
    - sourceLabels: [__name__]
      regex: 'redis_keyspace_.*'
      action: drop

    - sourceLabels: [__name__]
      regex: 'redis_memory_.*'
      action: drop

  namespaceSelector:
    matchNames:
    - veridis-cache

  jobLabel: redis-sentinel
  sampleLimit: 5000
  targetLimit: 2000

---
# ==============================================================================
# Redis Exporter ServiceMonitor - Metrics Collection Monitoring
# ==============================================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-exporter-monitor
  namespace: veridis-cache

  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "7.2.4"
    app.kubernetes.io/component: exporter-monitor
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    monitor.veridis.xyz/type: redis-exporter
    monitor.veridis.xyz/tier: enterprise
    monitor.veridis.xyz/role: metrics-collection
    monitor.veridis.xyz/monitoring-level: comprehensive
    monitor.veridis.xyz/alerting-priority: medium

    monitoring.veridis.xyz/scope: metrics-collection
    monitoring.veridis.xyz/intelligence: observability-focused
    monitoring.veridis.xyz/resolution: standard
    monitoring.veridis.xyz/analytics: metrics-focused

    business.veridis.xyz/criticality: operational
    business.veridis.xyz/impact: observability
    business.veridis.xyz/metrics-collection: comprehensive
    business.veridis.xyz/alerting-capability: required

    performance.veridis.xyz/metrics-performance: optimized
    performance.veridis.xyz/collection-efficiency: high
    performance.veridis.xyz/export-performance: standard

    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: infrastructure
    veridis.xyz/business-unit: identity-protocol

    compliance.veridis.xyz/soc2: "metrics-monitoring-control"
    compliance.veridis.xyz/gdpr: "metrics-data-protection"
    governance.veridis.xyz/policy-enforcement: "standard"

    integration.veridis.xyz/prometheus: "enabled"
    integration.veridis.xyz/grafana: "enabled"

  annotations:
    veridis.xyz/description: "Redis Exporter ServiceMonitor with comprehensive metrics collection, export performance, and observability analytics"
    veridis.xyz/purpose: "Provides monitoring for Redis Exporter with metrics collection performance and export efficiency tracking"
    veridis.xyz/scope: "Exporter monitoring including metrics collection, export performance, and observability operations"

    # Exporter monitoring strategy
    monitoring.veridis.xyz/exporter-strategy: "Metrics collection monitoring with export performance and observability efficiency"
    monitoring.veridis.xyz/collection-monitoring: "Metrics collection monitoring with performance and efficiency tracking"
    monitoring.veridis.xyz/export-performance: "Export performance monitoring with throughput and latency analysis"

    veridis.xyz/owner: "platform-team@veridis.xyz"
    veridis.xyz/exporter-admin: "redis-exporter-admin@veridis.xyz"
    veridis.xyz/documentation: "https://docs.veridis.xyz/infrastructure/redis/exporter-monitoring"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: veridis-production
      app.kubernetes.io/component: exporter
      redis.veridis.xyz/role: metrics-exporter

  endpoints:
  - port: metrics
    path: /metrics
    scheme: http

    # Standard monitoring for metrics collection
    interval: 60s
    scrapeTimeout: 30s

    # Exporter-specific metric relabeling
    metricRelabelings:
    # Add exporter labels
    - sourceLabels: [__meta_kubernetes_pod_label_redis_veridis_xyz_role]
      targetLabel: redis_role
      replacement: 'exporter'
      action: replace

    # Add metrics collection labels
    - sourceLabels: [__name__]
      regex: 'redis_exporter_.*'
      targetLabel: exporter_metric_type
      replacement: 'collection_performance'
      action: replace

    # Add exporter instance identification
    - sourceLabels: [__meta_kubernetes_pod_name]
      targetLabel: exporter_instance
      action: replace

  namespaceSelector:
    matchNames:
    - veridis-cache

  jobLabel: redis-exporter
  sampleLimit: 3000
  targetLimit: 1000

# ==============================================================================
# Redis ServiceMonitor Summary and Enterprise Monitoring Architecture
# ==============================================================================
#
# COMPREHENSIVE REDIS SERVICEMONITOR STRATEGY:
# ============================================
#
# REDIS MONITORING ARCHITECTURE OVERVIEW:
# ---------------------------------------
# 1. Redis Primary ServiceMonitor (redis-primary-monitor):
#    - Comprehensive monitoring with 15s intervals and 10s timeouts for critical service
#    - Multi-tier metrics collection with performance, business, and security analytics
#    - Advanced metric relabeling with business context and compliance integration
#    - ML-enhanced monitoring with anomaly detection and predictive analytics
#    - Complete observability with Prometheus, Grafana, AlertManager integration
#
# 2. Redis Replica ServiceMonitor (redis-replica-monitor):
#    - Read-optimized monitoring with 30s intervals for performance efficiency
#    - Specialized read performance metrics with analytics workload intelligence
#    - Scaling coordination with HPA integration and capacity optimization
#    - Business intelligence with read availability and analytics performance
#    - Cost-efficient monitoring with balanced resolution and resource optimization
#
# 3. Redis Cache ServiceMonitor (redis-cache-monitor):
#    - Cache-specialized monitoring with 20s intervals for hit rate optimization
#    - Comprehensive cache metrics with session, authentication, and rate limiting
#    - Hit rate analysis with efficiency optimization and performance tuning
#    - Business-critical monitoring with user experience and service impact analysis
#    - Advanced cache analytics with warming optimization and consistency tracking
#
# 4. Redis Sentinel ServiceMonitor (redis-sentinel-monitor):
#    - Critical cluster monitoring with 10s intervals for immediate failover detection
#    - Quorum-aware monitoring with cluster health and failover capability tracking
#    - Infrastructure-critical alerts with PagerDuty integration and emergency response
#    - Cluster management analytics with health trends and capacity planning
#    - Comprehensive failover monitoring with recovery time and optimization analysis
#
# 5. Redis Exporter ServiceMonitor (redis-exporter-monitor):
#    - Metrics collection monitoring with 60s intervals for observability efficiency
#    - Export performance tracking with throughput and latency optimization
#    - Observability-focused monitoring with collection efficiency and quality assurance
#    - Standard monitoring with balanced resource utilization and performance
#    - Metrics pipeline monitoring with end-to-end observability and validation
#
# ENTERPRISE MONITORING FEATURES:
# ===============================
# Advanced Metrics Collection:
#   - Multi-frequency monitoring with workload-specific intervals and timeouts
#   - Comprehensive metric relabeling with business context and intelligence
#   - Custom metrics enhancement with Veridis-specific KPIs and business analytics
#   - Security metrics integration with compliance tracking and audit requirements
#   - Performance optimization with intelligent sampling and resource efficiency
#
# Business Intelligence Integration:
#   - Session management monitoring with user activity patterns and performance analytics
#   - Authentication monitoring with security metrics and login pattern analysis
#   - Cache efficiency monitoring with hit rates and performance optimization
#   - Rate limiting monitoring with traffic patterns and DDoS protection metrics
#   - Analytics monitoring with data processing and reporting performance tracking
#
# Compliance and Security Monitoring:
#   - SOC 2 Type II monitoring controls with comprehensive audit requirements
#   - GDPR monitoring compliance with data protection and privacy metrics
#   - ISO 27001 monitoring security with access controls and audit trails
#   - Security monitoring with threat detection and incident response integration
#   - Regulatory compliance with automated validation and reporting capabilities
#
# Advanced Analytics and Intelligence:
#   - ML-enhanced monitoring with anomaly detection and pattern recognition
#   - Predictive analytics with capacity planning and demand forecasting
#   - Business impact analysis with cost correlation and optimization recommendations
#   - Performance optimization with intelligent threshold management and tuning
#   - Trend analysis with comprehensive capacity planning and resource optimization
#
# OPERATIONAL EXCELLENCE:
# ======================
# Monitoring Automation:
#   - Full automation with intelligent monitoring and human oversight capabilities
#   - Automated alerting with intelligent escalation and response procedures
#   - Self-healing monitoring with automated recovery and optimization procedures
#   - Comprehensive validation with health checks and quality assurance integration
#   - Continuous optimization with performance tuning and efficiency improvements
#
# Integration and Coordination:
#   - Prometheus integration with advanced metrics collection and storage
#   - Grafana integration with comprehensive dashboards and visualization
#   - AlertManager integration with intelligent alerting and escalation
#   - PagerDuty integration for critical alerts and emergency response
#   - Business intelligence integration with KPI tracking and decision support
#
# Performance and Efficiency:
#   - Intelligent sampling with performance optimization and resource efficiency
#   - Metric optimization with focused collection and intelligent filtering
#   - Resource efficiency with balanced monitoring load and performance impact
#   - Cost optimization with intelligent resource allocation and usage tracking
#   - Scalability optimization with distributed monitoring and load balancing
#
# Documentation and Procedures:
#   - Comprehensive documentation with monitoring procedures and best practices
#   - Runbook integration with operational procedures and troubleshooting guides
#   - Dashboard integration with real-time visualization and analysis tools
#   - Alert documentation with escalation procedures and response protocols
#   - Training integration with monitoring expertise and skill development
#
# ==============================================================================
