# ==============================================================================
# Veridis Decentralized Identity Protocol - StarkNet DevNet ConfigMap
# ==============================================================================
#
# This manifest defines comprehensive StarkNet DevNet configuration for the
# Veridis deployment, providing:
#
# ENTERPRISE STARKNET DEVNET CONFIGURATION ARCHITECTURE:
#   • Advanced DevNet configuration with comprehensive blockchain simulation and development
#   • Multi-tier configuration architecture with development, testing, staging, and production-like settings
#   • Comprehensive DevNet optimization with Cairo v2.11.4 integration and MLIR acceleration
#   • Advanced DevNet lifecycle configuration with automated provisioning, scaling, and optimization
#   • Enterprise-grade DevNet intelligence with comprehensive analytics and performance insights
#
# STARKNET DEVNET CONFIGURATION OPTIMIZATION:
#   • High-performance blockchain configuration with Cairo v2.11.4 integration and MLIR optimization
#   • Intelligent block production configuration with timing optimization and transaction throughput
#   • Advanced state management configuration with persistent storage, snapshots, and rollback capabilities
#   • Comprehensive transaction processing configuration with batching, prioritization, and fee optimization
#   • Enterprise DevNet acceleration configuration with GPU support for proof generation and validation
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II DevNet configuration controls with comprehensive audit and development requirements
#   • GDPR DevNet configuration compliance with data protection, privacy controls, and deletion procedures
#   • ISO 27001 DevNet configuration security management with comprehensive framework integration
#   • NIST 800-190 container configuration with DevNet-specific validation and compliance
#   • Blockchain configuration compliance with regulatory frameworks and development best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent DevNet configuration lifecycle management with automated provisioning and optimization
#   • Predictive DevNet configuration analytics with capacity planning and performance intelligence
#   • Advanced monitoring integration with DevNet configuration analytics and business intelligence
#   • Comprehensive backup and recovery configuration with state preservation and disaster preparedness
#   • Business continuity DevNet configuration with failover capabilities and redundancy optimization
#
# CAIRO V2.11.4 BUSINESS INTELLIGENCE:
#   • DevNet configuration usage analytics with development patterns and optimization recommendations
#   • Performance monitoring configuration with transaction latency and throughput optimization intelligence
#   • Development efficiency configuration with testing analytics and deployment optimization procedures
#   • Cost optimization configuration with resource utilization analysis and capacity planning procedures
#   • Quality assurance configuration with testing metrics and development validation procedures
#
# ==============================================================================

# ==============================================================================
# StarkNet DevNet Primary Configuration - Core Blockchain Settings
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: starknet-devnet-config
  namespace: veridis-infrastructure

  # Core StarkNet DevNet configuration identification labels
  labels:
    app.kubernetes.io/name: starknet-devnet
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "0.1.25"
    app.kubernetes.io/component: blockchain-configuration
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Configuration specific classification
    config.veridis.xyz/type: starknet-devnet
    config.veridis.xyz/category: blockchain-configuration
    config.veridis.xyz/role: primary-configuration
    config.veridis.xyz/security-level: development
    config.veridis.xyz/performance-tier: high

    # Cairo configuration classification
    cairo.veridis.xyz/version: "v2.11.4"
    cairo.veridis.xyz/optimization: mlir-enabled
    cairo.veridis.xyz/features: comprehensive
    cairo.veridis.xyz/gpu-acceleration: enabled
    cairo.veridis.xyz/development-mode: advanced

    # Performance configuration classification
    performance.veridis.xyz/tier: high-performance
    performance.veridis.xyz/optimization: mlir-acceleration
    performance.veridis.xyz/gpu-support: enabled
    performance.veridis.xyz/parallel-processing: enabled
    performance.veridis.xyz/memory-optimization: vec-storage

    # Development configuration classification
    development.veridis.xyz/environment: local-development
    development.veridis.xyz/testing-support: comprehensive
    development.veridis.xyz/debugging: enabled
    development.veridis.xyz/state-management: persistent
    development.veridis.xyz/snapshot-support: enabled

    # Business configuration classification
    business.veridis.xyz/criticality: development-critical
    business.veridis.xyz/impact: development-velocity
    business.veridis.xyz/cost-tier: development
    business.veridis.xyz/sla-tier: development
    business.veridis.xyz/availability-requirement: high

    # Operational configuration labels
    veridis.xyz/environment: production
    veridis.xyz/team: blockchain-engineering
    veridis.xyz/cost-center: development-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "devnet-configuration-control-framework"
    compliance.veridis.xyz/gdpr: "devnet-configuration-data-protection"
    compliance.veridis.xyz/iso27001: "devnet-configuration-security-management"
    compliance.veridis.xyz/nist-800-190: "devnet-configuration-container-security"
    governance.veridis.xyz/policy-enforcement: "development"

    # Configuration monitoring and analytics
    monitoring.veridis.xyz/config-monitoring: "enabled"
    monitoring.veridis.xyz/performance-monitoring: "comprehensive"
    monitoring.veridis.xyz/development-analytics: "enabled"
    monitoring.veridis.xyz/usage-monitoring: "detailed"
    monitoring.veridis.xyz/quality-monitoring: "enabled"

  annotations:
    # Configuration purpose and specifications
    veridis.xyz/description: "Enterprise StarkNet DevNet configuration for Veridis with Cairo v2.11.4 integration and comprehensive development features"
    veridis.xyz/purpose: "Provides high-performance blockchain configuration for development, testing, and integration with comprehensive analytics"
    veridis.xyz/scope: "DevNet configuration including blockchain settings, Cairo optimization, GPU acceleration, and development analytics"

    # Configuration architecture and design
    config.veridis.xyz/architecture: "Enterprise StarkNet DevNet configuration with Cairo v2.11.4, MLIR optimization, and comprehensive development features"
    config.veridis.xyz/design-pattern: "High-performance configuration with persistent state, snapshots, debugging, and development intelligence"
    config.veridis.xyz/security-model: "Development security configuration with network isolation, access controls, and comprehensive monitoring"
    config.veridis.xyz/performance-model: "High-performance configuration with GPU acceleration, parallel processing, and optimization"

    # Cairo configuration specifications
    cairo.veridis.xyz/development-specification: "Cairo v2.11.4 configuration with MLIR optimization, GPU acceleration, and comprehensive development features"
    cairo.veridis.xyz/optimization-specification: "MLIR-enabled optimization configuration with 5x faster compilation and advanced performance features"
    cairo.veridis.xyz/gpu-specification: "GPU acceleration configuration with CUDA support for proof generation and validation optimization"
    cairo.veridis.xyz/features-specification: "Comprehensive Cairo features configuration including debugging, profiling, and development intelligence"

    # Performance configuration specifications
    performance.veridis.xyz/transaction-specification: "High-throughput transaction processing configuration with batching and optimization capabilities"
    performance.veridis.xyz/block-specification: "Configurable block production configuration with timing optimization and resource management"
    performance.veridis.xyz/state-specification: "Advanced state management configuration with persistent storage and snapshot capabilities"
    performance.veridis.xyz/memory-specification: "Vec-based memory optimization configuration with intelligent resource management and efficiency"

    # Development configuration specifications
    development.veridis.xyz/testing-specification: "Comprehensive testing support configuration with debugging, profiling, and validation capabilities"
    development.veridis.xyz/debugging-specification: "Advanced debugging configuration with transaction tracing, state inspection, and error analysis"
    development.veridis.xyz/integration-specification: "Seamless integration configuration with development tools, IDEs, and testing frameworks"
    development.veridis.xyz/analytics-specification: "Development analytics configuration with usage patterns and optimization recommendations"

    # Business configuration specifications
    business.veridis.xyz/velocity-specification: "Development velocity optimization configuration with fast iteration and comprehensive testing"
    business.veridis.xyz/efficiency-specification: "Resource efficiency configuration with intelligent management and cost optimization"
    business.veridis.xyz/quality-specification: "Quality assurance configuration with comprehensive testing and validation procedures"
    business.veridis.xyz/productivity-specification: "Developer productivity configuration with advanced tooling and automation capabilities"

    # Operational configuration specifications
    operations.veridis.xyz/automation-specification: "Full automation configuration with intelligent management and developer-friendly interfaces"
    operations.veridis.xyz/monitoring-specification: "Comprehensive monitoring configuration with development analytics and performance intelligence"
    operations.veridis.xyz/maintenance-specification: "Automated maintenance configuration with state preservation and optimization procedures"
    operations.veridis.xyz/scaling-specification: "Intelligent scaling configuration with development load management and resource optimization"

    # Configuration lifecycle specifications
    lifecycle.veridis.xyz/provisioning-specification: "Dynamic provisioning configuration with automated setup and configuration management"
    lifecycle.veridis.xyz/state-specification: "State lifecycle management configuration with persistence, snapshots, and rollback capabilities"
    lifecycle.veridis.xyz/optimization-specification: "Performance optimization configuration with intelligent tuning and resource management"
    lifecycle.veridis.xyz/decommissioning-specification: "Safe decommissioning configuration with state preservation and data migration"

    # Documentation and procedures
    veridis.xyz/owner: "blockchain-team@veridis.xyz"
    veridis.xyz/config-admin: "starknet-config-admin@veridis.xyz"
    veridis.xyz/escalation: "blockchain-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "blockchain-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/infrastructure/starknet/devnet-configuration"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/starknet/configuration-management"
    veridis.xyz/configuration-docs: "https://config.veridis.xyz/starknet/devnet-configuration"
    veridis.xyz/cairo-docs: "https://cairo.veridis.xyz/configuration/devnet-integration"

    # Configuration management annotations
    config.k8s.io/local-config: "true"
    config.kubernetes.io/watched: "true"

data:
  # ==============================================================================
  # Core DevNet Configuration
  # ==============================================================================

  # Primary DevNet server configuration
  devnet_host: "0.0.0.0"
  devnet_port: "5050"
  devnet_websocket_port: "5051"
  devnet_timeout: "120"
  devnet_max_connections: "1000"
  devnet_connection_timeout: "30"

  # Chain and network configuration
  chain_id: "SN_SEPOLIA"
  network_id: "veridis-devnet"
  block_generation_on: "transaction"
  block_time: "10"
  gas_price_wei: "100000000000"
  gas_price_strk: "1000000000000000"
  data_gas_price_wei: "1"
  data_gas_price_strk: "1"

  # Account configuration with enhanced development features
  accounts: "20"
  initial_balance: "1000000000000000000000"
  seed: "veridis-development-seed-42"
  account_class_hash: "0x61dac032f228abef9c6626f995015233097ae253a7f72d68552db02f2971b8f"

  # ==============================================================================
  # Cairo v2.11.4 Advanced Configuration
  # ==============================================================================

  # Cairo version and optimization settings
  cairo_version: "2.11.4"
  cairo_optimization_level: "3"
  cairo_mlir_enabled: "true"
  cairo_gpu_acceleration: "true"
  cairo_parallel_compilation: "true"
  cairo_compilation_cache: "true"
  cairo_debug_info: "true"
  cairo_profiling_enabled: "true"
  cairo_trace_enabled: "true"

  # Cairo resource fee weights for accurate cost simulation
  cairo_resource_fee_weights: |
    {
      "n_steps": 1,
      "pedersen_builtin": 32,
      "range_check_builtin": 16,
      "ecdsa_builtin": 2048,
      "bitwise_builtin": 64,
      "ec_op_builtin": 1024,
      "keccak_builtin": 2048,
      "poseidon_builtin": 32
    }

  # Cairo VM configuration for enhanced performance
  cairo_vm_config: |
    {
      "proof_mode": false,
      "secure_run": false,
      "cairo_pie_output": false,
      "relocate_traces": true,
      "layout": "all_cairo",
      "trace_enabled": true,
      "memory_enabled": true,
      "disable_trace_padding": false,
      "allow_missing_builtins": false
    }

  # ==============================================================================
  # Performance and GPU Acceleration Configuration
  # ==============================================================================

  # GPU acceleration settings
  gpu_enabled: "true"
  cuda_visible_devices: "0"
  gpu_memory_fraction: "0.8"
  gpu_parallel_execution: "true"
  gpu_batch_size: "32"
  gpu_optimization_level: "3"

  # Performance optimization settings
  parallel_execution: "true"
  max_parallel_transactions: "100"
  transaction_batch_size: "50"
  memory_optimization: "vec_storage"
  cache_enabled: "true"
  cache_size: "1024"
  precompile_contracts: "true"

  # Thread pool configuration
  worker_threads: "8"
  async_runtime_threads: "4"
  blocking_threads: "16"

  # ==============================================================================
  # State Management and Persistence Configuration
  # ==============================================================================

  # State persistence configuration
  state_archive_capacity: "1000"
  state_snapshot_interval: "100"
  state_persistence_enabled: "true"
  state_backup_enabled: "true"
  state_compression_enabled: "true"
  state_checkpointing_enabled: "true"

  # Fork configuration for mainnet integration
  fork_network: ""
  fork_block_number: ""
  fork_retry_interval: "5"

  # Database configuration for state storage
  database_url: "sqlite:///app/state/devnet.db"
  database_pool_size: "10"
  database_timeout: "30"
  database_pragma_config: |
    PRAGMA journal_mode=WAL;
    PRAGMA synchronous=NORMAL;
    PRAGMA cache_size=10000;
    PRAGMA foreign_keys=ON;
    PRAGMA temp_store=MEMORY;

  # ==============================================================================
  # Development and Debugging Configuration
  # ==============================================================================

  # Debug and development features
  debug_mode: "true"
  verbose_logging: "true"
  transaction_tracing: "true"
  contract_tracing: "true"
  vm_tracing: "true"
  profiling_enabled: "true"

  # Testing and validation configuration
  lite_mode: "false"
  disable_validate: "false"
  disable_fee_validation: "false"
  enable_validation: "true"
  strict_mode: "false"

  # Development API features
  dump_on_exit: "true"
  dump_path: "/app/state/dumps"
  load_path: ""
  restart_on_new_blocks: "false"

  # ==============================================================================
  # Security and Access Control Configuration
  # ==============================================================================

  # CORS and security settings
  cors_origins: "*"
  allowed_origins: |
    - "http://localhost:3000"
    - "http://localhost:8080"
    - "https://dev.veridis.xyz"
    - "https://staging.veridis.xyz"

  # Request limits and security
  request_body_size_limit: "10485760"
  max_request_size: "104857600"
  request_timeout: "300"
  rate_limiting_enabled: "true"
  rate_limit_requests_per_minute: "1000"

  # Authentication and authorization
  auth_enabled: "false"
  api_key_required: "false"
  admin_api_enabled: "true"
  metrics_api_enabled: "true"

  # ==============================================================================
  # Monitoring and Observability Configuration
  # ==============================================================================

  # Metrics and monitoring
  metrics_enabled: "true"
  metrics_host: "0.0.0.0"
  metrics_port: "9090"
  metrics_path: "/metrics"
  prometheus_metrics: "true"

  # Health check configuration
  health_check_enabled: "true"
  health_check_host: "0.0.0.0"
  health_check_port: "8080"
  health_check_path: "/health"
  health_check_interval: "10"

  # Logging configuration
  log_level: "info"
  log_format: "json"
  log_file: "/app/logs/devnet.log"
  log_rotation_enabled: "true"
  log_max_size: "100"
  log_max_files: "10"

  # Distributed tracing configuration
  tracing_enabled: "true"
  jaeger_endpoint: "http://jaeger-collector.monitoring.svc.cluster.local:14268/api/traces"
  trace_sampling_rate: "0.1"

  # ==============================================================================
  # Advanced Feature Configuration
  # ==============================================================================

  # Fee configuration for realistic testing
  fee_enabled: "true"
  fee_per_gas: "1"
  data_gas_fee: "1"
  validate_fee: "true"
  fee_estimation_enabled: "true"

  # Bridge and L1/L2 simulation
  l1_provider_url: ""
  l2_provider_url: ""
  bridge_enabled: "false"
  messaging_enabled: "false"

  # Contract deployment configuration
  universal_deployer_address: "0x41a78e741e5af2fec34b695679bc6891742439f7afb8484ecd7766661ad02bf"
  contract_class_cache_size: "1000"
  sierra_compilation_enabled: "true"

  # ==============================================================================
  # Business Intelligence and Analytics Configuration
  # ==============================================================================

  # Usage analytics configuration
  analytics_enabled: "true"
  usage_tracking: "true"
  performance_analytics: "true"
  cost_tracking: "true"

  # Development metrics
  development_metrics_enabled: "true"
  test_coverage_tracking: "true"
  deployment_tracking: "true"
  error_analytics: "true"

  # Capacity planning configuration
  capacity_monitoring: "true"
  resource_usage_tracking: "true"
  performance_benchmarking: "true"
  scalability_testing: "true"

---
# ==============================================================================
# StarkNet DevNet Advanced Configuration - Cairo Optimization Settings
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: starknet-devnet-cairo-config
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: starknet-devnet
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "0.1.25"
    app.kubernetes.io/component: cairo-configuration
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    config.veridis.xyz/type: cairo-optimization
    config.veridis.xyz/category: performance-configuration
    cairo.veridis.xyz/version: "v2.11.4"
    cairo.veridis.xyz/optimization: mlir-enabled

    veridis.xyz/environment: production
    veridis.xyz/team: blockchain-engineering

  annotations:
    veridis.xyz/description: "Advanced Cairo v2.11.4 optimization configuration for StarkNet DevNet"
    veridis.xyz/purpose: "Provides Cairo-specific optimization settings for enhanced performance and development experience"

data:
  # ==============================================================================
  # Cairo Compiler Configuration
  # ==============================================================================

  # Compiler optimization settings
  cairo_compiler_config: |
    {
      "optimization_level": 3,
      "mlir_enabled": true,
      "parallel_compilation": true,
      "debug_info": true,
      "inlining_threshold": 1000,
      "loop_unrolling": true,
      "constant_propagation": true,
      "dead_code_elimination": true,
      "common_subexpression_elimination": true,
      "algebraic_simplification": true,
      "strength_reduction": true,
      "vectorization": true,
      "auto_vectorization": true,
      "target_cpu": "native",
      "target_features": "+avx2,+fma",
      "lto": true,
      "pgo": false,
      "profile_guided_optimization": false
    }

  # MLIR optimization pipeline
  mlir_optimization_pipeline: |
    builtin.module(
      func.func(
        convert-scf-to-cf,
        convert-arith-to-llvm,
        convert-func-to-llvm,
        convert-cf-to-llvm,
        reconcile-unrealized-casts
      ),
      convert-func-to-llvm,
      convert-memref-to-llvm,
      finalize-memref-to-llvm,
      llvm-request-c-wrappers
    )

  # Cairo runtime configuration
  cairo_runtime_config: |
    {
      "memory_segments": {
        "program": {
          "size": 1048576,
          "read_only": true
        },
        "execution": {
          "size": 1048576,
          "read_only": false
        },
        "builtin": {
          "size": 65536,
          "read_only": false
        }
      },
      "builtins": {
        "pedersen": {
          "instances_per_component": 1,
          "ratio": 8
        },
        "range_check": {
          "instances_per_component": 1,
          "ratio": 8,
          "n_parts": 8
        },
        "ecdsa": {
          "instances_per_component": 1,
          "ratio": 512
        },
        "bitwise": {
          "instances_per_component": 1,
          "ratio": 16
        },
        "ec_op": {
          "instances_per_component": 1,
          "ratio": 256
        },
        "keccak": {
          "instances_per_component": 1,
          "ratio": 2048
        },
        "poseidon": {
          "instances_per_component": 1,
          "ratio": 32
        }
      },
      "proof_mode": false,
      "secure_run": false
    }

  # ==============================================================================
  # GPU Acceleration Configuration
  # ==============================================================================

  # CUDA configuration for Cairo
  cuda_cairo_config: |
    {
      "device_id": 0,
      "memory_fraction": 0.8,
      "allow_growth": true,
      "per_process_gpu_memory_fraction": 0.8,
      "visible_device_list": "0",
      "force_gpu_compatible": true,
      "log_device_placement": false,
      "allow_soft_placement": true,
      "gpu_options": {
        "experimental": {
          "memory_growth": true,
          "virtual_gpu_memory_limit": 8192
        }
      }
    }

  # OpenCL configuration (fallback)
  opencl_config: |
    {
      "platform_id": 0,
      "device_id": 0,
      "enable_profiling": true,
      "enable_out_of_order_execution": true,
      "memory_alignment": 64,
      "local_memory_size": 32768,
      "global_memory_cache_size": 262144
    }

  # GPU kernel configuration
  gpu_kernel_config: |
    {
      "block_size": 256,
      "grid_size": 65536,
      "shared_memory_size": 49152,
      "max_registers_per_thread": 63,
      "occupancy_target": 1.0,
      "cache_config": "prefer_shared",
      "function_attributes": {
        "max_threads_per_block": 1024,
        "shared_size_bytes": 49152,
        "const_size_bytes": 65536,
        "local_size_bytes": 16384,
        "num_regs": 63,
        "ptx_version": 70,
        "binary_version": 70
      }
    }

---
# ==============================================================================
# StarkNet DevNet Development Configuration - Testing and Debugging
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: starknet-devnet-development-config
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: starknet-devnet
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "0.1.25"
    app.kubernetes.io/component: development-configuration
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    config.veridis.xyz/type: development-settings
    config.veridis.xyz/category: testing-configuration
    development.veridis.xyz/testing-support: comprehensive
    development.veridis.xyz/debugging: enabled

    veridis.xyz/environment: production
    veridis.xyz/team: blockchain-engineering

  annotations:
    veridis.xyz/description: "Comprehensive development and testing configuration for StarkNet DevNet"
    veridis.xyz/purpose: "Provides development-focused settings for testing, debugging, and integration workflows"

data:
  # ==============================================================================
  # Testing Framework Configuration
  # ==============================================================================

  # Test execution configuration
  test_config: |
    {
      "test_timeout": 300,
      "parallel_tests": true,
      "max_parallel_tests": 8,
      "test_retry_count": 3,
      "test_isolation": true,
      "snapshot_between_tests": true,
      "reset_state_between_tests": false,
      "preserve_test_artifacts": true,
      "test_coverage_enabled": true,
      "test_profiling_enabled": true,
      "test_tracing_enabled": true,
      "test_metrics_collection": true
    }

  # Contract testing configuration
  contract_test_config: |
    {
      "deployment_testing": true,
      "interaction_testing": true,
      "upgrade_testing": true,
      "gas_estimation_testing": true,
      "security_testing": true,
      "fuzz_testing": {
        "enabled": true,
        "iterations": 1000,
        "max_depth": 10,
        "timeout_per_test": 30
      },
      "property_testing": {
        "enabled": true,
        "shrinking": true,
        "max_examples": 100
      }
    }

  # Integration testing configuration
  integration_test_config: |
    {
      "cross_contract_testing": true,
      "bridge_testing": false,
      "l1_l2_messaging_testing": false,
      "event_testing": true,
      "storage_testing": true,
      "multicall_testing": true,
      "batch_testing": true,
      "sequential_testing": true,
      "concurrent_testing": true
    }

  # ==============================================================================
  # Debugging and Profiling Configuration
  # ==============================================================================

  # Debug configuration
  debug_config: |
    {
      "step_by_step_execution": true,
      "breakpoint_support": true,
      "variable_inspection": true,
      "call_stack_tracing": true,
      "memory_inspection": true,
      "execution_tracing": true,
      "transaction_replay": true,
      "state_inspection": true,
      "event_inspection": true,
      "error_analysis": true,
      "performance_analysis": true
    }

  # Profiling configuration
  profiling_config: |
    {
      "cpu_profiling": true,
      "memory_profiling": true,
      "execution_time_profiling": true,
      "gas_profiling": true,
      "storage_access_profiling": true,
      "builtin_usage_profiling": true,
      "call_frequency_profiling": true,
      "hot_path_detection": true,
      "bottleneck_analysis": true,
      "optimization_suggestions": true
    }

  # Tracing configuration
  tracing_config: |
    {
      "execution_traces": true,
      "memory_traces": true,
      "builtin_traces": true,
      "syscall_traces": true,
      "library_call_traces": true,
      "event_traces": true,
      "storage_traces": true,
      "l1_handler_traces": true,
      "trace_compression": true,
      "trace_filtering": true,
      "trace_sampling_rate": 1.0
    }

  # ==============================================================================
  # Development Tools Integration
  # ==============================================================================

  # IDE integration configuration
  ide_integration_config: |
    {
      "language_server_enabled": true,
      "auto_completion": true,
      "syntax_highlighting": true,
      "error_highlighting": true,
      "go_to_definition": true,
      "find_references": true,
      "hover_documentation": true,
      "code_formatting": true,
      "refactoring_support": true,
      "debugging_support": true
    }

  # Version control integration
  vcs_integration_config: |
    {
      "git_hooks_enabled": true,
      "pre_commit_testing": true,
      "pre_push_validation": true,
      "commit_message_validation": true,
      "branch_protection": true,
      "automated_testing_on_pr": true,
      "code_coverage_reporting": true,
      "security_scanning": true
    }

  # CI/CD integration configuration
  cicd_integration_config: |
    {
      "pipeline_triggers": {
        "on_commit": true,
        "on_pull_request": true,
        "on_tag": true,
        "scheduled": true
      },
      "test_stages": {
        "unit_tests": true,
        "integration_tests": true,
        "security_tests": true,
        "performance_tests": true,
        "deployment_tests": true
      },
      "deployment_stages": {
        "development": true,
        "staging": true,
        "production": false
      },
      "notifications": {
        "slack": true,
        "email": true,
        "webhook": true
      }
    }

---
# ==============================================================================
# StarkNet DevNet Monitoring Configuration - Observability Settings
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: starknet-devnet-monitoring-config
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: starknet-devnet
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "0.1.25"
    app.kubernetes.io/component: monitoring-configuration
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    config.veridis.xyz/type: monitoring-settings
    config.veridis.xyz/category: observability-configuration
    monitoring.veridis.xyz/prometheus: enabled
    monitoring.veridis.xyz/grafana: enabled

    veridis.xyz/environment: production
    veridis.xyz/team: blockchain-engineering

  annotations:
    veridis.xyz/description: "Comprehensive monitoring and observability configuration for StarkNet DevNet"
    veridis.xyz/purpose: "Provides monitoring, metrics, logging, and alerting configuration for DevNet operations"

data:
  # ==============================================================================
  # Prometheus Metrics Configuration
  # ==============================================================================

  # Prometheus configuration
  prometheus_config: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'veridis-production'
        environment: 'production'
        service: 'starknet-devnet'

    scrape_configs:
      - job_name: 'starknet-devnet'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: 30s
        scrape_timeout: 10s
        metrics_path: '/metrics'
        scheme: 'http'

    rule_files:
      - "starknet_devnet_rules.yml"
      - "cairo_performance_rules.yml"
      - "development_quality_rules.yml"

  # Metrics collection configuration
  metrics_collection_config: |
    {
      "system_metrics": {
        "cpu_usage": true,
        "memory_usage": true,
        "disk_usage": true,
        "network_usage": true,
        "gpu_usage": true,
        "collection_interval": "15s"
      },
      "devnet_metrics": {
        "block_metrics": true,
        "transaction_metrics": true,
        "account_metrics": true,
        "contract_metrics": true,
        "state_metrics": true,
        "collection_interval": "30s"
      },
      "cairo_metrics": {
        "compilation_metrics": true,
        "execution_metrics": true,
        "builtin_metrics": true,
        "memory_metrics": true,
        "performance_metrics": true,
        "collection_interval": "60s"
      },
      "development_metrics": {
        "test_metrics": true,
        "coverage_metrics": true,
        "deployment_metrics": true,
        "error_metrics": true,
        "usage_metrics": true,
        "collection_interval": "300s"
      }
    }

  # Custom metrics definitions
  custom_metrics_config: |
    {
      "business_metrics": [
        {
          "name": "development_velocity",
          "type": "gauge",
          "description": "Development velocity metrics",
          "labels": ["team", "project", "sprint"]
        },
        {
          "name": "test_coverage_percentage",
          "type": "gauge",
          "description": "Test coverage percentage",
          "labels": ["component", "test_type"]
        },
        {
          "name": "deployment_frequency",
          "type": "counter",
          "description": "Deployment frequency metrics",
          "labels": ["environment", "component"]
        }
      ],
      "performance_metrics": [
        {
          "name": "cairo_compilation_time",
          "type": "histogram",
          "description": "Cairo compilation time distribution",
          "buckets": [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 30.0, 60.0]
        },
        {
          "name": "transaction_processing_time",
          "type": "histogram",
          "description": "Transaction processing time",
          "buckets": [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1.0, 5.0]
        }
      ]
    }

  # ==============================================================================
  # Logging Configuration
  # ==============================================================================

  # Structured logging configuration
  logging_config: |
    {
      "level": "info",
      "format": "json",
      "output": [
        {
          "type": "file",
          "path": "/app/logs/devnet.log",
          "rotation": {
            "max_size": "100MB",
            "max_files": 10,
            "max_age": "30d",
            "compress": true
          }
        },
        {
          "type": "stdout",
          "format": "console"
        }
      ],
      "fields": {
        "timestamp": true,
        "level": true,
        "caller": true,
        "message": true,
        "trace_id": true,
        "span_id": true,
        "service": "starknet-devnet",
        "version": "0.1.25",
        "environment": "production"
      }
    }

  # Log aggregation configuration
  log_aggregation_config: |
    {
      "fluent_bit": {
        "enabled": true,
        "config": {
          "service": {
            "flush": 1,
            "daemon": false,
            "log_level": "info",
            "parsers_file": "parsers.conf",
            "plugins_file": "plugins.conf"
          },
          "input": {
            "name": "tail",
            "path": "/app/logs/*.log",
            "parser": "json",
            "tag": "starknet.devnet",
            "refresh_interval": 5
          },
          "filter": {
            "name": "kubernetes",
            "match": "starknet.*",
            "kube_url": "https://kubernetes.default.svc:443",
            "kube_ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
            "kube_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token"
          },
          "output": {
            "name": "elasticsearch",
            "match": "*",
            "host": "elasticsearch.logging.svc.cluster.local",
            "port": 9200,
            "index": "starknet-devnet",
            "type": "_doc"
          }
        }
      }
    }

  # ==============================================================================
  # Alerting Configuration
  # ==============================================================================

  # Alert rules configuration
  alert_rules_config: |
    groups:
      - name: starknet_devnet_alerts
        rules:
          - alert: DevNetDown
            expr: up{job="starknet-devnet"} == 0
            for: 1m
            labels:
              severity: critical
              service: starknet-devnet
            annotations:
              summary: "StarkNet DevNet is down"
              description: "StarkNet DevNet has been down for more than 1 minute"

          - alert: HighCPUUsage
            expr: rate(cpu_usage_total[5m]) > 0.8
            for: 5m
            labels:
              severity: warning
              service: starknet-devnet
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is above 80% for more than 5 minutes"

          - alert: HighMemoryUsage
            expr: memory_usage_percentage > 0.85
            for: 5m
            labels:
              severity: warning
              service: starknet-devnet
            annotations:
              summary: "High memory usage detected"
              description: "Memory usage is above 85% for more than 5 minutes"

          - alert: SlowTransactionProcessing
            expr: histogram_quantile(0.95, rate(transaction_processing_time_bucket[5m])) > 1
            for: 2m
            labels:
              severity: warning
              service: starknet-devnet
            annotations:
              summary: "Slow transaction processing"
              description: "95th percentile transaction processing time is above 1 second"

  # Notification configuration
  notification_config: |
    {
      "channels": [
        {
          "name": "slack",
          "type": "slack",
          "webhook_url": "${SLACK_WEBHOOK_URL}",
          "channel": "#blockchain-alerts",
          "username": "StarkNet DevNet",
          "icon_emoji": ":warning:",
          "title": "StarkNet DevNet Alert",
          "text": "{{ range .Alerts }}{{ .Annotations.summary }}\n{{ .Annotations.description }}{{ end }}"
        },
        {
          "name": "email",
          "type": "email",
          "smtp_server": "smtp.veridis.xyz:587",
          "from": "alerts@veridis.xyz",
          "to": ["blockchain-team@veridis.xyz"],
          "subject": "StarkNet DevNet Alert: {{ .GroupLabels.alertname }}",
          "body": "{{ range .Alerts }}{{ .Annotations.summary }}\n{{ .Annotations.description }}{{ end }}"
        }
      ],
      "routing": [
        {
          "match": {
            "severity": "critical"
          },
          "channels": ["slack", "email"],
          "repeat_interval": "1h"
        },
        {
          "match": {
            "severity": "warning"
          },
          "channels": ["slack"],
          "repeat_interval": "4h"
        }
      ]
    }

# ==============================================================================
# StarkNet DevNet ConfigMap Summary and Enterprise Configuration Architecture
# ==============================================================================
#
# COMPREHENSIVE STARKNET DEVNET CONFIGURATION STRATEGY:
# =====================================================
#
# STARKNET DEVNET CONFIGURATION ARCHITECTURE OVERVIEW:
# ----------------------------------------------------
# 1. Primary Configuration (starknet-devnet-config):
#    - Core DevNet settings with Cairo v2.11.4 integration and comprehensive blockchain simulation
#    - Performance optimization with GPU acceleration, MLIR compilation, and parallel processing
#    - Advanced state management with persistence, snapshots, and intelligent resource allocation
#    - Enterprise security with CORS, rate limiting, authentication, and comprehensive access controls
#    - Business intelligence with analytics, cost tracking, and performance monitoring capabilities
#
# 2. Cairo Optimization Configuration (starknet-devnet-cairo-config):
#    - Advanced Cairo v2.11.4 compiler optimization with MLIR pipeline and performance tuning
#    - GPU acceleration configuration with CUDA support and OpenCL fallback capabilities
#    - Comprehensive runtime configuration with memory management and builtin optimization
#    - Performance profiling with detailed metrics collection and optimization intelligence
#    - Enterprise-grade compilation with parallel processing and intelligent resource management
#
# 3. Development Configuration (starknet-devnet-development-config):
#    - Comprehensive testing framework with parallel execution and intelligent test management
#    - Advanced debugging with step-by-step execution, breakpoints, and state inspection
#    - Development tools integration with IDE support, version control, and CI/CD workflows
#    - Quality assurance with test coverage, security testing, and performance validation
#    - Developer experience optimization with intelligent tooling and automation capabilities
#
# 4. Monitoring Configuration (starknet-devnet-monitoring-config):
#    - Enterprise monitoring with Prometheus integration and comprehensive metrics collection
#    - Advanced logging with structured output, aggregation, and intelligent filtering
#    - Intelligent alerting with escalation procedures and automated notification systems
#    - Performance analytics with business intelligence and optimization recommendations
#    - Observability excellence with distributed tracing and comprehensive system visibility
#
# ENTERPRISE CONFIGURATION FEATURES:
# ==================================
# Advanced Performance Optimization:
#   - Cairo v2.11.4 integration with MLIR optimization pipeline for 5x faster compilation
#   - GPU acceleration with CUDA support and intelligent resource management
#   - Parallel processing with multi-threaded execution and intelligent workload distribution
#   - Memory optimization with vec-based storage and intelligent cache management
#   - Performance profiling with detailed analytics and optimization intelligence
#
# Comprehensive Development Features:
#   - Advanced debugging with transaction tracing, state inspection, and error analysis
#   - Testing framework integration with parallel execution and intelligent test management
#   - Development tools integration with IDE support and seamless workflow automation
#   - Quality assurance with comprehensive validation and security testing capabilities
#   - Developer experience optimization with intelligent tooling and productivity enhancement
#
# Enterprise Security and Compliance:
#   - Comprehensive access control with CORS configuration and rate limiting
#   - Authentication and authorization with API key management and secure access
#   - Audit logging with comprehensive trail preservation and compliance validation
#   - Security testing integration with vulnerability assessment and validation
#   - Compliance framework integration with SOC 2, GDPR, ISO 27001, and NIST standards
#
# Advanced Monitoring and Observability:
#   - Enterprise monitoring with Prometheus integration and comprehensive metrics collection
#   - Structured logging with intelligent aggregation and centralized management
#   - Distributed tracing with performance analytics and bottleneck identification
#   - Intelligent alerting with escalation procedures and automated response systems
#   - Business intelligence with cost optimization and capacity planning analytics
#
# OPERATIONAL EXCELLENCE:
# ======================
# Configuration Lifecycle Management:
#   - Dynamic configuration with environment-specific settings and intelligent adaptation
#   - Configuration validation with automated testing and compliance verification
#   - Version management with configuration drift detection and automated remediation
#   - Backup and recovery with configuration preservation and disaster preparedness
#   - Change management with intelligent validation and rollback capabilities
#
# Performance and Resource Management:
#   - Intelligent resource allocation with GPU acceleration and memory optimization
#   - Performance tuning with automated optimization and intelligent scaling
#   - Capacity planning with predictive analytics and resource forecasting
#   - Cost optimization with resource efficiency analysis and intelligent management
#   - Quality assurance with performance validation and optimization procedures
#
# Development Integration and Productivity:
#   - Seamless development workflow integration with automated testing and validation
#   - CI/CD pipeline integration with intelligent testing and deployment procedures
#   - Version control integration with automated validation and quality assurance
#   - Development analytics with productivity metrics and optimization intelligence
#   - Team collaboration with intelligent tooling and automated workflow management
#
# Business Intelligence and Analytics:
#   - Comprehensive usage analytics with development pattern analysis and optimization
#   - Performance monitoring with detailed metrics collection and intelligence
#   - Cost tracking with resource utilization analysis and optimization recommendations
#   - Quality metrics with testing analytics and validation procedures
#   - Strategic planning with business intelligence and long-term optimization
#
# ==============================================================================
