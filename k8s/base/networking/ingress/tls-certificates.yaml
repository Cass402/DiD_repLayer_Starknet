# ==============================================================================
# Veridis Decentralized Identity Protocol - TLS Certificates Configuration
# ==============================================================================
#
# This manifest defines comprehensive TLS certificates for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS TLS SECURITY ARCHITECTURE:
#   • Advanced SSL/TLS certificate management with automated provisioning and intelligent certificate lifecycle
#   • Multi-tier certificate architecture with development, testing, staging, and production environments
#   • Comprehensive security framework with certificate validation, PKI integration, and cryptographic intelligence
#   • Advanced lifecycle management with automated certificate renewal, rotation control, and security enhancement
#   • Enterprise-grade intelligence with comprehensive analytics and certificate insights
#
# VERIDIS TLS CERTIFICATE OPTIMIZATION:
#   • High-performance certificate management with intelligent provisioning and cryptographic optimization
#   • Intelligent security protection with responsive certificate management and security-based provisioning decisions
#   • Advanced cryptographic management with business intelligence and workload-based certificate control
#   • Comprehensive security control with intelligent certificate management and cryptographic enhancement
#   • Enterprise acceleration with predictive certificate management and security optimization
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II certificate controls with comprehensive audit and security requirements
#   • GDPR certificate compliance with data protection, privacy controls, and security management
#   • ISO 27001 certificate management with comprehensive framework integration
#   • NIST 800-190 container certificate security with TLS-specific validation and compliance
#   • Zero-knowledge protocol compliance with regulatory frameworks and certificate best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent certificate lifecycle management with automated provisioning and optimization
#   • Predictive security analytics with capacity planning and certificate intelligence
#   • Advanced monitoring integration with certificate analytics and business intelligence
#   • Comprehensive security control with certificate preservation and cryptographic optimization
#   • Business continuity certificates with security guarantees and cryptographic optimization
#
# CERTIFICATE ACCELERATION INTELLIGENCE:
#   • Certificate usage analytics with security patterns and optimization recommendations
#   • Security monitoring with certificate latency and cryptographic optimization intelligence
#   • Development efficiency with certificate analytics and deployment optimization procedures
#   • Cost optimization with certificate utilization analysis and capacity planning procedures
#   • Quality assurance with certificate metrics and security validation procedures
#
# ==============================================================================

# ==============================================================================
# Veridis TLS Certificates - Primary Production Certificate
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-tls-certificate
  namespace: veridis-infrastructure

  # Core Veridis TLS Certificate identification labels
  labels:
    app.kubernetes.io/name: veridis-protocol
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: tls-certificate
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Certificate specific classification
    certificate.veridis.xyz/type: primary-tls-certificate
    certificate.veridis.xyz/category: production-certificate
    certificate.veridis.xyz/role: primary-certificate
    certificate.veridis.xyz/security-class: enterprise-certificate
    certificate.veridis.xyz/security-level: enterprise

    # TLS Certificate classification
    tls.veridis.xyz/certificate-type: wildcard-certificate
    tls.veridis.xyz/provider: lets-encrypt
    tls.veridis.xyz/algorithm: rsa-4096
    tls.veridis.xyz/validation: domain-validated
    tls.veridis.xyz/features: full-security

    # Security Certificate classification
    security.veridis.xyz/tier: production
    security.veridis.xyz/optimization: intelligent-security
    security.veridis.xyz/encryption: tls-1.3
    security.veridis.xyz/strength: maximum
    security.veridis.xyz/efficiency: optimized

    # Business Certificate classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-security
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/security-requirement: maximum

    # Operational Certificate labels
    veridis.xyz/environment: production
    veridis.xyz/team: security-engineering
    veridis.xyz/cost-center: security-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "certificate-control-framework"
    compliance.veridis.xyz/gdpr: "certificate-data-protection"
    compliance.veridis.xyz/iso27001: "certificate-security-management"
    compliance.veridis.xyz/nist-800-190: "certificate-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Certificate monitoring and analytics
    monitoring.veridis.xyz/certificate-monitoring: "enabled"
    monitoring.veridis.xyz/security-monitoring: "comprehensive"
    monitoring.veridis.xyz/expiry-monitoring: "enabled"
    monitoring.veridis.xyz/business-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"

    # Certificate lifecycle labels
    lifecycle.veridis.xyz/auto-renewal: "enabled"
    lifecycle.veridis.xyz/rotation-policy: "90-days"
    lifecycle.veridis.xyz/backup-enabled: "true"
    lifecycle.veridis.xyz/monitoring-enabled: "true"
    lifecycle.veridis.xyz/alerting-enabled: "true"

  annotations:
    # Certificate purpose and specifications
    veridis.xyz/description: "Enterprise Veridis TLS certificate with RSA 4096-bit encryption, intelligent certificate management, and comprehensive security"
    veridis.xyz/purpose: "Provides comprehensive TLS security for decentralized identity management with intelligent certificate provisioning, cryptographic optimization, and security guarantees"
    veridis.xyz/scope: "TLS security including certificate management, cryptographic protection, PKI integration, and comprehensive security intelligence"

    # Certificate architecture and design
    certificate.veridis.xyz/architecture: "Enterprise TLS certificate with RSA 4096-bit encryption, intelligent certificate management, and security optimization"
    certificate.veridis.xyz/design-pattern: "Multi-tier certificate with security optimization, cost efficiency, and business intelligence"
    certificate.veridis.xyz/optimization-model: "Intelligent TLS certificate with predictive analytics, security optimization, and cryptographic efficiency"
    certificate.veridis.xyz/security-model: "High-security TLS certificate with RSA optimization and intelligent certificate management"

    # TLS Certificate specifications
    tls.veridis.xyz/certificate-specification: "TLS certificate with security optimization and intelligent certificate management"
    tls.veridis.xyz/security-specification: "Advanced security configuration with cryptographic optimization and certificate enhancement"
    tls.veridis.xyz/encryption-specification: "Certificate encryption optimization with intelligent security management and enhancement"
    tls.veridis.xyz/validation-specification: "TLS validation management with cryptographic acceleration and security efficiency"
    tls.veridis.xyz/business-specification: "TLS business certificate with cost optimization and strategic intelligence"

    # Security Certificate specifications
    security.veridis.xyz/certificate-specification: "Security-aware TLS certificate with cryptographic optimization and security intelligence"
    security.veridis.xyz/encryption-specification: "Encryption management optimization with intelligent security and cryptographic enhancement"
    security.veridis.xyz/validation-specification: "Security validation with cost optimization and intelligent certificate management"
    security.veridis.xyz/protection-specification: "Security protection with auto-optimization and certificate management"
    security.veridis.xyz/monitoring-specification: "Security monitoring with certificate analytics and cryptographic intelligence"

    # Business Certificate specifications
    business.veridis.xyz/sla-specification: "SLA-compliant TLS certificate with business continuity and security guarantees"
    business.veridis.xyz/intelligence-specification: "Business intelligence with operational analytics and strategic insights"
    business.veridis.xyz/cost-specification: "Cost-optimized TLS certificate with efficiency analysis and budget management"
    business.veridis.xyz/efficiency-specification: "Business efficiency with certificate optimization and security intelligence"

    # Operational Certificate specifications
    operations.veridis.xyz/automation-specification: "Full automation with intelligent management and developer-friendly interfaces"
    operations.veridis.xyz/monitoring-specification: "Comprehensive monitoring with certificate analytics and security intelligence"
    operations.veridis.xyz/management-specification: "Automated management with certificate preservation and optimization procedures"
    operations.veridis.xyz/rotation-specification: "Intelligent rotation with certificate management and security optimization"

    # Certificate lifecycle specifications
    lifecycle.veridis.xyz/certificate-specification: "Dynamic certificate with automated security management and cryptographic optimization"
    lifecycle.veridis.xyz/renewal-specification: "Intelligent certificate renewal with machine learning and security forecasting"
    lifecycle.veridis.xyz/optimization-specification: "Certificate optimization with intelligent security management and cryptographic enhancement"
    lifecycle.veridis.xyz/evolution-specification: "Certificate evolution with intelligent adaptation and security optimization"

    # Certificate authority and validation
    cert-manager.io/cluster-issuer: "veridis-production-issuer"
    cert-manager.io/common-name: "*.veridis.xyz"
    cert-manager.io/duration: "2160h" # 90 days
    cert-manager.io/renew-before: "360h" # 15 days before expiry
    cert-manager.io/private-key-algorithm: "RSA"
    cert-manager.io/private-key-size: "4096"

    # Certificate Subject Alternative Names
    cert-manager.io/alt-names: |
      veridis.xyz,
      *.veridis.xyz,
      api.veridis.xyz,
      app.veridis.xyz,
      admin.veridis.xyz,
      monitoring.veridis.xyz,
      grafana.veridis.xyz,
      prometheus.veridis.xyz,
      identity.veridis.xyz,
      attestation.veridis.xyz,
      verification.veridis.xyz,
      compliance.veridis.xyz,
      bridge.veridis.xyz,
      zk.veridis.xyz,
      circuits.veridis.xyz

    # Certificate security annotations
    security.veridis.xyz/tls-version: "1.3"
    security.veridis.xyz/cipher-suites: "TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256"
    security.veridis.xyz/hsts-enabled: "true"
    security.veridis.xyz/hsts-max-age: "31536000"
    security.veridis.xyz/ocsp-stapling: "enabled"

    # Certificate monitoring annotations
    monitoring.veridis.xyz/expiry-alert: "15d"
    monitoring.veridis.xyz/renewal-alert: "7d"
    monitoring.veridis.xyz/validation-check: "daily"
    monitoring.veridis.xyz/security-scan: "weekly"

    # Documentation and procedures
    veridis.xyz/owner: "security-team@veridis.xyz"
    veridis.xyz/certificate-admin: "security-admin@veridis.xyz"
    veridis.xyz/escalation: "security-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "security-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/security/tls-certificates"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/security/certificate-management"
    veridis.xyz/certificate-docs: "https://security.veridis.xyz/certificates/tls-guide"
    veridis.xyz/security-docs: "https://security.veridis.xyz/tls/certificate-security"

type: kubernetes.io/tls
data:
  # Certificate data will be populated by cert-manager
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...

---
# ==============================================================================
# Veridis TLS Certificates - ClusterIssuer for Let's Encrypt Production
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: veridis-production-issuer

  labels:
    app.kubernetes.io/name: veridis-protocol
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: cluster-issuer
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: cluster-issuer
    certificate.veridis.xyz/category: production-issuer
    certificate.veridis.xyz/provider: lets-encrypt
    certificate.veridis.xyz/environment: production

    security.veridis.xyz/issuer-type: acme-issuer
    security.veridis.xyz/validation: dns-01
    security.veridis.xyz/provider: cloudflare

    veridis.xyz/environment: production
    veridis.xyz/team: security-engineering

  annotations:
    veridis.xyz/description: "Production Let's Encrypt ClusterIssuer for Veridis TLS certificates with DNS-01 validation"
    veridis.xyz/purpose: "Provides automated certificate issuance and renewal for production Veridis services"

    certificate.veridis.xyz/issuer-specification: "ACME ClusterIssuer with DNS-01 validation and Cloudflare integration"
    security.veridis.xyz/issuer-specification: "Production certificate issuer with enterprise security and validation"

    # ACME configuration annotations
    cert-manager.io/acme-server: "https://acme-v02.api.letsencrypt.org/directory"
    cert-manager.io/dns01-solver: "cloudflare"
    cert-manager.io/rate-limit: "20/hour"

    veridis.xyz/documentation: "https://docs.veridis.xyz/security/cluster-issuer"

spec:
  acme:
    # Let's Encrypt production server
    server: https://acme-v02.api.letsencrypt.org/directory

    # Email for Let's Encrypt notifications
    email: security@veridis.xyz

    # Secret to store the ACME account private key
    privateKeySecretRef:
      name: veridis-letsencrypt-private-key

    # DNS-01 challenge solver configuration
    solvers:
      # ==============================================================================
      # Cloudflare DNS-01 Solver - Primary Domain
      # ==============================================================================
      - dns01:
          cloudflare:
            email: security@veridis.xyz
            apiTokenSecretRef:
              name: veridis-cloudflare-api-token
              key: api-token
        selector:
          dnsNames:
            - "veridis.xyz"
            - "*.veridis.xyz"

      # ==============================================================================
      # Route53 DNS-01 Solver - AWS Integration (Alternative)
      # ==============================================================================
      - dns01:
          route53:
            region: us-east-1
            accessKeyIDSecretRef:
              name: veridis-route53-credentials
              key: access-key-id
            secretAccessKeySecretRef:
              name: veridis-route53-credentials
              key: secret-access-key
        selector:
          dnsNames:
            - "aws.veridis.xyz"
            - "*.aws.veridis.xyz"

      # ==============================================================================
      # HTTP-01 Solver - Fallback for specific services
      # ==============================================================================
      - http01:
          ingress:
            class: nginx
            podTemplate:
              metadata:
                labels:
                  app.kubernetes.io/name: cert-manager-solver
                  app.kubernetes.io/component: http01-solver
              spec:
                nodeSelector:
                  kubernetes.io/arch: amd64
                tolerations:
                  - key: "cert-manager/solver"
                    operator: "Equal"
                    value: "true"
                    effect: "NoSchedule"
        selector:
          dnsNames:
            - "api.veridis.xyz"
            - "monitoring.veridis.xyz"

---
# ==============================================================================
# Veridis TLS Certificates - Staging ClusterIssuer for Development
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: veridis-staging-issuer

  labels:
    app.kubernetes.io/name: veridis-protocol
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: staging-cluster-issuer
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: staging-cluster-issuer
    certificate.veridis.xyz/category: staging-issuer
    certificate.veridis.xyz/provider: lets-encrypt-staging
    certificate.veridis.xyz/environment: staging

    security.veridis.xyz/issuer-type: acme-staging-issuer
    security.veridis.xyz/validation: dns-01
    security.veridis.xyz/provider: cloudflare

    veridis.xyz/environment: staging
    veridis.xyz/team: security-engineering

  annotations:
    veridis.xyz/description: "Staging Let's Encrypt ClusterIssuer for Veridis development and testing certificates"
    veridis.xyz/purpose: "Provides automated certificate issuance for development and testing environments"

    certificate.veridis.xyz/issuer-specification: "ACME staging ClusterIssuer with DNS-01 validation for testing"
    security.veridis.xyz/issuer-specification: "Staging certificate issuer with development security and validation"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "staging-certificates-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/security/staging-cluster-issuer"

spec:
  acme:
    # Let's Encrypt staging server
    server: https://acme-staging-v02.api.letsencrypt.org/directory

    # Email for Let's Encrypt notifications
    email: security+staging@veridis.xyz

    # Secret to store the ACME account private key
    privateKeySecretRef:
      name: veridis-letsencrypt-staging-private-key

    # DNS-01 challenge solver configuration
    solvers:
      - dns01:
          cloudflare:
            email: security+staging@veridis.xyz
            apiTokenSecretRef:
              name: veridis-cloudflare-staging-api-token
              key: api-token
        selector:
          dnsNames:
            - "staging.veridis.xyz"
            - "*.staging.veridis.xyz"
            - "dev.veridis.xyz"
            - "*.dev.veridis.xyz"

---
# ==============================================================================
# Veridis TLS Certificates - Certificate Template for Automatic Issuance
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: veridis-wildcard-certificate
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-protocol
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: wildcard-certificate
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: wildcard-certificate
    certificate.veridis.xyz/category: production-certificate
    certificate.veridis.xyz/auto-managed: "true"
    certificate.veridis.xyz/issuer: veridis-production-issuer

    tls.veridis.xyz/certificate-type: wildcard
    tls.veridis.xyz/provider: lets-encrypt
    tls.veridis.xyz/algorithm: rsa-4096
    tls.veridis.xyz/validation: dns-01

    veridis.xyz/environment: production
    veridis.xyz/team: security-engineering

  annotations:
    veridis.xyz/description: "Wildcard certificate for Veridis production domains with automatic renewal"
    veridis.xyz/purpose: "Provides wildcard TLS certificate for all Veridis subdomains with automated management"

    certificate.veridis.xyz/certificate-specification: "Wildcard certificate with RSA 4096-bit encryption and automatic renewal"
    security.veridis.xyz/certificate-specification: "Production wildcard certificate with enterprise security"

    # Certificate management annotations
    cert-manager.io/revision-history-limit: "3"
    cert-manager.io/private-key-rotation-policy: "Always"

    veridis.xyz/documentation: "https://docs.veridis.xyz/security/wildcard-certificate"

spec:
  # Secret name where the certificate will be stored
  secretName: veridis-wildcard-tls-secret

  # Reference to the ClusterIssuer
  issuerRef:
    name: veridis-production-issuer
    kind: ClusterIssuer
    group: cert-manager.io

  # Common name for the certificate
  commonName: "*.veridis.xyz"

  # Subject Alternative Names (SANs)
  dnsNames:
    # Main domain
    - "veridis.xyz"
    - "*.veridis.xyz"

    # Core services
    - "api.veridis.xyz"
    - "app.veridis.xyz"
    - "admin.veridis.xyz"

    # Identity services
    - "identity.veridis.xyz"
    - "attestation.veridis.xyz"
    - "verification.veridis.xyz"
    - "compliance.veridis.xyz"
    - "bridge.veridis.xyz"

    # ZK services
    - "zk.veridis.xyz"
    - "circuits.veridis.xyz"
    - "proof.veridis.xyz"

    # Monitoring services
    - "monitoring.veridis.xyz"
    - "grafana.veridis.xyz"
    - "prometheus.veridis.xyz"
    - "jaeger.veridis.xyz"
    - "alertmanager.veridis.xyz"

    # Infrastructure services
    - "vault.veridis.xyz"
    - "postgres.veridis.xyz"
    - "redis.veridis.xyz"

    # Development and staging
    - "dev.veridis.xyz"
    - "*.dev.veridis.xyz"
    - "staging.veridis.xyz"
    - "*.staging.veridis.xyz"
    - "test.veridis.xyz"
    - "*.test.veridis.xyz"

  # Certificate duration (90 days)
  duration: 2160h

  # Renew certificate 15 days before expiry
  renewBefore: 360h

  # Private key configuration
  privateKey:
    algorithm: RSA
    size: 4096
    rotationPolicy: Always

  # Certificate subject information
  subject:
    organizationalUnits:
      - "Security Engineering"
    organizations:
      - "Veridis Protocol"
    countries:
      - "US"
    localities:
      - "San Francisco"
    provinces:
      - "California"

  # Certificate usage
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth

---
# ==============================================================================
# Veridis TLS Certificates - Backend Service Certificate
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: veridis-backend-certificate
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-certificate
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: service-certificate
    certificate.veridis.xyz/category: backend-certificate
    certificate.veridis.xyz/service: veridis-backend
    certificate.veridis.xyz/issuer: veridis-production-issuer

    service.veridis.xyz/certificate-type: backend-tls
    service.veridis.xyz/provider: lets-encrypt
    service.veridis.xyz/validation: dns-01

    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering

  annotations:
    veridis.xyz/description: "Backend service certificate for Veridis API endpoints with service-specific validation"
    veridis.xyz/purpose: "Provides TLS certificate for backend service API endpoints and internal communication"

    certificate.veridis.xyz/service-specification: "Backend service certificate with API endpoint protection"
    security.veridis.xyz/service-specification: "Backend TLS certificate with service-specific security"

    veridis.xyz/documentation: "https://docs.veridis.xyz/backend/tls-certificate"

spec:
  secretName: veridis-backend-tls-secret

  issuerRef:
    name: veridis-production-issuer
    kind: ClusterIssuer
    group: cert-manager.io

  commonName: "api.veridis.xyz"

  dnsNames:
    - "api.veridis.xyz"
    - "backend.veridis.xyz"
    - "identity-api.veridis.xyz"
    - "attestation-api.veridis.xyz"
    - "verification-api.veridis.xyz"
    - "compliance-api.veridis.xyz"
    - "bridge-api.veridis.xyz"

  duration: 2160h
  renewBefore: 360h

  privateKey:
    algorithm: RSA
    size: 4096
    rotationPolicy: Always

  usages:
    - digital signature
    - key encipherment
    - server auth

---
# ==============================================================================
# Veridis TLS Certificates - ZK Circuits Service Certificate
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: veridis-zk-circuits-certificate
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-certificate
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: service-certificate
    certificate.veridis.xyz/category: zk-circuits-certificate
    certificate.veridis.xyz/service: zk-circuits
    certificate.veridis.xyz/issuer: veridis-production-issuer

    service.veridis.xyz/certificate-type: zk-circuits-tls
    service.veridis.xyz/provider: lets-encrypt
    service.veridis.xyz/validation: dns-01
    service.veridis.xyz/gpu-enabled: "true"

    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering

  annotations:
    veridis.xyz/description: "ZK Circuits service certificate for zero-knowledge proof generation with GPU acceleration"
    veridis.xyz/purpose: "Provides TLS certificate for ZK circuits service endpoints and cryptographic operations"

    certificate.veridis.xyz/service-specification: "ZK circuits service certificate with cryptographic endpoint protection"
    security.veridis.xyz/service-specification: "ZK circuits TLS certificate with GPU-accelerated security"

    # ZK-specific annotations
    zk.veridis.xyz/garaga-enabled: "true"
    zk.veridis.xyz/cuda-support: "enabled"
    zk.veridis.xyz/proof-generation: "enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/zk-circuits/tls-certificate"

spec:
  secretName: veridis-zk-circuits-tls-secret

  issuerRef:
    name: veridis-production-issuer
    kind: ClusterIssuer
    group: cert-manager.io

  commonName: "zk.veridis.xyz"

  dnsNames:
    - "zk.veridis.xyz"
    - "circuits.veridis.xyz"
    - "proof.veridis.xyz"
    - "garaga.veridis.xyz"
    - "zk-api.veridis.xyz"

  duration: 2160h
  renewBefore: 360h

  privateKey:
    algorithm: RSA
    size: 4096
    rotationPolicy: Always

  usages:
    - digital signature
    - key encipherment
    - server auth

---
# ==============================================================================
# Veridis TLS Certificates - Frontend Identity App Certificate
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: veridis-identity-app-certificate
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-identity-app
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: identity-app-certificate
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: frontend-certificate
    certificate.veridis.xyz/category: identity-app-certificate
    certificate.veridis.xyz/service: identity-app
    certificate.veridis.xyz/issuer: veridis-production-issuer

    frontend.veridis.xyz/certificate-type: identity-app-tls
    frontend.veridis.xyz/framework: nextjs
    frontend.veridis.xyz/provider: lets-encrypt
    frontend.veridis.xyz/validation: dns-01

    veridis.xyz/environment: production
    veridis.xyz/team: frontend-engineering

  annotations:
    veridis.xyz/description: "Frontend Identity App certificate for Next.js application with user interface protection"
    veridis.xyz/purpose: "Provides TLS certificate for frontend identity application and user interface endpoints"

    certificate.veridis.xyz/frontend-specification: "Frontend identity app certificate with Next.js endpoint protection"
    security.veridis.xyz/frontend-specification: "Identity app TLS certificate with user interface security"

    # Frontend-specific annotations
    frontend.veridis.xyz/nextjs-enabled: "true"
    frontend.veridis.xyz/react-support: "enabled"
    frontend.veridis.xyz/user-interface: "enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/frontend/identity-app/tls-certificate"

spec:
  secretName: veridis-identity-app-tls-secret

  issuerRef:
    name: veridis-production-issuer
    kind: ClusterIssuer
    group: cert-manager.io

  commonName: "app.veridis.xyz"

  dnsNames:
    - "app.veridis.xyz"
    - "identity.veridis.xyz"
    - "ui.veridis.xyz"
    - "frontend.veridis.xyz"
    - "dashboard.veridis.xyz"

  duration: 2160h
  renewBefore: 360h

  privateKey:
    algorithm: RSA
    size: 4096
    rotationPolicy: Always

  usages:
    - digital signature
    - key encipherment
    - server auth

---
# ==============================================================================
# Veridis TLS Certificates - Monitoring Stack Certificate
# ==============================================================================
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: veridis-monitoring-certificate
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-monitoring
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: monitoring-certificate
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    certificate.veridis.xyz/type: monitoring-certificate
    certificate.veridis.xyz/category: observability-certificate
    certificate.veridis.xyz/service: monitoring-stack
    certificate.veridis.xyz/issuer: veridis-production-issuer

    monitoring.veridis.xyz/certificate-type: monitoring-tls
    monitoring.veridis.xyz/provider: lets-encrypt
    monitoring.veridis.xyz/validation: dns-01
    monitoring.veridis.xyz/observability: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: platform-engineering

  annotations:
    veridis.xyz/description: "Monitoring stack certificate for Prometheus, Grafana, and observability services"
    veridis.xyz/purpose: "Provides TLS certificate for monitoring and observability service endpoints"

    certificate.veridis.xyz/monitoring-specification: "Monitoring stack certificate with observability endpoint protection"
    security.veridis.xyz/monitoring-specification: "Monitoring TLS certificate with observability security"

    # Monitoring-specific annotations
    monitoring.veridis.xyz/prometheus-enabled: "true"
    monitoring.veridis.xyz/grafana-enabled: "true"
    monitoring.veridis.xyz/jaeger-enabled: "true"
    monitoring.veridis.xyz/alertmanager-enabled: "true"

    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/tls-certificate"

spec:
  secretName: veridis-monitoring-tls-secret

  issuerRef:
    name: veridis-production-issuer
    kind: ClusterIssuer
    group: cert-manager.io

  commonName: "monitoring.veridis.xyz"

  dnsNames:
    - "monitoring.veridis.xyz"
    - "grafana.veridis.xyz"
    - "prometheus.veridis.xyz"
    - "jaeger.veridis.xyz"
    - "alertmanager.veridis.xyz"
    - "metrics.veridis.xyz"

  duration: 2160h
  renewBefore: 360h

  privateKey:
    algorithm: RSA
    size: 4096
    rotationPolicy: Always

  usages:
    - digital signature
    - key encipherment
    - server auth

# ==============================================================================
# Veridis TLS Certificates Summary and Enterprise Security Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS TLS CERTIFICATE STRATEGY:
# ===============================================
#
# VERIDIS TLS CERTIFICATE ARCHITECTURE OVERVIEW:
# ----------------------------------------------
# 1. Primary TLS Certificate Secret (veridis-tls-certificate):
#    - Enterprise-grade RSA 4096-bit encryption with comprehensive domain coverage and security optimization
#    - Wildcard certificate support with *.veridis.xyz for all subdomain services and applications
#    - Advanced security annotations with TLS 1.3, HSTS, OCSP stapling, and cipher suite optimization
#    - Automated lifecycle management with 90-day duration, 15-day renewal window, and rotation policies
#    - Comprehensive monitoring integration with expiry alerts, validation checks, and security scanning
#
# 2. Production ClusterIssuer (veridis-production-issuer):
#    - Let's Encrypt production ACME server with DNS-01 challenge validation and Cloudflare integration
#    - Multi-solver configuration with Cloudflare DNS, Route53 AWS, and HTTP-01 fallback support
#    - Enterprise email integration with security notifications and account management
#    - Rate limiting protection with 20 certificates per hour and abuse prevention
#    - Advanced challenge solver selection with domain-specific routing and validation optimization
#
# 3. Staging ClusterIssuer (veridis-staging-issuer):
#    - Let's Encrypt staging server for development and testing certificate issuance
#    - Staging environment support with dev.veridis.xyz and staging.veridis.xyz domains
#    - Development-friendly configuration with relaxed validation and testing support
#    - Conditional deployment with staging certificate enablement and environment isolation
#    - Testing integration with development workflow and certificate validation procedures
#
# 4. Wildcard Certificate (veridis-wildcard-certificate):
#    - Comprehensive domain coverage with main domain, subdomains, and service-specific endpoints
#    - Automatic certificate management with cert-manager integration and renewal automation
#    - Advanced SAN configuration with identity services, ZK services, monitoring, and infrastructure
#    - Private key rotation policy with Always rotation and security best practices
#    - Certificate usage optimization with digital signature, key encipherment, and server authentication
#
# 5. Service-Specific Certificates:
#    - Backend Certificate (veridis-backend-certificate): API endpoints and backend service protection
#    - ZK Circuits Certificate (veridis-zk-circuits-certificate): Zero-knowledge proof service security
#    - Identity App Certificate (veridis-identity-app-certificate): Frontend Next.js application protection
#    - Monitoring Certificate (veridis-monitoring-certificate): Observability stack security
#
# ENTERPRISE TLS CERTIFICATE FEATURES:
# ====================================
# Advanced Certificate Management and Security:
#   - RSA 4096-bit encryption with enterprise-grade cryptographic strength and security optimization
#   - TLS 1.3 protocol support with modern cipher suites and security best practices
#   - Wildcard certificate coverage with comprehensive domain and subdomain protection
#   - Automatic renewal with 90-day duration and 15-day renewal window for security optimization
#   - Private key rotation with Always policy for maximum security and key management
#
# Comprehensive ACME Integration and Validation:
#   - Let's Encrypt production and staging server integration with enterprise-grade certificate issuance
#   - DNS-01 challenge validation with Cloudflare, Route53, and multi-provider support
#   - HTTP-01 fallback solver with Nginx ingress and pod template configuration
#   - Rate limiting protection with abuse prevention and enterprise security compliance
#   - Challenge solver selection with domain-specific routing and validation optimization
#
# Enterprise Security and Compliance Integration:
#   - SOC 2 Type II certificate controls with comprehensive audit requirements and security logging
#   - GDPR certificate compliance with data protection and privacy-preserving certificate management
#   - ISO 27001 certificate security management with information security and compliance integration
#   - NIST 800-190 container certificate security with validation and compliance
#   - Zero-trust certificate architecture with comprehensive encryption and authentication requirements
#
# Advanced Certificate Lifecycle Management:
#   - Automated certificate provisioning with cert-manager integration and Kubernetes-native management
#   - Certificate monitoring with expiry alerts, renewal notifications, and validation checks
#   - Security scanning integration with weekly certificate validation and threat detection
#   - Certificate backup and disaster recovery with comprehensive certificate preservation
#   - Business continuity with certificate high availability and failover procedures
#
# OPERATIONAL EXCELLENCE:
# ======================
# Certificate Lifecycle Management:
#   - Multi-certificate architecture with wildcard, service-specific, and environment-specific certificates
#   - Intelligent certificate management with predictive analytics and machine learning correlation
#   - Advanced monitoring with comprehensive certificate analytics and business intelligence
#   - Configuration validation with schema enforcement and deployment safety checks
#   - Automated optimization with usage pattern analysis and certificate recommendation engine
#
# Business Intelligence Integration:
#   - Certificate cost optimization with resource utilization correlation and budget management
#   - Security analytics with certificate pattern monitoring and threat correlation
#   - Compliance intelligence with certificate tracking and regulatory requirement validation
#   - Strategic planning with capacity management and certificate forecasting
#   - Business impact assessment with certificate performance correlation and availability tracking
#
# Certificate Strategy Excellence:
#   - Security-first certificates with RSA 4096-bit encryption and TLS 1.3 protocol optimization
#   - Business-aware certificates with cost optimization and strategic intelligence integration
#   - Development-friendly certificates with staging integration and testing support
#   - Service-specific certificates with endpoint protection and application security
#   - Compliance-focused certificates with regulatory requirements and audit trail management
#
# Developer Experience Excellence:
#   - Service-specific certificates with application integration and development workflow support
#   - Comprehensive documentation with certificate guides and troubleshooting procedures
#   - Environment-specific certificates with production, staging, and development support
#   - Testing integration with development workflow and certificate validation capabilities
#   - Certificate monitoring with comprehensive tracking and security correlation
#
# ==============================================================================
