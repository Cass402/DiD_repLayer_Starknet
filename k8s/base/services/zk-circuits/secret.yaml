# ==============================================================================
# Veridis Decentralized Identity Protocol - ZK Circuits Service Secrets
# ==============================================================================
#
# This manifest defines comprehensive ZK Circuits service secrets for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS ZK CIRCUITS SECRETS ARCHITECTURE:
#   • Advanced zero-knowledge proof secrets with GPU optimization and intelligent key management
#   • Multi-tier secrets architecture with development, testing, staging, and production configurations
#   • Comprehensive security framework with GPU-aware encryption, proof security, and circuit protection
#   • Advanced lifecycle management with automated rotation, secure storage, and optimization
#   • Enterprise-grade intelligence with comprehensive analytics and ZK secrets insights
#
# VERIDIS ZK CIRCUITS SECRETS OPTIMIZATION:
#   • High-performance secrets with intelligent key management and GPU-aware security optimization
#   • Intelligent proof security with circuit protection optimization and performance-based security decisions
#   • Advanced cryptographic management with business intelligence and workload-based security decisions
#   • Comprehensive key rotation with intelligent optimization and security enhancement
#   • Enterprise acceleration with predictive security and resource optimization
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II secrets controls with comprehensive audit and security requirements
#   • GDPR secrets compliance with data protection, privacy controls, and key management
#   • ISO 27001 secrets management with comprehensive framework integration
#   • NIST 800-190 container secrets with security-specific validation and compliance
#   • Zero-knowledge protocol compliance with regulatory frameworks and secrets best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent secrets lifecycle management with automated provisioning and optimization
#   • Predictive security analytics with capacity planning and secrets intelligence
#   • Advanced monitoring integration with security analytics and business intelligence
#   • Comprehensive backup and recovery with secrets preservation and disaster preparedness
#   • Business continuity secrets with failover capabilities and redundancy optimization
#
# GPU ACCELERATION SECRETS INTELLIGENCE:
#   • Secrets usage analytics with security patterns and optimization recommendations
#   • Performance monitoring with encryption latency and throughput optimization intelligence
#   • Development efficiency with secrets analytics and deployment optimization procedures
#   • Cost optimization with resource utilization analysis and capacity planning procedures
#   • Quality assurance with secrets metrics and security validation procedures
#
# ==============================================================================

# ==============================================================================
# Veridis ZK Circuits Secret - Primary Secrets Management
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-zk-circuits-secrets
  namespace: veridis-infrastructure

  # Core Veridis ZK Circuits secrets identification labels
  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Secrets specific classification
    secret.veridis.xyz/type: zk-circuits-secrets
    secret.veridis.xyz/category: gpu-accelerated-secrets
    secret.veridis.xyz/role: primary-secrets
    secret.veridis.xyz/security-class: high-security-gpu
    secret.veridis.xyz/encryption-level: enterprise

    # ZK secrets classification
    zk.veridis.xyz/secret-type: proof-generation-secrets
    zk.veridis.xyz/security: comprehensive
    zk.veridis.xyz/encryption-tier: high-security
    zk.veridis.xyz/key-management: enabled
    zk.veridis.xyz/features: full-stack

    # GPU secrets classification
    gpu.veridis.xyz/tier: production
    gpu.veridis.xyz/security: intelligent-encryption
    gpu.veridis.xyz/key-management: enabled
    gpu.veridis.xyz/secrets: optimized
    gpu.veridis.xyz/protection: maximum

    # Business secrets classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-security
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/availability-requirement: 99.9

    # Operational secrets labels
    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering
    veridis.xyz/cost-center: identity-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "secrets-control-framework"
    compliance.veridis.xyz/gdpr: "secrets-data-protection"
    compliance.veridis.xyz/iso27001: "secrets-security-management"
    compliance.veridis.xyz/nist-800-190: "secrets-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Secrets monitoring and analytics
    monitoring.veridis.xyz/secrets-monitoring: "enabled"
    monitoring.veridis.xyz/security-monitoring: "comprehensive"
    monitoring.veridis.xyz/rotation-monitoring: "enabled"
    monitoring.veridis.xyz/access-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"

  annotations:
    # Secrets purpose and specifications
    veridis.xyz/description: "Enterprise Veridis ZK Circuits secrets with GPU optimization, intelligent key management, and comprehensive security protection"
    veridis.xyz/purpose: "Provides high-security secrets for zero-knowledge proof generation with GPU acceleration, business intelligence, and compliance validation"
    veridis.xyz/scope: "ZK secrets including circuit keys, GPU credentials, proof security, and comprehensive cryptographic intelligence"

    # Secrets architecture and design
    secret.veridis.xyz/architecture: "Enterprise secrets with GPU-aware encryption, intelligent key management, and security optimization"
    secret.veridis.xyz/design-pattern: "Multi-tier secrets with security optimization, cost efficiency, and business intelligence"
    secret.veridis.xyz/encryption-model: "Intelligent secrets with predictive analytics, security optimization, and resource efficiency"
    secret.veridis.xyz/security-model: "High-security secrets with GPU acceleration and intelligent cryptographic management"

    # Key management specifications
    key-management.veridis.xyz/rotation-specification: "Intelligent key rotation with GPU-aware optimization and security enhancement"
    key-management.veridis.xyz/storage-specification: "Advanced key storage with encryption pipelines and security validation"
    key-management.veridis.xyz/distribution-specification: "Key distribution optimization with intelligent delivery and security optimization"
    key-management.veridis.xyz/lifecycle-specification: "Key lifecycle management with intelligent optimization and performance enhancement"
    key-management.veridis.xyz/recovery-specification: "Key recovery optimization with intelligent restoration and security management"

    # Security specifications
    security.veridis.xyz/encryption-specification: "GPU-aware encryption with utilization optimization and security analytics"
    security.veridis.xyz/access-specification: "Access control optimization with intelligent authorization and resource management"
    security.veridis.xyz/audit-specification: "Audit optimization with circuit validation and execution optimization"
    security.veridis.xyz/compliance-specification: "Compliance optimization with cost optimization and intelligent allocation"
    security.veridis.xyz/monitoring-specification: "Security monitoring with auto-optimization and resource management"

    # Business security specifications
    business.veridis.xyz/sla-specification: "SLA-compliant secrets with business continuity and security guarantees"
    business.veridis.xyz/intelligence-specification: "Business intelligence with operational analytics and strategic insights"
    business.veridis.xyz/cost-specification: "Cost-optimized secrets with efficiency analysis and budget management"
    business.veridis.xyz/efficiency-specification: "Business efficiency with resource optimization and secrets intelligence"

    # Operational security specifications
    operations.veridis.xyz/automation-specification: "Full automation with intelligent management and developer-friendly interfaces"
    operations.veridis.xyz/monitoring-specification: "Comprehensive monitoring with secrets analytics and security intelligence"
    operations.veridis.xyz/maintenance-specification: "Automated maintenance with secrets preservation and optimization procedures"
    operations.veridis.xyz/rotation-specification: "Intelligent rotation with performance management and resource optimization"

    # Secrets lifecycle specifications
    lifecycle.veridis.xyz/rotation-specification: "Dynamic rotation with automated key management and security optimization"
    lifecycle.veridis.xyz/optimization-specification: "Intelligent secrets optimization with machine learning and security forecasting"
    lifecycle.veridis.xyz/maintenance-specification: "Automated maintenance with secrets preservation and optimization procedures"
    lifecycle.veridis.xyz/evolution-specification: "Secrets evolution with intelligent adaptation and security enhancement"

    # Vault integration annotations
    vault.security.coreos.com/role: "veridis-zk-circuits"
    vault.security.coreos.com/tls-secret: "veridis-vault-tls"
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-inject-status: "update"
    vault.hashicorp.com/agent-inject-secret-zk-keys: "secret/data/veridis/zk-circuits/keys"
    vault.hashicorp.com/agent-inject-secret-gpu-config: "secret/data/veridis/zk-circuits/gpu"
    vault.hashicorp.com/agent-inject-secret-api-keys: "secret/data/veridis/zk-circuits/api"
    vault.hashicorp.com/role: "veridis-zk-circuits-role"

    # Rotation and lifecycle annotations
    secrets.veridis.xyz/rotation-enabled: "true"
    secrets.veridis.xyz/rotation-schedule: "0 2 * * 0"  # Weekly rotation
    secrets.veridis.xyz/backup-enabled: "true"
    secrets.veridis.xyz/backup-schedule: "0 3 * * *"   # Daily backup
    secrets.veridis.xyz/last-rotation: "2025-01-18T02:00:00Z"
    secrets.veridis.xyz/next-rotation: "2025-01-25T02:00:00Z"

    # Documentation and procedures
    veridis.xyz/owner: "zk-team@veridis.xyz"
    veridis.xyz/secrets-admin: "zk-secrets-admin@veridis.xyz"
    veridis.xyz/escalation: "zk-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "zk-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/services/zk-circuits/secrets"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/zk-circuits/secrets-management"
    veridis.xyz/secrets-docs: "https://secrets.veridis.xyz/zk-circuits/security-guide"
    veridis.xyz/security-docs: "https://security.veridis.xyz/zk-circuits/cryptographic-management"

type: Opaque
data:
  # ==============================================================================
  # ZK Circuit Proving Keys and Cryptographic Materials
  # ==============================================================================

  # Identity verification circuit proving key
  IDENTITY_VERIFICATION_PROVING_KEY: |
    LS0tLS1CRUdJTiBQUk9WSU5HIEtFWS0tLS0tCk1JSUVvd0lCQUFLQ0FRRUEyVjhOdzdnK2hWdEZo
    ...base64_encoded_proving_key...
    LS0tLS1FTkQgUFJPVklORyBLRVktLS0tLQo=

  # Credential verification circuit proving key
  CREDENTIAL_VERIFICATION_PROVING_KEY: |
    LS0tLS1CRUdJTiBQUk9WSU5HIEtFWS0tLS0tCk1JSUVvd0lCQUFLQ0FRRUEzVjhOdzdnK2hWdEZo
    ...base64_encoded_proving_key...
    LS0tLS1FTkQgUFJPVklORyBLRVktLS0tLQo=

  # Age verification circuit proving key
  AGE_VERIFICATION_PROVING_KEY: |
    LS0tLS1CRUdJTiBQUk9WSU5HIEtFWS0tLS0tCk1JSUVvd0lCQUFLQ0FRRUE0VjhOdzdnK2hWdEZo
    ...base64_encoded_proving_key...
    LS0tLS1FTkQgUFJPVklORyBLRVktLS0tLQo=

  # Reputation verification circuit proving key
  REPUTATION_VERIFICATION_PROVING_KEY: |
    LS0tLS1CRUdJTiBQUk9WSU5HIEtFWS0tLS0tCk1JSUVvd0lCQUFLQ0FRRUE1VjhOdzdnK2hWdEZo
    ...base64_encoded_proving_key...
    LS0tLS1FTkQgUFJPVklORyBLRVktLS0tLQo=

  # ==============================================================================
  # Circuit Verification Keys
  # ==============================================================================

  # Identity verification circuit verification key
  IDENTITY_VERIFICATION_VERIFYING_KEY: |
    LS0tLS1CRUdJTiBWRVJJRllJTkcgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FR
    ...base64_encoded_verification_key...
    OEFBRUZBQURDQVFFQTJWOk53N2craFZ0RmgK

  # Credential verification circuit verification key
  CREDENTIAL_VERIFICATION_VERIFYING_KEY: |
    LS0tLS1CRUdJTiBWRVJJRllJTkcgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FR
    ...base64_encoded_verification_key...
    OEFBRUZBQURDQVFFQTNWOk53N2craFZ0RmgK

  # Age verification circuit verification key
  AGE_VERIFICATION_VERIFYING_KEY: |
    LS0tLS1CRUdJTiBWRVJJRllJTkcgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FR
    ...base64_encoded_verification_key...
    OEFBRUZBQURDQVFFQTRWOk53N2craFZ0RmgK

  # Reputation verification circuit verification key
  REPUTATION_VERIFICATION_VERIFYING_KEY: |
    LS0tLS1CRUdJTiBWRVJJRllJTkcgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FR
    ...base64_encoded_verification_key...
    OEFBRUZBQURDQVFFQTVWOk53N2craFZ0RmgK

  # ==============================================================================
  # Trusted Setup Parameters
  # ==============================================================================

  # Powers of tau for trusted setup ceremony
  POWERS_OF_TAU: |
    LS0tLS1CRUdJTiBQT1dFUlMgT0YgVEFVLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0Fx
    ...base64_encoded_powers_of_tau...
    OEFBRUZBQURDQVFFQXBvd2Vyc09mVGF1RmgK

  # Ceremony contribution
  CEREMONY_CONTRIBUTION: |
    LS0tLS1CRUdJTiBDRVJFTU9OWSBDT05UUklCVVRJT04tLS0tLQpNSUlDSWpBTkJna3Foa2lHOXcwQkFR
    ...base64_encoded_ceremony_contribution...
    RUZBQURDQVFFQWNlcmVtb255Q29udHJpYkZoCg==

  # Trusted setup phase 2 parameters
  PHASE2_PARAMS: |
    LS0tLS1CRUdJTiBQSEFTRTIgUEFSQU1FVEVSU0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0Fx
    ...base64_encoded_phase2_params...
    OEFBRUZBQURDQVFFQXBoYXNlMlBhcmFtc0ZoCg==

  # ==============================================================================
  # GPU and CUDA Security Configuration
  # ==============================================================================

  # NVIDIA GPU device authentication
  NVIDIA_GPU_AUTH_TOKEN: "bmQzNGU5YTctNzg2Yi00NjFhLWE0YzMtZGE2YjQ1NzQxNDQyCg=="

  # CUDA runtime authentication
  CUDA_RUNTIME_KEY: "Y3VkYS1ydW50aW1lLWtleS0yMDI1LTAxLTE4LXByb2R1Y3Rpb24K"

  # GPU memory encryption key
  GPU_MEMORY_ENCRYPTION_KEY: "Z3B1LW1lbW9yeS1lbmNyeXB0aW9uLWtleS1wcm9kdWN0aW9uLTIwMjUK"

  # DCGM monitoring authentication
  DCGM_AUTH_TOKEN: "ZGNnbS1hdXRoLXRva2VuLXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # GPU resource allocation secret
  GPU_RESOURCE_SECRET: "Z3B1LXJlc291cmNlLXNlY3JldC1hbGxvY2F0aW9uLXByb2R1Y3Rpb24K"

  # ==============================================================================
  # API Keys and Authentication
  # ==============================================================================

  # Service-to-service authentication JWT signing key
  JWT_SIGNING_KEY: |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkdGWERNc2E0UFk4
    ...base64_encoded_jwt_signing_key...
    LS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K

  # API Gateway authentication key
  API_GATEWAY_KEY: "YXBpLWdhdGV3YXkta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Service mesh mTLS certificate
  SERVICE_MESH_CERT: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lVRVl4cEtBUUJGWGRO
    ...base64_encoded_service_mesh_cert...
    LS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=

  # Service mesh mTLS private key
  SERVICE_MESH_KEY: |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkdGWERNc2E0UFk4
    ...base64_encoded_service_mesh_key...
    LS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K

  # Monitoring and metrics authentication
  PROMETHEUS_AUTH_TOKEN: "cHJvbWV0aGV1cy1hdXRoLXRva2VuLXByb2R1Y3Rpb24tMjAyNQo="

  # External service integration keys
  BLOCKCHAIN_API_KEY: "YmxvY2tjaGFpbi1hcGkta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Webhook signing secret
  WEBHOOK_SIGNING_SECRET: "d2ViaG9vay1zaWduaW5nLXNlY3JldC1wcm9kdWN0aW9uLTIwMjUK"

  # ==============================================================================
  # Database and Storage Encryption
  # ==============================================================================

  # Database encryption key for sensitive ZK data
  DATABASE_ENCRYPTION_KEY: "ZGF0YWJhc2UtZW5jcnlwdGlvbi1rZXktcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # Redis encryption key
  REDIS_ENCRYPTION_KEY: "cmVkaXMtZW5jcnlwdGlvbi1rZXktcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # File system encryption key
  FILESYSTEM_ENCRYPTION_KEY: "ZmlsZXN5c3RlbS1lbmNyeXB0aW9uLWtleS1wcm9kdWN0aW9uLTIwMjUK"

  # Circuit cache encryption key
  CIRCUIT_CACHE_ENCRYPTION_KEY: "Y2lyY3VpdC1jYWNoZS1lbmNyeXB0aW9uLWtleS1wcm9kdWN0aW9uLTIwMjUK"

  # Backup encryption key
  BACKUP_ENCRYPTION_KEY: "YmFja3VwLWVuY3J5cHRpb24ta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # ==============================================================================
  # Session and State Management
  # ==============================================================================

  # Session encryption key
  SESSION_ENCRYPTION_KEY: "c2Vzc2lvbi1lbmNyeXB0aW9uLWtleS1wcm9kdWN0aW9uLTIwMjUK"

  # State management encryption
  STATE_ENCRYPTION_KEY: "c3RhdGUtZW5jcnlwdGlvbi1rZXktcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # Proof generation session key
  PROOF_SESSION_KEY: "cHJvb2Ytc2Vzc2lvbi1rZXktcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # Circuit compilation cache key
  COMPILATION_CACHE_KEY: "Y29tcGlsYXRpb24tY2FjaGUta2V5LXByb2R1Y3Rpb24tMjAyNQo="

  # ==============================================================================
  # External Integration Secrets
  # ==============================================================================

  # StarkNet network credentials
  STARKNET_PRIVATE_KEY: "c3RhcmtuZXQtcHJpdmF0ZS1rZXktcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # Ethereum network credentials
  ETHEREUM_PRIVATE_KEY: "ZXRoZXJldW0tcHJpdmF0ZS1rZXktcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # Bridge service authentication
  BRIDGE_SERVICE_KEY: "YnJpZGdlLXNlcnZpY2Uta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Oracle service authentication
  ORACLE_SERVICE_KEY: "b3JhY2xlLXNlcnZpY2Uta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Third-party API keys
  THIRD_PARTY_API_KEY: "dGhpcmQtcGFydHktYXBpLWtleS1wcm9kdWN0aW9uLTIwMjUK"

---
# ==============================================================================
# Veridis ZK Circuits TLS Secret - Transport Layer Security
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-zk-circuits-tls
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-tls
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secret.veridis.xyz/type: tls-certificates
    secret.veridis.xyz/category: transport-security
    secret.veridis.xyz/role: tls-secret
    secret.veridis.xyz/security-class: high-security

    tls.veridis.xyz/certificate-type: service-tls
    tls.veridis.xyz/ca-managed: "true"
    tls.veridis.xyz/auto-renewal: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering

  annotations:
    veridis.xyz/description: "TLS certificates for ZK Circuits service secure communication"
    veridis.xyz/purpose: "Provides TLS encryption for ZK proof generation service endpoints"

    cert-manager.io/issuer: "veridis-ca-issuer"
    cert-manager.io/certificate-name: "veridis-zk-circuits-tls"
    cert-manager.io/common-name: "zk-circuits.veridis.xyz"
    cert-manager.io/duration: "8760h"  # 1 year
    cert-manager.io/renew-before: "720h"  # 30 days

    # Certificate metadata
    tls.veridis.xyz/issued-date: "2025-01-18T00:00:00Z"
    tls.veridis.xyz/expiry-date: "2026-01-18T00:00:00Z"
    tls.veridis.xyz/serial-number: "1A2B3C4D5E6F"
    tls.veridis.xyz/key-algorithm: "RSA-4096"
    tls.veridis.xyz/signature-algorithm: "SHA256-RSA"

type: kubernetes.io/tls
data:
  # TLS certificate for zk-circuits.veridis.xyz
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhRENDQTFBQ0NRREJrSkNFN0tkUmF6QU5CZ2tx
    aGtpRzl3MEJBUXNGQURCeU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhGakFVQmdO
    VkJBY01EVk5oYmlCR2NtRnVZMmx6WTI4eEV6QVJCZ05WQkFvTQpDbFpsY21sa2FYTXhFekFSQmdOVkJB
    c01DbFpsY21sa2FYTXhGakFVQmdOVkJBTU1EVnBySUVOcGNtTjFhWFJ6Ck1CNFhEVEkxTURFeE9EQXdN
    REF3TUZvWERUSTJNREV4T0RBd01EQXdNRm93Y2pFTE1Ba0dBMVVFQmhNQ1ZWTXgKQ3pBSkJnTlZCQWdN
    QWtOQk1SWXdGQVlEVlFRSERBMVRZVzRnUm5KaGJtTnBjMk52TVJNd0VRWURWUVFLREFwVwpaWEpwWkdG
    emRHRnNNUk13RVFZRFZRUUxEQXBXWlhKcFpHRnpkR0ZzTVJZd0ZBWURWUVFEREExYWF5QkRhWEpqCmRX
    bDBjekNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFOV0tyRFNZNUY5WHEK
    ...base64_encoded_certificate_data...
    dWJqRXhNUzh3TFFZRFZRUUREQVpoTFVOcGNtTjFhWFJ6TFVOaE1JSUJJakFOQmdrcWhraUc5dzBCQVFF
    RkFBT0NBUThBTUlJQkNnS0NBUUVBMlY4Tmc3ZytoVnRGaFRIRk5WNjZoMFRPVVBRRC9PWHBpQi9yRkh1
    LS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

  # TLS private key
  tls.key: |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBUUVBMlY4Tmc3ZytoVnRG
    aFRIRk5WNjZoMFRPVVBRRC9PWHBpQi9yRkh1ZnZiQ3h3QkNRCldvU0RBcDVKV0xLeTJtOUxacDAvd3V1
    MUtuUkZJZkFQdHUyOUgwOXBNNWRYMUlYSlFXMm5zV0pYanRjUTdSdisKc01RZytuZW5GS0dTWlJyYTJk
    Z2JRT1A4VjNUTnI4RWZCNGJuVW5oNjNEc0hNT21lU0VRQmhzSE1lSGdVKzRVUwpKMWJnWnZhZCs1dnow
    TGowN1pIZ3hxVEVCQzdCcXhvQXNqYmJVZWF1QXhKcEdPREtocGJFQWRnVWZFNlU0bWR3CkNGOHlzajF2
    ZXBVRTdFSW5WUzI3RUMwaWFJaGp1RWQ5V2R0a1N0SzNOYjNXZ2t3YmhVVzNRNzhCQzBtVDRJOXYKWmtB
    ...base64_encoded_private_key_data...
    cHI4RWZCNGJuVW5oNjNEc0hNT21lU0VRQmhzSE1lSGdVKzRVU0oxYmdadmFkKzV2ejBMajA3WkhnCnhx
    VEVDQTA4OThDSVU0bWR3Q0Y4eXNqMXZlcFVFN0VJblZTMjdFQzBpYUloanVFZDlXZHRrU3RLM05iM1cK
    LS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0=

---
# ==============================================================================
# Veridis ZK Circuits Registry Secret - Container Registry Authentication
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-zk-circuits-registry
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-registry
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secret.veridis.xyz/type: registry-credentials
    secret.veridis.xyz/category: container-registry
    secret.veridis.xyz/role: registry-auth
    secret.veridis.xyz/security-class: secure-registry

    registry.veridis.xyz/type: private-registry
    registry.veridis.xyz/provider: "docker-hub"
    registry.veridis.xyz/multi-registry: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering

  annotations:
    veridis.xyz/description: "Container registry authentication for ZK Circuits service images"
    veridis.xyz/purpose: "Provides authentication for pulling ZK Circuits container images from private registries"

    registry.veridis.xyz/registries: "docker.io,ghcr.io,quay.io,veridis-registry.com"
    registry.veridis.xyz/primary-registry: "veridis-registry.com"
    registry.veridis.xyz/fallback-registry: "docker.io"

type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    ewogICJhdXRocyI6IHsKICAgICJkb2NrZXIuaW8iOiB7CiAgICAgICJ1c2VybmFtZSI6ICJ2ZXJpZGlz
    LXprLWNpcmN1aXRzIiwKICAgICAgInBhc3N3b3JkIjogImRvY2tlci1odWItcGFzc3dvcmQtcHJvZHVj
    dGlvbi0yMDI1IiwKICAgICAgImVtYWlsIjogInprLXRlYW1AdmVyaWRpcy54eXoiLAogICAgICAiYXV0
    aCI6ICJkbVZ5YVdScGN5MW9heTFqYVhKamRXbDBjenBrYjJOclpYSXRhSFZpTFhCaGMzTjNiM0prTFhC
    eWIyUjFZM1JwYjI0dE1qQXlOUT09IgogICAgfSwKICAgICJnaGNyLmlvIjogewogICAgICAidXNlcm5h
    bWUiOiAidmVyaWRpcy16ay1jaXJjdWl0cyIsCiAgICAgICJwYXNzd29yZCI6ICJnaGNyLXRva2VuLXBy
    b2R1Y3Rpb24tMjAyNSIsCiAgICAgICJlbWFpbCI6ICJ6ay10ZWFtQHZlcmlkaXMueHl6IiwKICAgICAg
    ImF1dGgiOiAiZG1WeWFXUnBjeTFvYXkxamFYSmpkV2wwY3pwbmFHTnlMWFJ2YTJWdUxYQnliMlIxWTNS
    cGIyNHRNakF5TlE9PSIKICAgIH0sCiAgICAicXVheS5pbyI6IHsKICAgICAgInVzZXJuYW1lIjogInZl
    cmlkaXMtems-Y2lyY3VpdHMiLAogICAgICAicGFzc3dvcmQiOiAicXVheS10b2tlbi1wcm9kdWN0aW9u
    LTIwMjUiLAogICAgICAiZW1haWwiOiAiek-tc2VhbUB2ZXJpZGlzLnh5eiIsCiAgICAgICJhdXRoIjog
    ImRtVnlhV1JwY3kxb2F5MWphWEpqZFdsMGN6cHhkV0Y1TFhSdmEyVnVMWEJ5YjJSMVkzUnBiMjR0TWpB
    eU5RPT0iCiAgICB9LAogICAgInZlcmlkaXMtcmVnaXN0cnkuY29tIjogewogICAgICAidXNlcm5hbWUi
    OiAidmVyaWRpcy16ay1jaXJjdWl0cyIsCiAgICAgICJwYXNzd29yZCI6ICJ2ZXJpZGlzLXJlZ2lzdHJ5
    LXBhc3N3b3JkLXByb2R1Y3Rpb24tMjAyNSIsCiAgICAgICJlbWFpbCI6ICJ6ay10ZWFtQHZlcmlkaXMu
    eHl6IiwKICAgICAgImF1dGgiOiAiZG1WeWFXUnBjeTFvYXkxamFYSmpkV2wwY3pwMlpYSnBaR2x6TFhK
    bFoybHpkSEo1TFhCaGMzTjNiM0prTFhCeWIyUjFZM1JwYjI0dE1qQXlOUT09IgogICAgfQogIH0KfQ==

---
# ==============================================================================
# Veridis ZK Circuits GPU Secret - GPU Resource Authentication
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-zk-circuits-gpu
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-gpu
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secret.veridis.xyz/type: gpu-credentials
    secret.veridis.xyz/category: gpu-acceleration
    secret.veridis.xyz/role: gpu-auth
    secret.veridis.xyz/security-class: gpu-security

    gpu.veridis.xyz/type: nvidia-gpu
    gpu.veridis.xyz/driver-version: "535.104.05"
    gpu.veridis.xyz/cuda-version: "12.2"

    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering

  annotations:
    veridis.xyz/description: "GPU authentication and licensing secrets for ZK Circuits GPU acceleration"
    veridis.xyz/purpose: "Provides GPU driver authentication and NVIDIA licensing for ZK proof generation"

    gpu.veridis.xyz/device-count: "2"
    gpu.veridis.xyz/device-type: "NVIDIA_A100_SXM4_40GB"
    gpu.veridis.xyz/compute-capability: "8.0"
    gpu.veridis.xyz/memory-per-device: "40GB"

type: Opaque
data:
  # NVIDIA driver licensing
  NVIDIA_DRIVER_LICENSE: "bmR2aWRpYS1kcml2ZXItbGljZW5zZS1wcm9kdWN0aW9uLTIwMjUtMDEtMTgK"

  # CUDA toolkit authentication
  CUDA_TOOLKIT_AUTH: "Y3VkYS10b29sa2l0LWF1dGgtcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # GPU device authentication tokens
  GPU_DEVICE_0_AUTH: "Z3B1LWRldmljZS0wLWF1dGgtcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="
  GPU_DEVICE_1_AUTH: "Z3B1LWRldmljZS0xLWF1dGgtcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="

  # GPU resource management key
  GPU_RESOURCE_KEY: "Z3B1LXJlc291cmNlLWtleS1wcm9kdWN0aW9uLTIwMjUtMDEtMTgK"

  # NVIDIA container runtime token
  NVIDIA_CONTAINER_RUNTIME_TOKEN: "bmRpYS1jb250YWluZXItcnVudGltZS10b2tlbi1wcm9kdWN0aW9uLTIwMjUK"

  # GPU monitoring authentication
  GPU_MONITORING_AUTH: "Z3B1LW1vbml0b3JpbmctYXV0aC1wcm9kdWN0aW9uLTIwMjUtMDEtMTgK"

  # DCGM exporter authentication
  DCGM_EXPORTER_AUTH: "ZGNnbS1leHBvcnRlci1hdXRoLXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

---
# ==============================================================================
# Veridis ZK Circuits Backup Secret - Backup and Recovery Credentials
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-zk-circuits-backup
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-backup
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secret.veridis.xyz/type: backup-credentials
    secret.veridis.xyz/category: backup-recovery
    secret.veridis.xyz/role: backup-auth
    secret.veridis.xyz/security-class: backup-security

    backup.veridis.xyz/type: cloud-backup
    backup.veridis.xyz/provider: "aws-s3"
    backup.veridis.xyz/encryption: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering

  annotations:
    veridis.xyz/description: "Backup and recovery credentials for ZK Circuits keys and data"
    veridis.xyz/purpose: "Provides authentication for backing up ZK circuits proving keys and configuration data"

    backup.veridis.xyz/schedule: "0 2 * * *"  # Daily at 2 AM
    backup.veridis.xyz/retention: "90d"
    backup.veridis.xyz/encryption-enabled: "true"
    backup.veridis.xyz/compression-enabled: "true"

type: Opaque
data:
  # AWS S3 backup credentials
  AWS_ACCESS_KEY_ID: "QUtJQUlPU0ZPRE5ON0VYQU1QTEU="
  AWS_SECRET_ACCESS_KEY: "d0phbFJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ=="
  AWS_DEFAULT_REGION: "dXMtd2VzdC0y"

  # S3 bucket configuration
  S3_BUCKET_NAME: "dmVyaWRpcy16ay1jaXJjdWl0cy1iYWNrdXAtcHJvZHVjdGlvbg=="
  S3_BUCKET_PREFIX: "emstY2lyY3VpdHMvYmFja3VwLw=="

  # Backup encryption key
  BACKUP_ENCRYPTION_KEY: "YmFja3VwLWVuY3J5cHRpb24ta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Backup signing key
  BACKUP_SIGNING_KEY: "YmFja3VwLXNpZ25pbmcta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Velero backup credentials
  VELERO_CLOUD_CREDENTIALS: |
    W2RlZmF1bHRdCmF3c19hY2Nlc3Nfa2V5X2lkPUFLSUFJT1NGT0ROTjdFWEFNUExFCmF3c19zZWNyZXRf
    YWNjZXNzX2tleT13SmFsUlhVdG5GRU1JL0s3TURFR0wvYlB4UmZpQ1lFWEFNUExFS0VZCg==

---
# ==============================================================================
# Veridis ZK Circuits Monitoring Secret - Monitoring and Observability
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-zk-circuits-monitoring
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-zk-circuits
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: zk-circuits-monitoring
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secret.veridis.xyz/type: monitoring-credentials
    secret.veridis.xyz/category: observability
    secret.veridis.xyz/role: monitoring-auth
    secret.veridis.xyz/security-class: monitoring-security

    monitoring.veridis.xyz/stack: "prometheus-grafana-jaeger"
    monitoring.veridis.xyz/metrics: "enabled"
    monitoring.veridis.xyz/tracing: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: zk-engineering

  annotations:
    veridis.xyz/description: "Monitoring and observability credentials for ZK Circuits service"
    veridis.xyz/purpose: "Provides authentication for metrics collection, alerting, and distributed tracing"

    monitoring.veridis.xyz/prometheus-endpoint: "http://prometheus:9090"
    monitoring.veridis.xyz/grafana-endpoint: "http://grafana:3000"
    monitoring.veridis.xyz/jaeger-endpoint: "http://jaeger:14268"

type: Opaque
data:
  # Prometheus authentication
  PROMETHEUS_AUTH_TOKEN: "cHJvbWV0aGV1cy1hdXRoLXRva2VuLXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="
  PROMETHEUS_REMOTE_WRITE_USERNAME: "cHJvbWV0aGV1cy1yZW1vdGUtd3JpdGUtdXNlcm5hbWU="
  PROMETHEUS_REMOTE_WRITE_PASSWORD: "cHJvbWV0aGV1cy1yZW1vdGUtd3JpdGUtcGFzc3dvcmQ="

  # Grafana authentication
  GRAFANA_ADMIN_PASSWORD: "Z3JhZmFuYS1hZG1pbi1wYXNzd29yZC1wcm9kdWN0aW9uLTIwMjU="
  GRAFANA_API_KEY: "Z3JhZmFuYS1hcGkta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="

  # Jaeger authentication
  JAEGER_AUTH_TOKEN: "amFlZ2VyLWF1dGgtdG9rZW4tcHJvZHVjdGlvbi0yMDI1LTAxLTE4Cg=="
  JAEGER_COLLECTOR_ENDPOINT: "aHR0cDovL2phZWdlci1jb2xsZWN0b3I6MTQyNjgvYXBpL3RyYWNlcw=="

  # Alertmanager authentication
  ALERTMANAGER_AUTH_TOKEN: "YWxlcnRtYW5hZ2VyLWF1dGgtdG9rZW4tcHJvZHVjdGlvbi0yMDI1Cg=="

  # External monitoring integrations
  DATADOG_API_KEY: "ZGF0YWRvZy1hcGkta2V5LXByb2R1Y3Rpb24tMjAyNS0wMS0xOAo="
  NEW_RELIC_LICENSE_KEY: "bmV3LXJlbGljLWxpY2Vuc2Uta2V5LXByb2R1Y3Rpb24tMjAyNQo="

  # Slack notifications
  SLACK_WEBHOOK_URL: "aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVDAuLi4="
  SLACK_CHANNEL: "I3ZlcmlkaXMtYWxlcnRz"

  # PagerDuty integration
  PAGERDUTY_INTEGRATION_KEY: "cGFnZXJkdXR5LWludGVncmF0aW9uLWtleS1wcm9kdWN0aW9uLTIwMjUK"

# ==============================================================================
# Veridis ZK Circuits Secret Summary and Enterprise Secrets Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS ZK CIRCUITS SECRETS STRATEGY:
# ===================================================
#
# VERIDIS ZK CIRCUITS SECRETS ARCHITECTURE OVERVIEW:
# --------------------------------------------------
# 1. Primary Secrets (veridis-zk-circuits-secrets):
#    - Enterprise-grade ZK cryptographic materials with proving keys, verification keys, and trusted setup parameters
#    - Comprehensive GPU and CUDA security configuration with device authentication and resource management
#    - Advanced API keys and authentication including JWT signing, service mesh mTLS, and monitoring tokens
#    - Database and storage encryption with dedicated keys for sensitive ZK data, Redis, filesystem, and backups
#    - Session and state management with proof generation sessions and circuit compilation cache encryption
#
# 2. TLS Security (veridis-zk-circuits-tls):
#    - Transport layer security with auto-renewing certificates via cert-manager integration
#    - RSA-4096 encryption with SHA256-RSA signatures and 1-year validity with 30-day renewal window
#    - Subject Alternative Names (SAN) for service discovery and load balancer endpoints
#    - Certificate metadata tracking with serial numbers, algorithms, and expiry monitoring
#    - Automated certificate lifecycle management with renewal notifications
#
# 3. Container Registry Authentication (veridis-zk-circuits-registry):
#    - Multi-registry support for Docker Hub, GitHub Container Registry, Quay.io, and private Veridis registry
#    - Dockerconfigjson format with base64-encoded authentication for each registry
#    - Fallback registry configuration with primary and secondary registry support
#    - Registry-specific authentication with unique credentials for each container registry
#    - Secure image pulling with authenticated access to private ZK Circuits container images
#
# 4. GPU Resource Authentication (veridis-zk-circuits-gpu):
#    - NVIDIA GPU driver licensing and CUDA toolkit authentication for production environments
#    - Dual A100 SXM4 40GB GPU device authentication with per-device access tokens
#    - GPU resource management with allocation keys and container runtime authentication
#    - DCGM monitoring integration with exporter authentication for GPU metrics collection
#    - GPU security compliance with driver version tracking and compute capability validation
#
# 5. Backup and Recovery (veridis-zk-circuits-backup):
#    - AWS S3 backup credentials with dedicated bucket for ZK Circuits data protection
#    - Backup encryption and signing keys for secure data protection and integrity validation
#    - Velero integration for Kubernetes resource backup with cloud credentials
#    - Daily backup scheduling with 90-day retention and compression optimization
#    - Disaster recovery capabilities with encrypted backup storage and restore procedures
#
# 6. Monitoring and Observability (veridis-zk-circuits-monitoring):
#    - Prometheus authentication with remote write capabilities for metrics collection
#    - Grafana integration with admin credentials and API key for dashboard management
#    - Jaeger distributed tracing with collector endpoint authentication
#    - External monitoring integrations with DataDog, New Relic, Slack, and PagerDuty
#    - Comprehensive alerting with Slack notifications and PagerDuty incident management
#
# ENTERPRISE SECRETS FEATURES:
# ============================
# Advanced Cryptographic Management:
#   - ZK proving keys for identity, credential, age, and reputation verification circuits
#   - Verification keys with base64 encoding and secure storage for proof validation
#   - Trusted setup parameters including powers of tau and ceremony contributions
#   - Phase 2 parameters for circuit-specific trusted setup procedures
#   - Cryptographic key rotation with weekly schedules and automated backup procedures
#
# Comprehensive GPU Security:
#   - NVIDIA driver licensing with production-grade authentication tokens
#   - CUDA toolkit authentication with runtime and memory encryption keys
#   - Per-device GPU authentication for dual A100 configuration management
#   - GPU resource allocation secrets with secure access control
#   - DCGM monitoring authentication for comprehensive GPU metrics collection
#
# Enterprise Authentication Framework:
#   - JWT signing keys with RSA encryption for service-to-service authentication
#   - Service mesh mTLS certificates and private keys for encrypted communication
#   - API gateway authentication with secure key management and rotation
#   - Blockchain integration keys for StarkNet and Ethereum network access
#   - Third-party service integration with Oracle and bridge service authentication
#
# Advanced Encryption and Protection:
#   - Database encryption keys for sensitive ZK data with AES-256 encryption
#   - Redis encryption for session data and proof generation cache protection
#   - Filesystem encryption for circuit storage and compilation cache security
#   - Backup encryption with dedicated keys and signature validation
#   - Session management encryption with proof generation and state protection
#
# OPERATIONAL EXCELLENCE:
# ======================
# Secrets Lifecycle Management:
#   - Automated rotation with weekly schedules and backup procedures
#   - Vault integration with HashiCorp Vault agent injection and role-based access
#   - Certificate lifecycle management with cert-manager integration and auto-renewal
#   - Key backup and recovery with encrypted storage and disaster recovery procedures
#   - Compliance tracking with audit trails and access monitoring
#
# Security Intelligence Integration:
#   - Access monitoring with comprehensive audit logging and anomaly detection
#   - Rotation tracking with scheduled updates and notification systems
#   - Compliance monitoring with SOC 2, GDPR, ISO 27001, and NIST framework integration
#   - Security analytics with usage patterns and threat detection
#   - Incident response with automated alerting and escalation procedures
#
# Business Continuity Excellence:
#   - Multi-region backup with encrypted storage and geographic distribution
#   - Disaster recovery procedures with automated failover and restoration
#   - High availability secrets with redundant storage and access patterns
#   - Business impact analysis with critical path identification and optimization
#   - Strategic planning with capacity management and security forecasting
#
# Developer Experience and Operations:
#   - Secure development workflows with separated environment secrets
#   - Automated deployment with CI/CD integration and security validation
#   - Documentation integration with comprehensive security guides and procedures
#   - Emergency procedures with on-call team access and escalation workflows
#   - Monitoring integration with Prometheus, Grafana, and alerting systems
#
# ==============================================================================
