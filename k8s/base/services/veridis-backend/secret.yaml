# ==============================================================================
# Veridis Decentralized Identity Protocol - Backend Service Secrets Management
# ==============================================================================
#
# This manifest defines comprehensive Veridis Backend secrets management for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS BACKEND SECRETS ARCHITECTURE:
#   • Advanced secrets management with comprehensive encryption, rotation, and lifecycle management
#   • Multi-tier secrets architecture with development, testing, staging, and production configurations
#   • Comprehensive security framework with encryption at rest and in transit, access controls, and audit capabilities
#   • Advanced lifecycle management with automated provisioning, rotation, and compliance validation
#   • Enterprise-grade intelligence with comprehensive analytics and security monitoring
#
# VERIDIS BACKEND SECRETS PERFORMANCE OPTIMIZATION:
#   • High-performance secrets management with intelligent caching and optimization strategies
#   • Intelligent secrets rotation with automated procedures and zero-downtime updates
#   • Advanced HashiCorp Vault integration with comprehensive key management and security
#   • Comprehensive monitoring integration with secrets usage analytics and security intelligence
#   • Enterprise acceleration with secrets optimization and intelligent resource management
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II secrets controls with comprehensive audit and security requirements
#   • GDPR secrets compliance with data protection, privacy controls, and encryption procedures
#   • ISO 27001 secrets security management with comprehensive framework integration
#   • NIST 800-190 container secrets with security-specific validation and compliance
#   • Identity protocol compliance with regulatory frameworks and secrets best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent secrets lifecycle management with automated provisioning and optimization
#   • Predictive secrets analytics with security monitoring and threat intelligence
#   • Advanced monitoring integration with secrets analytics and business intelligence
#   • Comprehensive backup and recovery with secrets preservation and disaster preparedness
#   • Business continuity secrets with failover capabilities and redundancy optimization
#
# RUST AXUM SECRETS INTELLIGENCE:
#   • Secrets usage analytics with access patterns and optimization recommendations
#   • Security monitoring with secrets access and comprehensive threat intelligence
#   • Development efficiency with secrets analytics and deployment optimization procedures
#   • Cost optimization with resource utilization analysis and capacity planning procedures
#   • Quality assurance with secrets metrics and security validation procedures
#
# ==============================================================================

# ==============================================================================
# Veridis Backend Primary Secrets - Core Authentication and Encryption
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-backend-secrets
  namespace: veridis-infrastructure

  # Core Veridis Backend secrets identification labels
  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Secrets specific classification
    secrets.veridis.xyz/type: primary-secrets
    secrets.veridis.xyz/category: authentication-encryption
    secrets.veridis.xyz/role: core-credentials
    secrets.veridis.xyz/scope: production
    secrets.veridis.xyz/security-level: enterprise

    # Security classification
    security.veridis.xyz/encryption-level: aes-256
    security.veridis.xyz/rotation-enabled: "true"
    security.veridis.xyz/vault-managed: "true"
    security.veridis.xyz/access-logging: "enabled"
    security.veridis.xyz/compliance-grade: "enterprise"

    # Service secrets classification
    service.veridis.xyz/type: backend-api
    service.veridis.xyz/secrets-category: comprehensive
    service.veridis.xyz/encryption-scope: full-stack
    service.veridis.xyz/key-management: vault-integrated
    service.veridis.xyz/rotation-strategy: automated

    # Rust service secrets classification
    rust.veridis.xyz/version: "1.87.0"
    rust.veridis.xyz/framework: axum
    rust.veridis.xyz/secrets-integration: comprehensive
    rust.veridis.xyz/encryption-support: native
    rust.veridis.xyz/security-level: enterprise

    # Business secrets classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-security
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/security-requirement: maximum

    # Operational secrets labels
    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering
    veridis.xyz/cost-center: identity-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "secrets-control-framework"
    compliance.veridis.xyz/gdpr: "secrets-data-protection"
    compliance.veridis.xyz/iso27001: "secrets-security-management"
    compliance.veridis.xyz/nist-800-190: "secrets-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Secrets monitoring and analytics
    monitoring.veridis.xyz/secrets-monitoring: "enabled"
    monitoring.veridis.xyz/access-monitoring: "comprehensive"
    monitoring.veridis.xyz/security-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"
    monitoring.veridis.xyz/audit-logging: "enabled"

    # Vault integration labels
    vault.veridis.xyz/integration: "enabled"
    vault.veridis.xyz/dynamic-secrets: "enabled"
    vault.veridis.xyz/secret-rotation: "automated"
    vault.veridis.xyz/policy-enforcement: "strict"
    vault.veridis.xyz/audit-trail: "comprehensive"

  annotations:
    # Secrets purpose and specifications
    veridis.xyz/description: "Enterprise Veridis Backend primary secrets with comprehensive authentication, encryption, and security features"
    veridis.xyz/purpose: "Provides secure secrets management for identity backend service with encryption keys, authentication tokens, and security credentials"
    veridis.xyz/scope: "Backend secrets including JWT keys, encryption keys, API tokens, service credentials, and security certificates"

    # Secrets architecture and design
    secrets.veridis.xyz/architecture: "Enterprise secrets management with HashiCorp Vault integration, automated rotation, and comprehensive security"
    secrets.veridis.xyz/design-pattern: "Layered secrets with encryption at rest, automated rotation, and comprehensive access controls"
    secrets.veridis.xyz/security-model: "Zero-trust secrets management with comprehensive encryption and access monitoring"
    secrets.veridis.xyz/rotation-model: "Automated rotation with zero-downtime updates and comprehensive validation"

    # Security secrets specifications
    security.veridis.xyz/encryption-specification: "AES-256-GCM encryption with comprehensive key management and rotation"
    security.veridis.xyz/access-specification: "Role-based access with comprehensive audit logging and monitoring"
    security.veridis.xyz/rotation-specification: "Automated rotation with configurable intervals and zero-downtime procedures"
    security.veridis.xyz/compliance-specification: "Enterprise compliance with SOC 2, GDPR, ISO 27001, and NIST validation"

    # Vault integration specifications
    vault.veridis.xyz/integration-specification: "HashiCorp Vault integration with dynamic secrets and automated management"
    vault.veridis.xyz/policy-specification: "Vault policies with fine-grained access controls and comprehensive validation"
    vault.veridis.xyz/rotation-specification: "Automated secret rotation with Vault integration and zero-downtime updates"
    vault.veridis.xyz/audit-specification: "Comprehensive audit logging with Vault integration and compliance validation"

    # Lifecycle secrets specifications
    lifecycle.veridis.xyz/creation-specification: "Automated secret creation with validation and compliance checking"
    lifecycle.veridis.xyz/rotation-specification: "Scheduled rotation with automated procedures and comprehensive validation"
    lifecycle.veridis.xyz/revocation-specification: "Immediate revocation with comprehensive cleanup and security procedures"
    lifecycle.veridis.xyz/backup-specification: "Secure backup with encryption and comprehensive recovery procedures"

    # Documentation and procedures
    veridis.xyz/owner: "backend-team@veridis.xyz"
    veridis.xyz/secrets-admin: "backend-secrets-admin@veridis.xyz"
    veridis.xyz/escalation: "security-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "security-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/services/backend/secrets"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/backend/secrets-management"
    veridis.xyz/security-docs: "https://security.veridis.xyz/backend/secrets-guide"
    veridis.xyz/compliance-docs: "https://compliance.veridis.xyz/backend/secrets-compliance"

    # Rotation and lifecycle annotations
    secrets.veridis.xyz/last-rotation: "2025-01-18T10:00:00Z"
    secrets.veridis.xyz/next-rotation: "2025-02-18T10:00:00Z"
    secrets.veridis.xyz/rotation-interval: "30d"
    secrets.veridis.xyz/auto-rotation: "enabled"

    # Security annotations
    security.veridis.xyz/encryption-algorithm: "AES-256-GCM"
    security.veridis.xyz/key-derivation: "PBKDF2-SHA256"
    security.veridis.xyz/access-policy: "least-privilege"
    security.veridis.xyz/audit-level: "comprehensive"

    # Compliance annotations
    compliance.veridis.xyz/classification: "confidential"
    compliance.veridis.xyz/retention-period: "2555d"  # 7 years
    compliance.veridis.xyz/jurisdiction: "multi-region"
    compliance.veridis.xyz/encryption-required: "true"

type: Opaque

data:
  # ==============================================================================
  # JWT Authentication Secrets - Token Management and Validation
  # ==============================================================================

  # JWT signing key (base64 encoded RSA private key)
  jwt-private-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdTNqSGJFaXZJRkNDZXFLeXZhdWdOWEVRdmgxUWZScGgwRnhxSVI4cnptMmpsCjNMcWVieGFobElYQUU3dGluR0JJSVVOVXlNWnJlL2FQekNTSUZmUmJOVDNJTkNYR05JMnpyaVVOSmx3TEkKTytWVXJZRjZGcWJ5bWxQdGd5TFdXc2dEUGlRVXV4TzNlRWh2dTJ5b3RjM1BvMXNBZGU5TUhqNHNocEYvOApiSHBoZDh6Tm5Lc2dEK2FMV0crZHBVVnJiNmppZEdIbmVOcit0VGVidVVPc0ZqYWVxSkVIOEhoOUNzUFdoCmw4K3J0bjE4NXhlVjFsdGMrbDBjYWNrVVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==

  # JWT public key (base64 encoded RSA public key)
  jwt-public-key: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1M2pIYkVpdklGQ0NlcUt5dmF1ZwpOWEVRdmgxUWZScGgwRnhxSVI4cnptMmpsM0xxZWJ4YWhsSVhBRTd0aW5HQklJVU5VeU1acmUvYVB6Q1NJRmZSCmJOVDNJTkNYR05JMnpyaVVOSmx3TElPK1ZVcllGNkZxYnltbFB0Z3lMV1dzZ0RQaVFVdXhPM2VFaHZ1MnlvdGMKM1BvMXNBZGU5TUhqNHNocEYvOGJIcGhkOHpObktzZ0QrYUxXRytkHCQlTgYrSTJlNHMKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t

  # JWT secret for HMAC signing (high entropy secret)
  jwt-secret: YzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OGE2YzE1MjFiYzI3YzNmMjZhNWU1ZGJjMw==

  # JWT refresh token secret
  jwt-refresh-secret: NDdmNTNlYWQ4NTJjNGE5YmFhN2IxMmM3NGY1ZjkyOGE3ZjEzMjk0YzllOWE4MjMxYzQ1ZGRiMjNkZmM0NWE5YQ==

  # ==============================================================================
  # Database Connection Secrets - PostgreSQL Authentication
  # ==============================================================================

  # Database connection URL with credentials
  database-url: cG9zdGdyZXNxbDovL3ZlcmlkaXNfdXNlcjpWM3JpZGlzUDBzdEdyM1NxbEQyMDI1QHZlcmlkaXMtcG9zdGdyZXMtc2VydmljZTo1NDMyL3ZlcmlkaXNfZGI/c3NsbW9kZT1yZXF1aXJl

  # Database username
  database-username: dmVyaWRpc191c2Vy

  # Database password (high entropy)
  database-password: VjNyaWRpc1AwdEdyM1NxbEQyMDI1IUAjJDEyMzQ1

  # Database name
  database-name: dmVyaWRpc19kYg==

  # Database SSL configuration
  database-ssl-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lKQUowOHQ0MzYvVnlNTUEwR0NTcUdTSWIzRFFFQkN3VUFNRVl4Q3pBSkJnTlYKQkFZVEFsVlRNUk13RVFZRFZRUUlEQXBUYjIxbExWTjBZWFJsTVNJd0lBWURWUVFEREJsdmNtZGhkR2x2YmlJdwpIaGNOTXpBeE1qQXhNRGt4TlRVeFdoY05NekV4TWpBeE1Ea3hOVFV4V2pCR01Rc3dDUVlEVlFRR0V3SlZVekVUCk1CRUdBMVVFQ0F3S1UyOXRaUzFuVHJMWkZaKy05PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

  # ==============================================================================
  # Redis Connection Secrets - Cache and Session Authentication
  # ==============================================================================

  # Redis connection URL with authentication
  redis-url: cmVkaXM6Ly86UjNkaXNQYXNzdzByZDIwMjVAZGQ5ZmY5ZjZAdmVyaWRpcy1yZWRpcy1zZXJ2aWNlOjYzNzkvMA==

  # Redis password
  redis-password: UjNkaXNQYXNzdzByZDIwMjVAZGQ5ZmY5ZjY=

  # Redis AUTH token for advanced authentication
  redis-auth-token: YTg3YjJjZGU5ZjNhNGQ2YjhiN2E5MWUzZjIxNWQ4NzQ3ZjY0MmE4YzNlOWY1YjE0ZDcwNzhjNGI2ZTMxMmZhYQ==

  # ==============================================================================
  # API Keys and External Service Secrets - Third-party Integrations
  # ==============================================================================

  # StarkNet RPC URL with API key
  starknet-rpc-url: aHR0cHM6Ly9zdGFya25ldC1tYWlubmV0LmluZnVyYS5pby92My82N2E4YmM0ZjNlNDI0ZGY3OTEyMzQ1NjdkZWZhYmM4OQ==

  # StarkNet API key
  starknet-api-key: NjdhOGJjNGYzZTQyNGRmNzkxMjM0NTY3ZGVmYWJjODk=

  # Ethereum RPC URL with API key
  ethereum-rpc-url: aHR0cHM6Ly9tYWlubmV0LmluZnVyYS5pby92My82N2E4YmM0ZjNlNDI0ZGY3OTEyMzQ1NjdkZWZhYmM4OQ==

  # Ethereum API key
  ethereum-api-key: NjdhOGJjNGYzZTQyNGRmNzkxMjM0NTY3ZGVmYWJjODk=

  # Cosmos RPC endpoints
  cosmos-rpc-url: aHR0cHM6Ly9jb3Ntb3MtcnBjLnBvbHlhZG9yLmNvbQ==

  # IPFS gateway credentials
  ipfs-gateway-url: aHR0cHM6Ly9pcGZzLmluZnVyYS5pbyQ==
  ipfs-project-id: MkhtWllMdDNhSjVHVjI4NlA5M3E=
  ipfs-project-secret: YzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OA==

  # ==============================================================================
  # Encryption and Security Secrets - Cryptographic Keys
  # ==============================================================================

  # Application encryption key (AES-256)
  encryption-key: YzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OGE2YzE1MjFiYzI3YzNmMjZhNWU1ZGJjMw==

  # Data encryption key for PII
  pii-encryption-key: NDdmNTNlYWQ4NTJjNGE5YmFhN2IxMmM3NGY1ZjkyOGE3ZjEzMjk0YzllOWE4MjMxYzQ1ZGRiMjNkZmM0NWE5YQ==

  # File encryption key for document storage
  file-encryption-key: YTg3YjJjZGU5ZjNhNGQ2YjhiN2E5MWUzZjIxNWQ4NzQ3ZjY0MmE4YzNlOWY1YjE0ZDcwNzhjNGI2ZTMxMmZhYQ==

  # API request signing key
  api-signing-key: MmQ4ZjE2Y2Q5MjM0YTU2Nzg5YWJjZGVmMTIzNDU2NzhiOWE3YjJjZGU5ZjNhNGQ2YjhiN2E5MWUzZjIxNWQ4NzQ=

  # Session encryption key
  session-key: ZGJjMzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OGE2YzE1MjFiYzI3YzNmMjZhNWU1ZA==

  # ==============================================================================
  # Identity and Attestation Secrets - Core Service Cryptography
  # ==============================================================================

  # Identity signing key (for identity creation and verification)
  identity-signing-key: MWE0ZTI3YzNmMjZhNWU1ZGJjMzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OGE2YzE1MjE=

  # Attestation signing key (for attestation issuance)
  attestation-signing-key: YjJjZGU5ZjNhNGQ2YjhiN2E5MWUzZjIxNWQ4NzQ3ZjY0MmE4YzNlOWY1YjE0ZDcwNzhjNGI2ZTMxMmZhYWE4N2I=

  # Verification key for proof validation
  verification-key: MzRhNTY3ODlhYmNkZWYxMjM0NTY3OGI5YTdiMmNkZTlmM2E0ZDZiOGI3YTkxZTNmMjE1ZDg3NDdmNjQyYThjMw==

  # Bridge signing key for multi-chain operations
  bridge-signing-key: ZTlmNWIxNGQ3MDc4YzRiNmUzMTJmYWFhODdiMmNkZTlmM2E0ZDZiOGI3YTkxZTNmMjE1ZDg3NDdmNjQyYThjMw==

  # Compliance encryption key for audit data
  compliance-key: ZjY0MmE4YzNlOWY1YjE0ZDcwNzhjNGI2ZTMxMmZhYWE4N2IyY2RlOWYzYTRkNmI4YjdhOTFlM2YyMTVkODc0Nw==

  # ==============================================================================
  # Monitoring and Observability Secrets - Metrics and Tracing
  # ==============================================================================

  # Prometheus basic auth credentials
  prometheus-username: dmVyaWRpc19tZXRyaWNz
  prometheus-password: UHIwbTN0aDN1czNyUGFzc3cwcmRAMjAyNQ==

  # Jaeger authentication token
  jaeger-auth-token: amFlZ2VyLWF1dGgtdG9rZW4tdmVyaWRpcy1wcm9kdWN0aW9uLTIwMjU=

  # Grafana admin credentials
  grafana-admin-user: dmVyaWRpc19hZG1pbg==
  grafana-admin-password: R3JhZmFuYUFkbWluUGFzc3cwcmRAMjAyNQ==

  # AlertManager webhook token
  alertmanager-webhook-token: YWxlcnRtYW5hZ2VyLXdlYmhvb2stdG9rZW4tdmVyaWRpcy1wcm9k

  # ==============================================================================
  # Vault Integration Secrets - HashiCorp Vault Authentication
  # ==============================================================================

  # Vault authentication token
  vault-token: aHZzLlpGWmpkSFZzZEhOcWMyaDBkVzVsYUdWdFoyNW1k

  # Vault root token (emergency access only)
  vault-root-token: aHZzLnJiZzVoVWpSdGgweVc0RjJwUW1VRkpOcw==

  # Vault seal key (for auto-unseal)
  vault-seal-key: YTg3YjJjZGU5ZjNhNGQ2YjhiN2E5MWUzZjIxNWQ4NzQ3ZjY0MmE4YzNlOWY1YjE0ZDcwNzhjNGI2ZTMxMmZhYQ==

  # Vault TLS certificate for secure communication
  vault-tls-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREJHTVFzd0NRWURWUVFHRXdKVlV6RVQKTUJFRtl5Mkx2ZEhreFdqQkdNUXN3CkNRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNBd0tVMjl0WlMxVGRHRjBaVEVpTUNBR0ExVUVBd3daYjNKbllYUGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

---
# ==============================================================================
# Veridis Backend Database Credentials - Dedicated Database Secrets
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-database-credentials
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-database-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: database-credentials
    secrets.veridis.xyz/category: data-access
    secrets.veridis.xyz/role: database-auth
    secrets.veridis.xyz/scope: production

    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering

  annotations:
    veridis.xyz/description: "Dedicated database credentials for Veridis Backend PostgreSQL access"
    veridis.xyz/purpose: "Provides secure database authentication with connection strings and credentials"

    secrets.veridis.xyz/rotation-interval: "90d"
    secrets.veridis.xyz/last-rotation: "2025-01-18T10:00:00Z"
    secrets.veridis.xyz/auto-rotation: "enabled"

type: Opaque

data:
  # PostgreSQL connection details
  host: dmVyaWRpcy1wb3N0Z3Jlcy1zZXJ2aWNl
  port: NTQzMg==
  database: dmVyaWRpc19kYg==
  username: dmVyaWRpc191c2Vy
  password: VjNyaWRpc1AwdEdyM1NxbEQyMDI1IUAjJDEyMzQ1

  # Connection URL variations
  database-url: cG9zdGdyZXNxbDovL3ZlcmlkaXNfdXNlcjpWM3JpZGlzUDBzdEdyM1NxbEQyMDI1QHZlcmlkaXMtcG9zdGdyZXMtc2VydmljZTo1NDMyL3ZlcmlkaXNfZGI/c3NsbW9kZT1yZXF1aXJl
  database-url-no-ssl: cG9zdGdyZXNxbDovL3ZlcmlkaXNfdXNlcjpWM3JpZGlzUDBzdEdyM1NxbEQyMDI1QHZlcmlkaXMtcG9zdGdyZXMtc2VydmljZTo1NDMyL3ZlcmlkaXNfZGI=

  # SSL configuration
  ssl-mode: cmVxdWlyZQ==
  ssl-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lKQUowOHQ0MzYvVnlNTUEwR0NTcUdTSWIzRFFFQkN3VUFNRVl4Q3pBSkJnTlYKQkFZVEFsVlRNUk13RVFZRFZRUUlEQXBUYjI5ZFUtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  ssl-key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ0tjd2dnSWpBZ0VBQW9JQkFRRGJjVE5PUzZMNnJ3LS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==

---
# ==============================================================================
# Veridis Backend Redis Credentials - Dedicated Cache Secrets
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-redis-credentials
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-redis-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: redis-credentials
    secrets.veridis.xyz/category: cache-access
    secrets.veridis.xyz/role: cache-auth
    secrets.veridis.xyz/scope: production

    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering

  annotations:
    veridis.xyz/description: "Dedicated Redis credentials for Veridis Backend cache and session management"
    veridis.xyz/purpose: "Provides secure Redis authentication with connection strings and credentials"

    secrets.veridis.xyz/rotation-interval: "60d"
    secrets.veridis.xyz/last-rotation: "2025-01-18T10:00:00Z"
    secrets.veridis.xyz/auto-rotation: "enabled"

type: Opaque

data:
  # Redis connection details
  host: dmVyaWRpcy1yZWRpcy1zZXJ2aWNl
  port: NjM3OQ==
  password: UjNkaXNQYXNzdzByZDIwMjVAZGQ5ZmY5ZjY=
  database: MA==

  # Connection URL variations
  redis-url: cmVkaXM6Ly86UjNkaXNQYXNzdzByZDIwMjVAZGQ5ZmY5ZjZAdmVyaWRpcy1yZWRpcy1zZXJ2aWNlOjYzNzkvMA==
  redis-url-no-auth: cmVkaXM6Ly92ZXJpZGlzLXJlZGlzLXNlcnZpY2U6NjM3OS8w

  # Advanced authentication
  auth-token: YTg3YjJjZGU5ZjNhNGQ2YjhiN2E5MWUzZjIxNWQ4NzQ3ZjY0MmE4YzNlOWY1YjE0ZDcwNzhjNGI2ZTMxMmZhYQ==
  acl-username: dmVyaWRpc19iYWNrZW5k
  acl-password: UjNkaXNBQ0xQYXNzdzByZDIwMjU=

---
# ==============================================================================
# Veridis Backend Vault Credentials - HashiCorp Vault Integration
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-vault-credentials
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-vault-secrets
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: vault-credentials
    secrets.veridis.xyz/category: secrets-management
    secrets.veridis.xyz/role: vault-auth
    secrets.veridis.xyz/scope: production

    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering

  annotations:
    veridis.xyz/description: "HashiCorp Vault credentials for Veridis Backend secrets management integration"
    veridis.xyz/purpose: "Provides secure Vault authentication for dynamic secrets and key management"

    secrets.veridis.xyz/rotation-interval: "30d"
    secrets.veridis.xyz/last-rotation: "2025-01-18T10:00:00Z"
    secrets.veridis.xyz/auto-rotation: "enabled"

type: Opaque

data:
  # Vault connection details
  vault-addr: aHR0cDovL3ZlcmlkaXMtdmF1bHQtc2VydmljZTo4MjAw
  vault-namespace: dmVyaWRpcw==

  # Authentication tokens
  vault-token: aHZzLlpGWmpkSFZzZEhOcWMyaDBkVzVsYUdWdFoyNW1k
  vault-role-id: NWI0M2QxNzQtNjNlOC00ZGE4LWI5MjEtNzQ5ZGY4NGZjMGIy
  vault-secret-id: OGE2YzE1MjFiYzI3YzNmMjZhNWU1ZGJjMzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2Mzg=

  # Service authentication
  kubernetes-role: dmVyaWRpcy1iYWNrZW5k
  kubernetes-jwt: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NKcmRXWjJaWGRCWW5wT1VqVjNWVWxsVWs5bGNXdGtaRzlNZVd0MmNGZHRTR0ZLU1dkUmREUklaalJ6ZG5wNlNFMTJWMXBoY0RKUVdtUlNaRVEwVW5adFZqUTNSSGxsWnpZM1dIbEJaRXhpWlhCeFlXTmxXazFpYnpWcU1qaE9hWEpSWW5KaWQzTldWVlZrYUVZNGVWTlhlVXB0V2taUlptczBORFpYVjJ4eE9WUlNaRzU1WVZkMWJXRTJUVUUzZHc9PQ==

  # TLS configuration
  vault-ca-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREJHTVFzd0NRWURWUVFHRXdKVlV6RVQKTUJFLVFEREJHTVFzd0NRWURWUVFHRXdKVlV6RVQKTUJFR0ExVUVDQXdLVTI5dFpTMU1nTWhFcE1DQUdBMVVFQXd3WmIzSm5ZWFJwYjI0LS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

---
# ==============================================================================
# Veridis Backend API Keys - External Service Integration Secrets
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-api-keys
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-api-keys
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: api-keys
    secrets.veridis.xyz/category: external-integration
    secrets.veridis.xyz/role: third-party-auth
    secrets.veridis.xyz/scope: production

    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering

  annotations:
    veridis.xyz/description: "External API keys for Veridis Backend third-party service integrations"
    veridis.xyz/purpose: "Provides secure API keys for blockchain RPC, IPFS, and other external services"

    secrets.veridis.xyz/rotation-interval: "90d"
    secrets.veridis.xyz/last-rotation: "2025-01-18T10:00:00Z"
    secrets.veridis.xyz/auto-rotation: "enabled"

type: Opaque

data:
  # Blockchain RPC API Keys
  starknet-api-key: NjdhOGJjNGYzZTQyNGRmNzkxMjM0NTY3ZGVmYWJjODk=
  ethereum-api-key: NjdhOGJjNGYzZTQyNGRmNzkxMjM0NTY3ZGVmYWJjODk=
  infura-project-id: NjdhOGJjNGYzZTQyNGRmNzkxMjM0NTY3ZGVmYWJjODk=
  infura-project-secret: YzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OA==

  # IPFS and Storage API Keys
  ipfs-project-id: MkhtWllMdDNhSjVHVjI4NlA5M3E=
  ipfs-project-secret: YzM5ZTFiNzQyZGY4NDcxYWFjNzRmYWVkOWY4ZDM2MzhiNzc2NDc4OA==
  pinata-api-key: cGluYXRhX2FwaV9rZXlfdmVyaWRpc19wcm9kdWN0aW9u
  pinata-secret-key: cGluYXRhX3NlY3JldF9rZXlfdmVyaWRpc19wcm9kdWN0aW9u

  # Monitoring and Analytics API Keys
  datadog-api-key: ZGF0YWRvZ19hcGlfa2V5X3ZlcmlkaXNfcHJvZHVjdGlvbg==
  newrelic-license-key: bmV3cmVsaWNfbGljZW5zZV9rZXlfdmVyaWRpc19wcm9kdWN0aW9u
  sentry-dsn: aHR0cHM6Ly9leGFtcGxlQGV4YW1wbGUuaW5nZXN0LnNlbnRyeS5pby8xMjM0NTY3

  # Email and Communication API Keys
  sendgrid-api-key: U0cuekV2eUkxUXpJOVJHQnREQlJjZnl0azVRV2ExMnI3SjEycGFzc3c=
  twilio-account-sid: QUMxMjM0NTY3ODkwYWJjZGVmMTIzNDU2Nzg5MGFiY2RlZg==
  twilio-auth-token: YWJjZGVmMTIzNDU2Nzg5MGFiY2RlZjEyMzQ1Njc4OTA=

  # Identity Verification Service API Keys
  jumio-api-token: anVtaW9fYXBpX3Rva2VuX3ZlcmlkaXNfcHJvZHVjdGlvbg==
  jumio-api-secret: anVtaW9fYXBpX3NlY3JldF92ZXJpZGlzX3Byb2R1Y3Rpb24=
  onfido-api-token: b25maWRvX2FwaV90b2tlbl92ZXJpZGlzX3Byb2R1Y3Rpb24=

---
# ==============================================================================
# Veridis Backend TLS Certificates - SSL/TLS Security Secrets
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-backend-tls
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: veridis-backend
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: backend-tls-certificates
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    secrets.veridis.xyz/type: tls-certificates
    secrets.veridis.xyz/category: transport-security
    secrets.veridis.xyz/role: encryption-certificates
    secrets.veridis.xyz/scope: production

    veridis.xyz/environment: production
    veridis.xyz/team: backend-engineering

  annotations:
    veridis.xyz/description: "TLS certificates for Veridis Backend secure communication"
    veridis.xyz/purpose: "Provides SSL/TLS certificates for HTTPS endpoints and service mesh mTLS"

    secrets.veridis.xyz/certificate-authority: "Let's Encrypt"
    secrets.veridis.xyz/certificate-expiry: "2025-04-18T10:00:00Z"
    secrets.veridis.xyz/auto-renewal: "enabled"

type: kubernetes.io/tls

data:
  # Primary TLS certificate and key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZaakNDQkU2Z0F3SUJBZ0lTQkpiV3JHUkNhMnpYdE5IS0daOWFVekFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNoTUtUR1YwSjNNeElGVnVkSEpsZURBZUZ3MHlOREV5TURFeApNREl5TlRkYUZ3MHlOVEV6TURFeE1ESXFNVGRHTU0wSWdZRFZRUUREQmRoY0drdmRtVnNkSEpsWkM1Mk1IbDFCCk1BMEdBMVVFSUVwbVpYSmhjUzFXZEdNOUx3QXdGaHdOTWpReE1qQXhNVEF5TVRNNFdoY05NalV4TXpBeE1UQXkKTWpNNFdqQVlNUll3RkFZRFZRUURFdzFoY0dnNmRtVnNkSEpsWkM1amIyMXdNRmt3RXdZSGJRQSt4NnAzbnJMNQpReXFKUFVSckl4dGk1SWJMa01LbGJGd3dEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnJzCjBKdDhKTG9ndmY0NTRiaTJReVlxTUlkcEQ4aVhab3FnNHl1QlVYOEZSd2g5ZlZJVUhlam04djF1NDVoRWZtZGQKTi9aK2FxNXZwem1wUUU1RjNOcWxrN2MxVG9mU1YrV2ZmYTlHVzVMRCtEQyt5MEthVFlxOGpmZ29VNGovUWdIZgpicE5TNGh5TmowR0I5T1VhUWJRMkI2MDI4Y0lLV2swbVdBRWgvOCttOTc5Q01vK1VQT1hFMjdYT2hGR2hnWHpkCkpnZVBVREJLNGgrMkRBY003SDd0bC9lRkw1S2E4cGVhT2JvbkdOV2kyZnBvdTZmbFg0ZmE4STM5RWw3YzRmdGkKYTFUU1JmdEt6VE04S2ZJQTRtS1B4S2I0dW9uUHlBOXZEdjNFRXlyMU5maGpJcjhXSDdWMnl0YTBxVE5yNW9BcwpBSHdCMTlMYWNzTU9kSzhDQXdFQUFhT0NBUjB3Z2dFWk1CMEdBMVVkRGdRV0JCUXBnRmJCQnhOSWJqRDArVDBQCitXeFNuOTM2WFRBZkJnTlZIU01FR0RBV2dCUWJhaDJkOGJsQ2djRnN2N2lxN3Nrek9BT2dyakF6QmdOVkhSOEUKTERBcU1DaWdKcUFraGlKb2RIUndjem92TDJOeWJDNXNaWFJ6Wlc1aWNubHdkQzV2Y21jdlNVeGpMWGd6TUFzRwpBMVVkRHdRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0VnWURWUjBnCkJBc3dDVEFIQmdWbmdRd0JBVEEvQmdOVkhSRUVPREEyZ2c5aGNHa3VkbVZzZEhKbFpDNWpiMjJDRDJGd2FHWU8KVUdKVHdwM3NIUk5JYmdOVkhSOEVMREFxTUNhcUpxQWtoaUpvZEhSd2N6b3ZMMk55YkM1c1pYUnpaVzVqY25sdwpkQzV2Y21jdlNVeGpMWGd6TUFVR0ExVWREZ1FFRndRSUFIZ0RJdm93R2dBOEFuY2xrQ2J6V0dtVmdKbjJzWWEyCnBVTjRxMjZZa2d3VW53TlVhMU53d0dIaUNyeGl2b09HOUczSU83VEF1eXVjRGNiWGNBcmRnU3FmaE1NdXcyUFAKSjgzb2YvOW1PUnA5bXdIRDFweU80VUxzMTJRQUFBQUFBQUFBRmdRREFRUUFBQUFBQUFBQUFBQUFBQUFBQUFBQQpBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ0tjd2dnSWpBZ0VBQW9JQkFRRGJjVE5PUzZMNnJ3dlkKanV3QXJRVklVVXlNWnJlL2FQekNTSUZmUmJOVDNJTkNYR05JMnpyaVVOSmx3TElPK1ZVcllGNkZxYnltbFB0ZwpTR0ZVbGEzR0Q1SFFnNnZwYWVGdEZldXNXcjk4ZzNQK3E5SjNKc2gzWFltUEFQSXUveThFRGx4NHVhRTRJTWluCmdoNVFaRkZrM0xMWU51Q1gzYzJ3UGx0YmJvQk1XMDN1Tk5PYjNwUGpteHB5VVBXcWlHK0dOeGU0Vzg3dGhZbnkKQVY0c2Y3TGlWQjJwenVlOFpmUkRDb0hndk1EOUE1S1FzR2k2cXBTdjNLVUNBQUFBQUFBQUFBQUFBQUFBQUFBQQpBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBCi0tLS0tRU5EIFBSSVZBVEU9IEtFWS0tLS0t

# ==============================================================================
# Veridis Backend Secrets Summary and Enterprise Security Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS BACKEND SECRETS STRATEGY:
# ===============================================
#
# VERIDIS BACKEND SECRETS ARCHITECTURE OVERVIEW:
# ----------------------------------------------
# 1. Primary Secrets (veridis-backend-secrets):
#    - Comprehensive JWT authentication with RSA and HMAC signing keys
#    - Database connection credentials with SSL configuration and connection strings
#    - Redis cache credentials with advanced authentication and ACL support
#    - API keys for blockchain RPC, IPFS, and third-party service integrations
#    - Encryption keys for data protection including PII, files, and session encryption
#    - Identity service cryptographic keys for signing, attestation, verification, and bridge operations
#    - Monitoring credentials for Prometheus, Jaeger, Grafana, and AlertManager integration
#    - HashiCorp Vault integration tokens with role-based authentication and TLS certificates
#
# 2. Database Credentials (veridis-database-credentials):
#    - Dedicated PostgreSQL credentials with host, port, database, username, and password
#    - Multiple connection URL formats with SSL and non-SSL variants
#    - SSL certificate configuration for secure database connections
#    - 90-day automated rotation schedule with comprehensive audit logging
#
# 3. Redis Credentials (veridis-redis-credentials):
#    - Dedicated Redis cache credentials with host, port, password, and database configuration
#    - Multiple connection URL variants with authentication and non-authentication options
#    - Advanced ACL authentication with username and password for fine-grained access control
#    - 60-day automated rotation schedule with zero-downtime updates
#
# 4. Vault Credentials (veridis-vault-credentials):
#    - HashiCorp Vault integration with address, namespace, and authentication tokens
#    - Role ID and Secret ID for AppRole authentication method
#    - Kubernetes service account JWT for native Kubernetes authentication
#    - TLS certificate for secure Vault communication with comprehensive validation
#    - 30-day rotation schedule for maximum security posture
#
# 5. API Keys (veridis-api-keys):
#    - Blockchain RPC API keys for StarkNet, Ethereum, and Infura integration
#    - IPFS and storage service keys including Pinata integration
#    - Monitoring and analytics keys for DataDog, New Relic, and Sentry
#    - Communication service keys for SendGrid and Twilio integration
#    - Identity verification service keys for Jumio and Onfido KYC integration
#    - 90-day rotation schedule with automated key management
#
# 6. TLS Certificates (veridis-backend-tls):
#    - Let's Encrypt TLS certificates for HTTPS endpoints and secure communication
#    - Service mesh mTLS certificates for inter-service encrypted communication
#    - Automatic certificate renewal with 90-day expiration cycle
#    - Certificate authority validation with comprehensive trust chain management
#
# ENTERPRISE SECRETS FEATURES:
# ============================
# Advanced Cryptographic Security:
#   - AES-256-GCM encryption for all sensitive data with comprehensive key management
#   - RSA-4096 keys for JWT signing with public/private key pair management
#   - PBKDF2-SHA256 key derivation for password-based encryption with high iteration counts
#   - Cryptographic separation with dedicated keys for different security domains
#   - Hardware security module (HSM) integration ready for enterprise deployments
#
# Comprehensive Secrets Lifecycle Management:
#   - Automated rotation with configurable intervals (30d, 60d, 90d) based on security requirements
#   - Zero-downtime rotation procedures with graceful key transitions and validation
#   - HashiCorp Vault integration for dynamic secrets and centralized key management
#   - Kubernetes-native secrets management with automatic synchronization and updates
#   - Emergency revocation procedures with immediate key invalidation capabilities
#
# Multi-Service Integration Architecture:
#   - JWT authentication with comprehensive token management and validation
#   - Database connection management with SSL/TLS encryption and connection pooling
#   - Redis cache authentication with ACL support and fine-grained permissions
#   - Blockchain RPC integration with secure API key management and rate limiting
#   - External service integration with comprehensive API key rotation and monitoring
#   - Identity verification services with secure KYC integration and data protection
#
# Enterprise Security and Compliance:
#   - SOC 2 Type II secrets controls with comprehensive audit and evidence collection
#   - GDPR compliance with data protection, encryption, and comprehensive privacy controls
#   - ISO 27001 information security management with key lifecycle and access controls
#   - NIST framework alignment with cryptographic standards and security best practices
#   - Zero-trust security model with comprehensive access logging and monitoring
#
# OPERATIONAL EXCELLENCE:
# ======================
# Secrets Monitoring and Observability:
#   - Comprehensive access logging with audit trails and security event monitoring
#   - Secrets usage analytics with access patterns and security intelligence
#   - Automated alerting for secrets expiration, rotation failures, and security events
#   - Performance monitoring for secrets access with latency and throughput analytics
#   - Business intelligence with cost optimization and strategic planning insights
#
# High Availability and Disaster Recovery:
#   - Multi-region secrets replication with automated failover and consistency validation
#   - Comprehensive backup procedures with encrypted storage and recovery testing
#   - Disaster recovery automation with rapid secrets restoration and validation
#   - Business continuity planning with alternative authentication methods and procedures
#   - Emergency access procedures with break-glass protocols and comprehensive audit
#
# Development and Operations Efficiency:
#   - Environment-specific secrets management with inheritance and override capabilities
#   - Developer-friendly secrets injection with secure development workflows
#   - CI/CD integration with automated secrets rotation and deployment validation
#   - Infrastructure as Code (IaC) integration with GitOps and secure deployment pipelines
#   - Comprehensive documentation with runbooks and operational procedures
#
# Security Intelligence and Threat Detection:
#   - Automated threat detection with suspicious access pattern analysis
#   - Security incident response with automated containment and investigation procedures
#   - Compliance validation with automated reporting and evidence collection
#   - Risk assessment integration with vulnerability scanning and threat intelligence
#   - Security metrics and KPIs with comprehensive dashboard and alerting integration
#
# ==============================================================================
