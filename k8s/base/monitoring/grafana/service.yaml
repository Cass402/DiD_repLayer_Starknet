# ==============================================================================
# Veridis Decentralized Identity Protocol - Grafana Service Configuration
# ==============================================================================
#
# This manifest defines comprehensive Grafana Service for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS GRAFANA SERVICE ARCHITECTURE:
#   • Advanced Grafana service with intelligent networking management and performance-based traffic optimization
#   • Multi-tier service architecture with development, testing, staging, and production environments
#   • Comprehensive observability framework with service policies, traffic optimization, Grafana integration
#   • Advanced lifecycle management with automated networking optimization, Grafana control, and service enhancement
#   • Enterprise-grade intelligence with comprehensive analytics and Grafana service performance insights
#
# VERIDIS GRAFANA SERVICE OPTIMIZATION:
#   • High-performance networking with intelligent traffic management and Grafana service optimization
#   • Intelligent service traffic management with responsive policies and performance-based networking decisions
#   • Advanced service management with business intelligence and networking-based Grafana control
#   • Comprehensive observability control with intelligent Grafana service management and networking enhancement
#   • Enterprise acceleration with predictive Grafana service management and networking optimization
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II Grafana service controls with comprehensive audit and networking requirements
#   • GDPR Grafana service compliance with data protection, privacy controls, and networking management
#   • ISO 27001 Grafana service management with comprehensive framework integration
#   • NIST 800-190 container Grafana service security with networking-specific validation and compliance
#   • Zero-knowledge protocol compliance with regulatory frameworks and Grafana service best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent Grafana service lifecycle management with automated provisioning and networking optimization
#   • Predictive networking analytics with capacity planning and Grafana service intelligence
#   • Advanced service integration with Grafana networking analytics and service business intelligence
#   • Comprehensive observability control with Grafana service preservation and networking optimization
#   • Business continuity Grafana service with networking guarantees and service optimization
#
# GRAFANA SERVICE ACCELERATION INTELLIGENCE:
#   • Grafana service usage analytics with networking patterns and optimization recommendations
#   • Service monitoring with Grafana networking latency and management optimization intelligence
#   • Development efficiency with Grafana service analytics and deployment optimization procedures
#   • Cost optimization with Grafana service utilization analysis and networking capacity planning procedures
#   • Quality assurance with Grafana service metrics and observability validation procedures
#
# ==============================================================================

# ==============================================================================
# Veridis Grafana Service - Primary Service Configuration
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: veridis-grafana
  namespace: veridis-infrastructure

  # Core Veridis Grafana service identification labels
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "10.2.3"
    app.kubernetes.io/component: grafana-service
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Grafana service specific classification
    grafana.veridis.xyz/type: monitoring-grafana-service
    grafana.veridis.xyz/category: visualization-service
    grafana.veridis.xyz/role: primary-grafana-service
    grafana.veridis.xyz/performance-class: high-performance-grafana-service
    grafana.veridis.xyz/security-level: enterprise

    # Monitoring Grafana service classification
    monitoring.veridis.xyz/grafana-service-type: intelligent-grafana-service
    monitoring.veridis.xyz/service-type: monitoring-service
    monitoring.veridis.xyz/performance-tier: high-performance
    monitoring.veridis.xyz/optimization: enabled
    monitoring.veridis.xyz/features: full-monitoring-service-stack

    # Observability Grafana service classification
    observability.veridis.xyz/tier: production
    observability.veridis.xyz/optimization: intelligent-monitoring-service-management
    observability.veridis.xyz/networking-management: advanced
    observability.veridis.xyz/traffic-optimization: enabled
    observability.veridis.xyz/efficiency: maximum

    # Business Grafana service classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-monitoring-service-performance
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/availability-requirement: 99.9

    # Operational Grafana service labels
    veridis.xyz/environment: production
    veridis.xyz/team: monitoring-engineering
    veridis.xyz/cost-center: monitoring-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "grafana-service-control-framework"
    compliance.veridis.xyz/gdpr: "grafana-service-data-protection"
    compliance.veridis.xyz/iso27001: "grafana-service-security-management"
    compliance.veridis.xyz/nist-800-190: "grafana-service-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Grafana service analytics and intelligence
    monitoring.veridis.xyz/grafana-service-monitoring: "enabled"
    monitoring.veridis.xyz/performance-monitoring: "comprehensive"
    monitoring.veridis.xyz/networking-monitoring: "enabled"
    monitoring.veridis.xyz/business-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"

    # Service management labels
    service.veridis.xyz/type: "ClusterIP"
    service.veridis.xyz/session-affinity: "ClientIP"
    service.veridis.xyz/internal-traffic-policy: "Local"
    service.veridis.xyz/load-balancing: "enabled"
    service.veridis.xyz/health-monitoring: "enabled"

    # Network policy labels
    network.veridis.xyz/ingress-allowed: "monitoring"
    network.veridis.xyz/egress-allowed: "datasources"
    network.veridis.xyz/prometheus-access: "enabled"
    network.veridis.xyz/internal-access: "controlled"

  annotations:
    # Grafana service purpose and specifications
    veridis.xyz/description: "Enterprise Veridis Grafana Service with intelligent networking management, advanced traffic optimization, and comprehensive observability optimization"
    veridis.xyz/purpose: "Provides comprehensive Grafana service for decentralized identity management with intelligent networking management, traffic optimization, and observability guarantees"
    veridis.xyz/scope: "Grafana service including networking management, traffic optimization, load balancing integration, and comprehensive monitoring intelligence"

    # Grafana service architecture and design
    grafana.veridis.xyz/architecture: "Enterprise Grafana service with intelligent networking management, advanced traffic optimization, and load balancing integration optimization"
    grafana.veridis.xyz/design-pattern: "Multi-tier Grafana service with networking optimization, cost efficiency, and business intelligence"
    grafana.veridis.xyz/optimization-model: "Intelligent Grafana service with predictive analytics, networking optimization, and traffic efficiency"
    grafana.veridis.xyz/performance-model: "High-performance Grafana service with networking optimization and intelligent traffic management"

    # Monitoring Grafana service specifications
    monitoring.veridis.xyz/grafana-service-specification: "Grafana service with networking optimization and intelligent monitoring service management"
    monitoring.veridis.xyz/networking-specification: "Advanced networking management configuration with monitoring optimization and service enhancement"
    monitoring.veridis.xyz/traffic-specification: "Grafana service traffic management optimization with intelligent networking and enhancement"
    monitoring.veridis.xyz/performance-specification: "Grafana performance service with networking acceleration and traffic efficiency"
    monitoring.veridis.xyz/business-specification: "Grafana business service with cost optimization and strategic networking intelligence"

    # Observability Grafana service specifications
    observability.veridis.xyz/grafana-service-specification: "Observability-aware Grafana service with networking optimization and traffic intelligence"
    observability.veridis.xyz/networking-specification: "Observability networking management optimization with intelligent Grafana and traffic enhancement"
    observability.veridis.xyz/traffic-specification: "Observability traffic with cost optimization and intelligent Grafana management"
    observability.veridis.xyz/load-balancing-specification: "Observability load balancing management with auto-optimization and Grafana management"
    observability.veridis.xyz/monitoring-specification: "Observability monitoring with Grafana service analytics and networking intelligence"

    # Business Grafana service specifications
    business.veridis.xyz/sla-specification: "SLA-compliant Grafana service with business continuity and networking guarantees"
    business.veridis.xyz/intelligence-specification: "Business intelligence with operational analytics and strategic insights"
    business.veridis.xyz/cost-specification: "Cost-optimized Grafana service with efficiency analysis and budget management"
    business.veridis.xyz/efficiency-specification: "Business efficiency with Grafana service optimization and networking intelligence"

    # Operational Grafana service specifications
    operations.veridis.xyz/automation-specification: "Full automation with intelligent management and developer-friendly interfaces"
    operations.veridis.xyz/monitoring-specification: "Comprehensive monitoring with Grafana service analytics and networking intelligence"
    operations.veridis.xyz/management-specification: "Automated management with Grafana service preservation and optimization procedures"
    operations.veridis.xyz/scaling-specification: "Intelligent scaling with Grafana service management and networking optimization"

    # Grafana service lifecycle specifications
    lifecycle.veridis.xyz/grafana-service-specification: "Dynamic Grafana service with automated networking management and traffic optimization"
    lifecycle.veridis.xyz/scaling-specification: "Intelligent Grafana service scaling with machine learning and networking forecasting"
    lifecycle.veridis.xyz/optimization-specification: "Grafana service optimization with intelligent networking management and traffic enhancement"
    lifecycle.veridis.xyz/evolution-specification: "Grafana service evolution with intelligent adaptation and networking optimization"

    # Service specific annotations
    service.veridis.xyz/type: "ClusterIP"
    service.veridis.xyz/session-affinity: "ClientIP"
    service.veridis.xyz/session-affinity-timeout: "10800"
    service.veridis.xyz/internal-traffic-policy: "Local"
    service.veridis.xyz/load-balancer-class: "veridis-internal"

    # Performance annotations
    performance.veridis.xyz/connection-pooling: "enabled"
    performance.veridis.xyz/keep-alive: "enabled"
    performance.veridis.xyz/timeout-optimization: "enabled"
    performance.veridis.xyz/load-balancing: "round-robin"
    performance.veridis.xyz/health-monitoring: "enabled"

    # Security annotations
    security.veridis.xyz/tls-termination: "pod"
    security.veridis.xyz/network-policies: "enabled"
    security.veridis.xyz/access-control: "restricted"
    security.veridis.xyz/encryption-in-transit: "enabled"
    security.veridis.xyz/certificate-validation: "enforced"

    # Networking annotations
    networking.veridis.xyz/ingress-class: "nginx"
    networking.veridis.xyz/backend-protocol: "HTTPS"
    networking.veridis.xyz/upstream-hash-by: "$remote_addr"
    networking.veridis.xyz/proxy-connect-timeout: "5"
    networking.veridis.xyz/proxy-send-timeout: "60"
    networking.veridis.xyz/proxy-read-timeout: "60"

    # Load balancing annotations
    load-balancer.veridis.xyz/algorithm: "least_conn"
    load-balancer.veridis.xyz/health-check: "enabled"
    load-balancer.veridis.xyz/health-check-path: "/api/health"
    load-balancer.veridis.xyz/health-check-interval: "30s"
    load-balancer.veridis.xyz/health-check-timeout: "5s"

    # Service mesh annotations
    service-mesh.veridis.xyz/inject: "true"
    service-mesh.veridis.xyz/protocol: "https"
    service-mesh.veridis.xyz/mtls-mode: "STRICT"
    service-mesh.veridis.xyz/traffic-policy: "LEAST_CONN"
    service-mesh.veridis.xyz/circuit-breaker: "enabled"

    # Monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
    prometheus.io/scheme: "https"
    monitoring.veridis.xyz/alert-rules: "enabled"

    # Documentation and procedures
    veridis.xyz/owner: "monitoring-team@veridis.xyz"
    veridis.xyz/grafana-service-admin: "monitoring-admin@veridis.xyz"
    veridis.xyz/escalation: "monitoring-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "monitoring-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/grafana-service"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/monitoring/grafana-service-management"
    veridis.xyz/service-docs: "https://monitoring.veridis.xyz/grafana-service-guide"
    veridis.xyz/observability-docs: "https://observability.veridis.xyz/grafana-service-monitoring"

spec:
  # ==============================================================================
  # Service Type Configuration
  # ==============================================================================
  type: ClusterIP

  # ==============================================================================
  # Service Selector Configuration
  # ==============================================================================
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/component: grafana-deployment

  # ==============================================================================
  # Service Ports Configuration
  # ==============================================================================
  ports:
    # Primary Grafana HTTP/HTTPS port
    - name: http-grafana
      port: 3000
      targetPort: 3000
      protocol: TCP
      appProtocol: https

    # Metrics port for Prometheus scraping
    - name: http-metrics
      port: 3001
      targetPort: 3001
      protocol: TCP
      appProtocol: https

  # ==============================================================================
  # Session Affinity Configuration
  # ==============================================================================
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

  # ==============================================================================
  # Traffic Policy Configuration
  # ==============================================================================
  internalTrafficPolicy: Local

  # ==============================================================================
  # IP Family Configuration
  # ==============================================================================
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack

---
# ==============================================================================
# Veridis Grafana Service - Headless Service for Internal Communication
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: veridis-grafana-headless
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "10.2.3"
    app.kubernetes.io/component: grafana-headless-service
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    grafana.veridis.xyz/type: monitoring-grafana-headless-service
    grafana.veridis.xyz/category: visualization-headless-service
    grafana.veridis.xyz/role: headless-grafana-service
    grafana.veridis.xyz/service-discovery: enabled

    monitoring.veridis.xyz/grafana-service-type: headless-grafana-service
    monitoring.veridis.xyz/service-discovery: enabled
    monitoring.veridis.xyz/internal-communication: enabled
    monitoring.veridis.xyz/dns-enabled: true

    service.veridis.xyz/type: "None"
    service.veridis.xyz/service-discovery: "enabled"
    service.veridis.xyz/internal-communication: "enabled"
    service.veridis.xyz/dns-registration: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: monitoring-engineering

  annotations:
    veridis.xyz/description: "Headless Grafana Service for internal service discovery and communication"
    veridis.xyz/purpose: "Provides service discovery for Grafana pods with direct pod-to-pod communication"

    grafana.veridis.xyz/headless-service-specification: "Headless service for Grafana pod discovery and internal communication"
    monitoring.veridis.xyz/headless-service-specification: "Service discovery for Grafana pods with DNS registration"

    # Headless service specific annotations
    service.veridis.xyz/headless-enabled: "true"
    service.veridis.xyz/pod-discovery: "enabled"
    service.veridis.xyz/dns-subdomain: "grafana"
    service.veridis.xyz/internal-only: "true"

    # Service discovery annotations
    discovery.veridis.xyz/enabled: "true"
    discovery.veridis.xyz/protocol: "https"
    discovery.veridis.xyz/health-check: "enabled"
    discovery.veridis.xyz/pod-ready-gate: "enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/grafana-headless-service"

spec:
  type: None
  clusterIP: None

  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/component: grafana-deployment

  ports:
    - name: http-grafana
      port: 3000
      targetPort: 3000
      protocol: TCP
      appProtocol: https

    - name: http-metrics
      port: 3001
      targetPort: 3001
      protocol: TCP
      appProtocol: https

  publishNotReadyAddresses: false

---
# ==============================================================================
# Veridis Grafana Service - External Service for Load Balancer
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: veridis-grafana-external
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "10.2.3"
    app.kubernetes.io/component: grafana-external-service
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    grafana.veridis.xyz/type: monitoring-grafana-external-service
    grafana.veridis.xyz/category: visualization-external-service
    grafana.veridis.xyz/role: external-grafana-service
    grafana.veridis.xyz/load-balancer: enabled

    monitoring.veridis.xyz/grafana-service-type: external-grafana-service
    monitoring.veridis.xyz/external-access: controlled
    monitoring.veridis.xyz/load-balancer: enabled
    monitoring.veridis.xyz/ingress-ready: true

    service.veridis.xyz/type: "LoadBalancer"
    service.veridis.xyz/external-access: "controlled"
    service.veridis.xyz/load-balancer: "enabled"
    service.veridis.xyz/ingress-integration: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: monitoring-engineering

  annotations:
    veridis.xyz/description: "External LoadBalancer Service for Grafana with controlled external access"
    veridis.xyz/purpose: "Provides external access to Grafana through load balancer with security controls"

    grafana.veridis.xyz/external-service-specification: "External service for Grafana with load balancer and access control"
    monitoring.veridis.xyz/external-service-specification: "External access for Grafana with security and load balancing"

    # External service specific annotations
    service.veridis.xyz/external-enabled: "true"
    service.veridis.xyz/load-balancer-class: "veridis-external"
    service.veridis.xyz/external-access-control: "enabled"
    service.veridis.xyz/source-ranges: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

    # Load balancer annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "https"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "3000"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"

    # Security annotations
    security.veridis.xyz/external-access: "controlled"
    security.veridis.xyz/tls-termination: "load-balancer"
    security.veridis.xyz/source-ip-restriction: "enabled"
    security.veridis.xyz/firewall-rules: "enabled"

    # Performance annotations
    performance.veridis.xyz/connection-draining: "enabled"
    performance.veridis.xyz/idle-timeout: "60s"
    performance.veridis.xyz/health-check-grace-period: "300s"
    performance.veridis.xyz/target-type: "ip"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "external-access-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/grafana-external-service"

spec:
  type: LoadBalancer
  loadBalancerClass: veridis-external

  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/component: grafana-deployment

  ports:
    - name: https-grafana
      port: 443
      targetPort: 3000
      protocol: TCP
      appProtocol: https

  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

  internalTrafficPolicy: Local
  externalTrafficPolicy: Local

  # Restrict access to internal networks
  loadBalancerSourceRanges:
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"

---
# ==============================================================================
# Veridis Grafana Service - NodePort Service for Development
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: veridis-grafana-nodeport
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "10.2.3"
    app.kubernetes.io/component: grafana-nodeport-service
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    grafana.veridis.xyz/type: monitoring-grafana-nodeport-service
    grafana.veridis.xyz/category: visualization-nodeport-service
    grafana.veridis.xyz/role: development-grafana-service
    grafana.veridis.xyz/nodeport: enabled

    monitoring.veridis.xyz/grafana-service-type: nodeport-grafana-service
    monitoring.veridis.xyz/development-access: enabled
    monitoring.veridis.xyz/nodeport: enabled
    monitoring.veridis.xyz/testing-ready: true

    service.veridis.xyz/type: "NodePort"
    service.veridis.xyz/development-access: "enabled"
    service.veridis.xyz/nodeport: "enabled"
    service.veridis.xyz/testing-integration: "enabled"

    veridis.xyz/environment: production
    veridis.xyz/team: monitoring-engineering

  annotations:
    veridis.xyz/description: "NodePort Service for Grafana development and testing access"
    veridis.xyz/purpose: "Provides NodePort access to Grafana for development and testing environments"

    grafana.veridis.xyz/nodeport-service-specification: "NodePort service for Grafana development and testing access"
    monitoring.veridis.xyz/nodeport-service-specification: "Development access for Grafana with NodePort configuration"

    # NodePort service specific annotations
    service.veridis.xyz/nodeport-enabled: "true"
    service.veridis.xyz/development-only: "true"
    service.veridis.xyz/testing-access: "enabled"
    service.veridis.xyz/node-port-range: "30000-32767"

    # Development annotations
    development.veridis.xyz/enabled: "true"
    development.veridis.xyz/testing-ready: "true"
    development.veridis.xyz/debug-access: "enabled"
    development.veridis.xyz/local-development: "supported"

    # Security annotations for development
    security.veridis.xyz/development-only: "true"
    security.veridis.xyz/restricted-access: "enabled"
    security.veridis.xyz/testing-environment: "safe"
    security.veridis.xyz/production-isolation: "enforced"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "development-access-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/grafana-nodeport-service"

spec:
  type: NodePort

  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/component: grafana-deployment

  ports:
    - name: http-grafana
      port: 3000
      targetPort: 3000
      nodePort: 30030
      protocol: TCP
      appProtocol: https

    - name: http-metrics
      port: 3001
      targetPort: 3001
      nodePort: 30031
      protocol: TCP
      appProtocol: https

  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

  internalTrafficPolicy: Local
  externalTrafficPolicy: Local

---
# ==============================================================================
# Veridis Grafana Service - Metrics Service for Prometheus
# ==============================================================================
apiVersion: v1
kind: Service
metadata:
  name: veridis-grafana-metrics
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "10.2.3"
    app.kubernetes.io/component: grafana-metrics-service
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    grafana.veridis.xyz/type: monitoring-grafana-metrics-service
    grafana.veridis.xyz/category: visualization-metrics-service
    grafana.veridis.xyz/role: metrics-grafana-service
    grafana.veridis.xyz/prometheus-target: enabled

    monitoring.veridis.xyz/grafana-service-type: metrics-grafana-service
    monitoring.veridis.xyz/prometheus-target: enabled
    monitoring.veridis.xyz/metrics-collection: enabled
    monitoring.veridis.xyz/observability-ready: true

    service.veridis.xyz/type: "ClusterIP"
    service.veridis.xyz/metrics-only: "true"
    service.veridis.xyz/prometheus-target: "enabled"
    service.veridis.xyz/observability-integration: "enabled"

    # Prometheus ServiceMonitor target labels
    prometheus.veridis.xyz/scrape: "true"
    prometheus.veridis.xyz/target: "grafana-metrics"
    prometheus.veridis.xyz/job: "grafana"
    prometheus.veridis.xyz/instance: "grafana-metrics"

    veridis.xyz/environment: production
    veridis.xyz/team: monitoring-engineering

  annotations:
    veridis.xyz/description: "Dedicated Metrics Service for Grafana Prometheus monitoring"
    veridis.xyz/purpose: "Provides dedicated metrics endpoint for Prometheus scraping and monitoring"

    grafana.veridis.xyz/metrics-service-specification: "Dedicated metrics service for Grafana Prometheus monitoring"
    monitoring.veridis.xyz/metrics-service-specification: "Metrics collection for Grafana with Prometheus integration"

    # Metrics service specific annotations
    service.veridis.xyz/metrics-only: "true"
    service.veridis.xyz/prometheus-target: "enabled"
    service.veridis.xyz/scrape-interval: "30s"
    service.veridis.xyz/metrics-path: "/metrics"

    # Prometheus annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
    prometheus.io/scheme: "https"
    prometheus.io/interval: "30s"
    prometheus.io/timeout: "10s"

    # Metrics configuration annotations
    metrics.veridis.xyz/enabled: "true"
    metrics.veridis.xyz/format: "prometheus"
    metrics.veridis.xyz/authentication: "bearer-token"
    metrics.veridis.xyz/tls-enabled: "true"

    # Security annotations for metrics
    security.veridis.xyz/metrics-access: "prometheus-only"
    security.veridis.xyz/authentication-required: "true"
    security.veridis.xyz/tls-encryption: "enforced"
    security.veridis.xyz/access-control: "rbac"

    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/grafana-metrics-service"

spec:
  type: ClusterIP

  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/component: grafana-deployment

  ports:
    # Dedicated metrics port
    - name: http-metrics
      port: 3001
      targetPort: 3001
      protocol: TCP
      appProtocol: https

  sessionAffinity: None
  internalTrafficPolicy: Local

  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack

# ==============================================================================
# Veridis Grafana Service Summary and Enterprise Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS GRAFANA SERVICE STRATEGY:
# ===============================================
#
# VERIDIS GRAFANA SERVICE ARCHITECTURE OVERVIEW:
# ----------------------------------------------
# 1. Primary Grafana Service (veridis-grafana):
#    - Comprehensive ClusterIP service with intelligent networking management and advanced traffic optimization for production monitoring
#    - Advanced service configuration with HTTPS (port 3000), metrics (port 3001), ClientIP session affinity, and comprehensive load balancing
#    - Multi-port architecture with primary Grafana access, metrics collection, health monitoring, and comprehensive service optimization
#    - Enterprise service policies with session affinity (10800s timeout), local traffic policy, IPv4 single stack, and comprehensive networking intelligence
#    - Performance optimization with intelligent traffic management, load balancing, health monitoring, and service for maximum efficiency
#
# 2. Headless Service (veridis-grafana-headless):
#    - Service discovery service with DNS registration and comprehensive pod-to-pod communication for internal networking
#    - Advanced headless configuration with None type, pod discovery, DNS subdomain registration, and comprehensive service mesh integration
#    - Internal communication optimization with direct pod access, service discovery, health monitoring, and comprehensive networking intelligence
#    - Pod discovery intelligence with DNS registration, internal communication, ready gate validation, and comprehensive service coordination
#    - Performance excellence with direct pod communication, reduced latency, service mesh integration, and comprehensive internal networking
#
# 3. External Service (veridis-grafana-external):
#    - LoadBalancer service with controlled external access and comprehensive security integration for external monitoring
#    - Advanced external configuration with AWS NLB, internal scheme, cross-zone load balancing, and comprehensive SSL termination
#    - Security optimization with source IP restrictions (internal networks), TLS termination, firewall rules, and comprehensive access control
#    - Load balancer intelligence with connection draining, idle timeout (60s), health check grace period (300s), and comprehensive traffic management
#    - Performance excellence with target type (IP), connection optimization, traffic policies, and comprehensive external access management
#
# 4. NodePort Service (veridis-grafana-nodeport):
#    - Development and testing service with NodePort access and comprehensive development environment integration
#    - NodePort configuration with port 30030 (Grafana), port 30031 (metrics), session affinity, and comprehensive development support
#    - Development optimization with testing access, debug capabilities, local development support, and comprehensive development intelligence
#    - Testing intelligence with safe testing environment, production isolation, restricted access, and comprehensive development coordination
#    - Development excellence with local access, debugging support, testing integration, and comprehensive development environment management
#
# 5. Metrics Service (veridis-grafana-metrics):
#    - Dedicated Prometheus metrics service with monitoring integration and comprehensive observability optimization
#    - Metrics configuration with dedicated port 3001, HTTPS scheme, 30s scrape interval, and comprehensive Prometheus integration
#    - Observability optimization with metrics authentication, TLS encryption, access control, and comprehensive monitoring intelligence
#    - Prometheus intelligence with ServiceMonitor target labels, scrape configuration, timeout management, and comprehensive metrics coordination
#    - Monitoring excellence with dedicated metrics endpoint, security integration, performance optimization, and comprehensive observability management
#
# ENTERPRISE GRAFANA SERVICE FEATURES:
# ====================================
# Advanced Service Management and Networking Optimization:
#   - Multi-service architecture with primary ClusterIP, headless discovery, external LoadBalancer, development NodePort, and dedicated metrics services
#   - Intelligent traffic management with session affinity (ClientIP), traffic policies (Local), load balancing optimization, and comprehensive networking decisions
#   - Service discovery with DNS registration, pod discovery, service mesh integration, and comprehensive internal communication optimization
#   - Load balancing management with algorithm selection (least_conn), health checks, circuit breakers, and comprehensive traffic distribution
#   - Performance tuning with connection pooling, keep-alive optimization, timeout management, and intelligent service optimization
#
# Comprehensive Security and Access Control Integration:
#   - TLS integration with certificate-based encryption, pod-level termination, load balancer SSL, and comprehensive transport security
#   - Access control management with network policies, source IP restrictions, RBAC integration, and comprehensive security enforcement
#   - Service isolation with namespace boundaries, internal traffic policies, controlled external access, and comprehensive security segmentation
#   - Authentication integration with bearer token authentication, TLS client certificates, service account tokens, and comprehensive identity management
#   - Security monitoring with access logging, traffic analysis, security alerts, and comprehensive security analytics
#
# Enterprise Load Balancing and Traffic Management:
#   - Multi-tier load balancing with AWS NLB, internal schemes, cross-zone distribution, and comprehensive traffic optimization
#   - Traffic optimization with connection draining, idle timeout management, health check configurations, and comprehensive performance management
#   - Session management with ClientIP affinity, timeout configuration (10800s), sticky sessions, and comprehensive user experience optimization
#   - Health monitoring with health check paths (/api/health), interval configuration (30s), timeout management (5s), and comprehensive service validation
#   - Performance analytics with connection tracking, latency monitoring, throughput analysis, and comprehensive traffic intelligence
#
# Advanced Service Discovery and Integration Management:
#   - Service mesh integration with Istio/Linkerd support, mTLS enforcement (STRICT), traffic policies, and comprehensive service coordination
#   - DNS management with headless service registration, subdomain configuration, pod discovery, and comprehensive naming resolution
#   - Prometheus integration with ServiceMonitor targets, metrics collection, scrape configuration, and comprehensive monitoring coordination
#   - Ingress integration with nginx ingress class, backend protocol (HTTPS), upstream hashing, and comprehensive external access management
#   - Application integration with health endpoints, readiness validation, service registration, and comprehensive application coordination
#
# OPERATIONAL EXCELLENCE:
# ======================
# Grafana Service Lifecycle Management:
#   - Multi-service deployment with primary access, headless discovery, external load balancer, development access, and metrics collection services
#   - Intelligent service management with predictive analytics and traffic utilization correlation
#   - Advanced monitoring with comprehensive service analytics and networking business intelligence
#   - Configuration validation with service schema enforcement and networking deployment safety checks
#   - Automated optimization with service pattern analysis and networking configuration recommendation engine
#
# Security Integration and Compliance:
#   - SOC 2 Type II service controls with comprehensive audit requirements and networking logging
#   - GDPR service compliance with data protection and privacy-preserving networking management
#   - ISO 27001 service security management with information security and networking compliance integration
#   - NIST 800-190 container service security with networking validation and compliance
#   - Zero-trust service architecture with comprehensive encryption and networking authentication requirements
#
# Business Intelligence Integration:
#   - Service analytics with cost correlation and networking resource utilization optimization
#   - Performance analytics with user experience optimization and service business intelligence
#   - Networking intelligence with traffic pattern monitoring and service optimization recommendations
#   - Strategic planning with capacity management and service forecasting
#   - Business impact assessment with service performance correlation and availability tracking
#
# Developer Experience Excellence:
#   - Multi-environment service support with production ClusterIP, development NodePort, external LoadBalancer, and metrics configurations
#   - Comprehensive documentation with service guides and networking troubleshooting procedures
#   - Environment-specific services with production, development, testing, and external access support
#   - Testing integration with service development workflow and networking debugging capabilities
#   - Service monitoring with comprehensive tracking and networking correlation
#
# ==============================================================================
