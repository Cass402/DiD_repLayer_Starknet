# ==============================================================================
# Veridis Decentralized Identity Protocol - Grafana Deployment Configuration
# ==============================================================================
#
# This manifest defines comprehensive Grafana Deployment for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS GRAFANA DEPLOYMENT ARCHITECTURE:
#   • Advanced Grafana deployment with intelligent visualization management and performance-based dashboard optimization
#   • Multi-tier visualization architecture with development, testing, staging, and production environments
#   • Comprehensive observability framework with dashboard policies, visualization optimization, Grafana integration
#   • Advanced lifecycle management with automated visualization optimization, Grafana control, and dashboard enhancement
#   • Enterprise-grade intelligence with comprehensive analytics and Grafana visualization performance insights
#
# VERIDIS GRAFANA DEPLOYMENT OPTIMIZATION:
#   • High-performance visualization with intelligent dashboard management and Grafana deployment optimization
#   • Intelligent visualization traffic management with responsive policies and performance-based dashboard decisions
#   • Advanced dashboard management with business intelligence and visualization-based Grafana control
#   • Comprehensive observability control with intelligent Grafana dashboard management and visualization enhancement
#   • Enterprise acceleration with predictive Grafana visualization management and dashboard optimization
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II Grafana visualization controls with comprehensive audit and dashboard requirements
#   • GDPR Grafana visualization compliance with data protection, privacy controls, and dashboard management
#   • ISO 27001 Grafana visualization management with comprehensive framework integration
#   • NIST 800-190 container Grafana visualization security with dashboard-specific validation and compliance
#   • Zero-knowledge protocol compliance with regulatory frameworks and Grafana visualization best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent Grafana visualization lifecycle management with automated provisioning and dashboard optimization
#   • Predictive dashboard analytics with capacity planning and Grafana visualization intelligence
#   • Advanced visualization integration with Grafana dashboard analytics and visualization business intelligence
#   • Comprehensive observability control with Grafana visualization preservation and dashboard optimization
#   • Business continuity Grafana visualization with dashboard guarantees and visualization optimization
#
# GRAFANA DEPLOYMENT ACCELERATION INTELLIGENCE:
#   • Grafana visualization usage analytics with dashboard patterns and optimization recommendations
#   • Dashboard monitoring with Grafana visualization latency and management optimization intelligence
#   • Development efficiency with Grafana visualization analytics and deployment optimization procedures
#   • Cost optimization with Grafana visualization utilization analysis and dashboard capacity planning procedures
#   • Quality assurance with Grafana visualization metrics and observability validation procedures
#
# ==============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: veridis-grafana
  namespace: veridis-infrastructure

  # Core Veridis Grafana deployment identification labels
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "10.2.3"
    app.kubernetes.io/component: grafana-deployment
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Grafana deployment specific classification
    grafana.veridis.xyz/type: monitoring-grafana-deployment
    grafana.veridis.xyz/category: visualization-deployment
    grafana.veridis.xyz/role: primary-grafana-deployment
    grafana.veridis.xyz/performance-class: high-performance-grafana-deployment
    grafana.veridis.xyz/security-level: enterprise

    # Monitoring Grafana deployment classification
    monitoring.veridis.xyz/grafana-deployment-type: intelligent-grafana-deployment
    monitoring.veridis.xyz/deployment-type: monitoring-deployment
    monitoring.veridis.xyz/performance-tier: high-performance
    monitoring.veridis.xyz/optimization: enabled
    monitoring.veridis.xyz/features: full-monitoring-deployment-stack

    # Observability Grafana deployment classification
    observability.veridis.xyz/tier: production
    observability.veridis.xyz/optimization: intelligent-monitoring-deployment-management
    observability.veridis.xyz/dashboard-management: advanced
    observability.veridis.xyz/visualization-optimization: enabled
    observability.veridis.xyz/efficiency: maximum

    # Business Grafana deployment classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-monitoring-deployment-performance
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/availability-requirement: 99.9

    # Operational Grafana deployment labels
    veridis.xyz/environment: production
    veridis.xyz/team: monitoring-engineering
    veridis.xyz/cost-center: monitoring-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "grafana-deployment-control-framework"
    compliance.veridis.xyz/gdpr: "grafana-deployment-data-protection"
    compliance.veridis.xyz/iso27001: "grafana-deployment-security-management"
    compliance.veridis.xyz/nist-800-190: "grafana-deployment-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Grafana deployment analytics and intelligence
    monitoring.veridis.xyz/grafana-deployment-monitoring: "enabled"
    monitoring.veridis.xyz/performance-monitoring: "comprehensive"
    monitoring.veridis.xyz/dashboard-monitoring: "enabled"
    monitoring.veridis.xyz/business-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"

    # Deployment management labels
    deployment.veridis.xyz/auto-scaling: "enabled"
    deployment.veridis.xyz/health-monitoring: "enabled"
    deployment.veridis.xyz/performance-optimization: "enabled"
    deployment.veridis.xyz/security-scanning: "enabled"
    deployment.veridis.xyz/backup-enabled: "true"

  annotations:
    # Grafana deployment purpose and specifications
    veridis.xyz/description: "Enterprise Veridis Grafana Deployment with intelligent dashboard management, advanced visualization optimization, and comprehensive observability optimization"
    veridis.xyz/purpose: "Provides comprehensive Grafana deployment for decentralized identity management with intelligent dashboard management, visualization optimization, and observability guarantees"
    veridis.xyz/scope: "Grafana deployment including dashboard management, visualization optimization, authentication integration, and comprehensive monitoring intelligence"

    # Grafana deployment architecture and design
    grafana.veridis.xyz/architecture: "Enterprise Grafana deployment with intelligent dashboard management, advanced visualization optimization, and authentication integration optimization"
    grafana.veridis.xyz/design-pattern: "Multi-tier Grafana deployment with dashboard optimization, cost efficiency, and business intelligence"
    grafana.veridis.xyz/optimization-model: "Intelligent Grafana deployment with predictive analytics, dashboard optimization, and visualization efficiency"
    grafana.veridis.xyz/performance-model: "High-performance Grafana deployment with dashboard optimization and intelligent visualization management"

    # Monitoring Grafana deployment specifications
    monitoring.veridis.xyz/grafana-deployment-specification: "Grafana deployment with dashboard optimization and intelligent monitoring deployment management"
    monitoring.veridis.xyz/dashboard-specification: "Advanced dashboard management configuration with monitoring optimization and deployment enhancement"
    monitoring.veridis.xyz/visualization-specification: "Grafana deployment visualization management optimization with intelligent dashboard and enhancement"
    monitoring.veridis.xyz/performance-specification: "Grafana performance deployment with dashboard acceleration and visualization efficiency"
    monitoring.veridis.xyz/business-specification: "Grafana business deployment with cost optimization and strategic dashboard intelligence"

    # Observability Grafana deployment specifications
    observability.veridis.xyz/grafana-deployment-specification: "Observability-aware Grafana deployment with dashboard optimization and visualization intelligence"
    observability.veridis.xyz/dashboard-specification: "Observability dashboard management optimization with intelligent Grafana and visualization enhancement"
    observability.veridis.xyz/visualization-specification: "Observability visualization with cost optimization and intelligent Grafana management"
    observability.veridis.xyz/authentication-specification: "Observability authentication management with auto-optimization and Grafana management"
    observability.veridis.xyz/monitoring-specification: "Observability monitoring with Grafana deployment analytics and dashboard intelligence"

    # Business Grafana deployment specifications
    business.veridis.xyz/sla-specification: "SLA-compliant Grafana deployment with business continuity and dashboard guarantees"
    business.veridis.xyz/intelligence-specification: "Business intelligence with operational analytics and strategic insights"
    business.veridis.xyz/cost-specification: "Cost-optimized Grafana deployment with efficiency analysis and budget management"
    business.veridis.xyz/efficiency-specification: "Business efficiency with Grafana deployment optimization and dashboard intelligence"

    # Operational Grafana deployment specifications
    operations.veridis.xyz/automation-specification: "Full automation with intelligent management and developer-friendly interfaces"
    operations.veridis.xyz/monitoring-specification: "Comprehensive monitoring with Grafana deployment analytics and dashboard intelligence"
    operations.veridis.xyz/management-specification: "Automated management with Grafana deployment preservation and optimization procedures"
    operations.veridis.xyz/scaling-specification: "Intelligent scaling with Grafana deployment management and dashboard optimization"

    # Grafana deployment lifecycle specifications
    lifecycle.veridis.xyz/grafana-deployment-specification: "Dynamic Grafana deployment with automated dashboard management and visualization optimization"
    lifecycle.veridis.xyz/scaling-specification: "Intelligent Grafana deployment scaling with machine learning and dashboard forecasting"
    lifecycle.veridis.xyz/optimization-specification: "Grafana deployment optimization with intelligent dashboard management and visualization enhancement"
    lifecycle.veridis.xyz/evolution-specification: "Grafana deployment evolution with intelligent adaptation and dashboard optimization"

    # Deployment specific annotations
    deployment.veridis.xyz/strategy: "RollingUpdate"
    deployment.veridis.xyz/max-unavailable: "25%"
    deployment.veridis.xyz/max-surge: "25%"
    deployment.veridis.xyz/revision-history-limit: "10"
    deployment.veridis.xyz/progress-deadline: "600s"

    # Performance annotations
    performance.veridis.xyz/dashboard-rendering: "optimized"
    performance.veridis.xyz/query-performance: "enhanced"
    performance.veridis.xyz/caching-enabled: "true"
    performance.veridis.xyz/concurrent-users: "500"
    performance.veridis.xyz/memory-optimization: "enabled"

    # Security annotations
    security.veridis.xyz/authentication: "oauth2"
    security.veridis.xyz/authorization: "rbac"
    security.veridis.xyz/tls-enabled: "true"
    security.veridis.xyz/session-security: "enhanced"
    security.veridis.xyz/data-source-security: "enabled"

    # Dashboard annotations
    dashboard.veridis.xyz/provisioning: "enabled"
    dashboard.veridis.xyz/auto-import: "enabled"
    dashboard.veridis.xyz/template-management: "enabled"
    dashboard.veridis.xyz/version-control: "enabled"
    dashboard.veridis.xyz/backup-enabled: "true"

    # Data source annotations
    datasource.veridis.xyz/prometheus-enabled: "true"
    datasource.veridis.xyz/jaeger-enabled: "true"
    datasource.veridis.xyz/elasticsearch-enabled: "true"
    datasource.veridis.xyz/postgres-enabled: "true"
    datasource.veridis.xyz/redis-enabled: "true"

    # Plugin annotations
    plugin.veridis.xyz/enterprise-plugins: "enabled"
    plugin.veridis.xyz/custom-panels: "enabled"
    plugin.veridis.xyz/data-transformations: "enabled"
    plugin.veridis.xyz/alerting-plugins: "enabled"
    plugin.veridis.xyz/authentication-plugins: "enabled"

    # Documentation and procedures
    veridis.xyz/owner: "monitoring-team@veridis.xyz"
    veridis.xyz/grafana-deployment-admin: "monitoring-admin@veridis.xyz"
    veridis.xyz/escalation: "monitoring-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "monitoring-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/monitoring/grafana-deployment"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/monitoring/grafana-deployment-management"
    veridis.xyz/deployment-docs: "https://monitoring.veridis.xyz/grafana-deployment-guide"
    veridis.xyz/observability-docs: "https://observability.veridis.xyz/grafana-deployment-monitoring"

spec:
  # ==============================================================================
  # Replica and Scaling Configuration
  # ==============================================================================
  replicas: 3

  # ==============================================================================
  # Deployment Strategy Configuration
  # ==============================================================================
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%

  # ==============================================================================
  # Revision History Configuration
  # ==============================================================================
  revisionHistoryLimit: 10

  # ==============================================================================
  # Progress Deadline Configuration
  # ==============================================================================
  progressDeadlineSeconds: 600

  # ==============================================================================
  # Pod Selector Configuration
  # ==============================================================================
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: veridis-production
      app.kubernetes.io/component: grafana-deployment

  # ==============================================================================
  # Pod Template Configuration
  # ==============================================================================
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: veridis-production
        app.kubernetes.io/version: "10.2.3"
        app.kubernetes.io/component: grafana-deployment
        app.kubernetes.io/part-of: veridis-protocol
        app.kubernetes.io/managed-by: kustomize

        # Grafana pod specific labels
        grafana.veridis.xyz/type: monitoring-grafana-pod
        grafana.veridis.xyz/category: visualization-pod
        grafana.veridis.xyz/role: grafana-pod
        grafana.veridis.xyz/dashboard-server: enabled

        # Monitoring labels
        monitoring.veridis.xyz/grafana-pod-type: intelligent-grafana-pod
        monitoring.veridis.xyz/visualization-enabled: "true"
        monitoring.veridis.xyz/dashboard-management: "enabled"
        monitoring.veridis.xyz/metrics-collection: "enabled"

        # Network policy labels
        network.veridis.xyz/ingress-allowed: "monitoring"
        network.veridis.xyz/egress-allowed: "datasources"
        network.veridis.xyz/prometheus-access: "enabled"
        network.veridis.xyz/external-access: "controlled"

        # Performance labels
        performance.veridis.xyz/tier: high-performance
        performance.veridis.xyz/caching-enabled: "true"
        performance.veridis.xyz/optimization: "enabled"
        performance.veridis.xyz/concurrent-users: "500"

        veridis.xyz/environment: production
        veridis.xyz/team: monitoring-engineering

      annotations:
        # Pod purpose and specifications
        veridis.xyz/description: "Grafana Pod for Veridis with comprehensive dashboard management and visualization optimization"
        veridis.xyz/purpose: "Provides Grafana visualization for Veridis monitoring with comprehensive dashboard management and analytics"

        # Performance annotations
        performance.veridis.xyz/dashboard-rendering: "optimized"
        performance.veridis.xyz/query-caching: "enabled"
        performance.veridis.xyz/memory-optimization: "enabled"
        performance.veridis.xyz/cpu-optimization: "enabled"

        # Security annotations
        security.veridis.xyz/pod-security-standard: "restricted"
        security.veridis.xyz/seccomp-profile: "runtime/default"
        security.veridis.xyz/apparmor-profile: "runtime/default"
        security.veridis.xyz/capabilities-drop: "ALL"

        # Monitoring annotations
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        prometheus.io/scheme: "https"

        # Backup annotations
        backup.veridis.xyz/enabled: "true"
        backup.veridis.xyz/dashboard-backup: "enabled"
        backup.veridis.xyz/configuration-backup: "enabled"
        backup.veridis.xyz/data-backup: "enabled"

        # Dashboard annotations
        dashboard.veridis.xyz/auto-provision: "true"
        dashboard.veridis.xyz/template-sync: "enabled"
        dashboard.veridis.xyz/version-tracking: "enabled"
        dashboard.veridis.xyz/export-enabled: "true"

    spec:
      # ==============================================================================
      # Service Account Configuration
      # ==============================================================================
      serviceAccountName: veridis-grafana

      # ==============================================================================
      # Security Context Configuration
      # ==============================================================================
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
          - 472

      # ==============================================================================
      # DNS Configuration
      # ==============================================================================
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0

      # ==============================================================================
      # Scheduling Configuration
      # ==============================================================================
      priorityClassName: veridis-monitoring-high
      schedulerName: default-scheduler

      # ==============================================================================
      # Affinity and Anti-Affinity Configuration
      # ==============================================================================
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - grafana-deployment
                topologyKey: topology.kubernetes.io/zone

        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: veridis.xyz/node-type
                    operator: In
                    values:
                      - monitoring
                      - compute
            - weight: 50
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64

      # ==============================================================================
      # Tolerations Configuration
      # ==============================================================================
      tolerations:
        - key: veridis.xyz/monitoring
          operator: Equal
          value: "true"
          effect: NoSchedule
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 300
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 300

      # ==============================================================================
      # Node Selector Configuration
      # ==============================================================================
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64

      # ==============================================================================
      # Termination Configuration
      # ==============================================================================
      terminationGracePeriodSeconds: 60

      # ==============================================================================
      # Init Containers Configuration
      # ==============================================================================
      initContainers:
        # Dashboard provisioning init container
        - name: dashboard-provisioner
          image: busybox:1.36.1
          imagePullPolicy: IfNotPresent

          securityContext:
            runAsNonRoot: true
            runAsUser: 472
            runAsGroup: 472
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

          command:
            - sh
            - -c
            - |
              echo "Provisioning Grafana dashboards..."
              mkdir -p /var/lib/grafana/dashboards
              mkdir -p /etc/grafana/provisioning/dashboards
              mkdir -p /etc/grafana/provisioning/datasources
              echo "Dashboard provisioning completed"

          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: dashboard-provisioning
              mountPath: /etc/grafana/provisioning/dashboards
            - name: datasource-provisioning
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-veridis
              mountPath: /var/lib/grafana/dashboards/veridis
            - name: dashboards-infrastructure
              mountPath: /var/lib/grafana/dashboards/infrastructure
            - name: dashboards-business
              mountPath: /var/lib/grafana/dashboards/business

          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 100m
              memory: 64Mi

        # Plugin installation init container
        - name: plugin-installer
          image: grafana/grafana:10.2.3
          imagePullPolicy: IfNotPresent

          securityContext:
            runAsNonRoot: true
            runAsUser: 472
            runAsGroup: 472
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

          command:
            - sh
            - -c
            - |
              echo "Installing Grafana plugins..."
              grafana-cli --pluginsDir /var/lib/grafana/plugins plugins install grafana-piechart-panel || true
              grafana-cli --pluginsDir /var/lib/grafana/plugins plugins install grafana-worldmap-panel || true
              grafana-cli --pluginsDir /var/lib/grafana/plugins plugins install grafana-clock-panel || true
              grafana-cli --pluginsDir /var/lib/grafana/plugins plugins install redis-datasource || true
              grafana-cli --pluginsDir /var/lib/grafana/plugins plugins install postgres-datasource || true
              echo "Plugin installation completed"

          env:
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel,redis-datasource,postgres-datasource"

          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-plugins
              mountPath: /var/lib/grafana/plugins

          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi

      # ==============================================================================
      # Main Container Configuration
      # ==============================================================================
      containers:
        - name: grafana
          image: grafana/grafana:10.2.3
          imagePullPolicy: IfNotPresent

          # ==============================================================================
          # Container Security Context
          # ==============================================================================
          securityContext:
            runAsNonRoot: true
            runAsUser: 472
            runAsGroup: 472
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

          # ==============================================================================
          # Container Ports Configuration
          # ==============================================================================
          ports:
            - name: http-grafana
              containerPort: 3000
              protocol: TCP
            - name: http-metrics
              containerPort: 3001
              protocol: TCP

          # ==============================================================================
          # Environment Variables Configuration
          # ==============================================================================
          env:
            # Core Grafana configuration
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-credentials
                  key: admin-password
            - name: GF_SECURITY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-credentials
                  key: secret-key

            # Server configuration
            - name: GF_SERVER_ROOT_URL
              value: "https://monitoring.veridis.xyz/grafana"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            - name: GF_SERVER_DOMAIN
              value: "monitoring.veridis.xyz"
            - name: GF_SERVER_HTTP_PORT
              value: "3000"
            - name: GF_SERVER_PROTOCOL
              value: "https"
            - name: GF_SERVER_CERT_FILE
              value: "/etc/grafana/tls/tls.crt"
            - name: GF_SERVER_CERT_KEY
              value: "/etc/grafana/tls/tls.key"

            # Database configuration
            - name: GF_DATABASE_TYPE
              value: "postgres"
            - name: GF_DATABASE_HOST
              value: "veridis-postgres.veridis-infrastructure.svc.cluster.local:5432"
            - name: GF_DATABASE_NAME
              value: "grafana"
            - name: GF_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-database
                  key: username
            - name: GF_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-database
                  key: password
            - name: GF_DATABASE_SSL_MODE
              value: "require"
            - name: GF_DATABASE_MAX_IDLE_CONN
              value: "25"
            - name: GF_DATABASE_MAX_OPEN_CONN
              value: "100"
            - name: GF_DATABASE_CONN_MAX_LIFETIME
              value: "14400"

            # Authentication configuration
            - name: GF_AUTH_OAUTH_AUTO_LOGIN
              value: "true"
            - name: GF_AUTH_OAUTH_SIGNOUT_REDIRECT_URL
              value: "https://auth.veridis.xyz/logout"
            - name: GF_AUTH_GENERIC_OAUTH_ENABLED
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_NAME
              value: "Veridis OAuth"
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-oauth
                  key: client-id
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-oauth
                  key: client-secret
            - name: GF_AUTH_GENERIC_OAUTH_SCOPES
              value: "openid profile email"
            - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
              value: "https://auth.veridis.xyz/oauth/authorize"
            - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
              value: "https://auth.veridis.xyz/oauth/token"
            - name: GF_AUTH_GENERIC_OAUTH_API_URL
              value: "https://auth.veridis.xyz/oauth/userinfo"

            # Security configuration
            - name: GF_SECURITY_DISABLE_GRAVATAR
              value: "true"
            - name: GF_SECURITY_COOKIE_SECURE
              value: "true"
            - name: GF_SECURITY_COOKIE_SAMESITE
              value: "strict"
            - name: GF_SECURITY_STRICT_TRANSPORT_SECURITY
              value: "true"
            - name: GF_SECURITY_CONTENT_TYPE_PROTECTION
              value: "true"
            - name: GF_SECURITY_X_CONTENT_TYPE_OPTIONS
              value: "true"
            - name: GF_SECURITY_X_XSS_PROTECTION
              value: "true"

            # Performance configuration
            - name: GF_RENDERING_SERVER_URL
              value: "http://veridis-grafana-renderer.veridis-infrastructure.svc.cluster.local:8081/render"
            - name: GF_RENDERING_CALLBACK_URL
              value: "http://veridis-grafana.veridis-infrastructure.svc.cluster.local:3000/"
            - name: GF_DATABASE_QUERY_RETRIES
              value: "3"
            - name: GF_DATABASE_QUERY_TIMEOUT
              value: "60"

            # Caching configuration
            - name: GF_CACHE_TYPE
              value: "redis"
            - name: GF_CACHE_CONNSTR
              value: "addr=veridis-redis.veridis-infrastructure.svc.cluster.local:6379,pool_size=100,db=1"

            # Session configuration
            - name: GF_SESSION_PROVIDER
              value: "redis"
            - name: GF_SESSION_PROVIDER_CONFIG
              value: "addr=veridis-redis.veridis-infrastructure.svc.cluster.local:6379,pool_size=100,db=2"
            - name: GF_SESSION_COOKIE_SECURE
              value: "true"
            - name: GF_SESSION_COOKIE_MAX_AGE
              value: "86400"

            # Logging configuration
            - name: GF_LOG_MODE
              value: "console file"
            - name: GF_LOG_LEVEL
              value: "info"
            - name: GF_LOG_CONSOLE_FORMAT
              value: "json"
            - name: GF_LOG_FILE_FORMAT
              value: "json"
            - name: GF_LOG_FILE_LOG_ROTATE
              value: "true"
            - name: GF_LOG_FILE_MAX_SIZE
              value: "100MB"
            - name: GF_LOG_FILE_MAX_DAYS
              value: "7"

            # Metrics configuration
            - name: GF_METRICS_ENABLED
              value: "true"
            - name: GF_METRICS_INTERVAL_SECONDS
              value: "10"
            - name: GF_METRICS_BASIC_AUTH_USERNAME
              value: "grafana"
            - name: GF_METRICS_BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-metrics
                  key: password

            # Plugin configuration
            - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
              value: "redis-datasource,postgres-datasource"
            - name: GF_PLUGINS_ENABLE_ALPHA
              value: "true"
            - name: GF_PLUGINS_APP_TLS_SKIP_VERIFY_INSECURE
              value: "false"

            # Enterprise features
            - name: GF_ENTERPRISE_LICENSE_TEXT
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-enterprise
                  key: license
                  optional: true

            # Feature toggles
            - name: GF_FEATURE_TOGGLES_ENABLE
              value: "publicDashboards,panelTitleSearch,tempoApmTable,prometheusMetricEncyclopedia"

            # Alerting configuration
            - name: GF_ALERTING_ENABLED
              value: "true"
            - name: GF_ALERTING_EXECUTE_ALERTS
              value: "true"
            - name: GF_ALERTING_ERROR_OR_TIMEOUT
              value: "alerting"
            - name: GF_ALERTING_NODATA_OR_NULLVALUES
              value: "no_data"
            - name: GF_ALERTING_CONCURRENT_RENDER_LIMIT
              value: "5"

            # SMTP configuration
            - name: GF_SMTP_ENABLED
              value: "true"
            - name: GF_SMTP_HOST
              value: "smtp.veridis.xyz:587"
            - name: GF_SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-smtp
                  key: username
            - name: GF_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: veridis-grafana-smtp
                  key: password
            - name: GF_SMTP_FROM_ADDRESS
              value: "grafana@veridis.xyz"
            - name: GF_SMTP_FROM_NAME
              value: "Veridis Grafana"

            # Provisioning paths
            - name: GF_PATHS_PROVISIONING
              value: "/etc/grafana/provisioning"
            - name: GF_PATHS_PLUGINS
              value: "/var/lib/grafana/plugins"
            - name: GF_PATHS_DATA
              value: "/var/lib/grafana"
            - name: GF_PATHS_LOGS
              value: "/var/log/grafana"

          # ==============================================================================
          # Resource Requirements Configuration
          # ==============================================================================
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
              ephemeral-storage: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi
              ephemeral-storage: 5Gi

          # ==============================================================================
          # Volume Mounts Configuration
          # ==============================================================================
          volumeMounts:
            # Main storage
            - name: grafana-storage
              mountPath: /var/lib/grafana

            # Configuration provisioning
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
              readOnly: true

            # Dashboard provisioning
            - name: dashboard-provisioning
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true

            # Data source provisioning
            - name: datasource-provisioning
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true

            # Plugin directory
            - name: grafana-plugins
              mountPath: /var/lib/grafana/plugins

            # Dashboard files
            - name: dashboards-veridis
              mountPath: /var/lib/grafana/dashboards/veridis
              readOnly: true

            - name: dashboards-infrastructure
              mountPath: /var/lib/grafana/dashboards/infrastructure
              readOnly: true

            - name: dashboards-business
              mountPath: /var/lib/grafana/dashboards/business
              readOnly: true

            # TLS certificates
            - name: grafana-tls
              mountPath: /etc/grafana/tls
              readOnly: true

            # Logs directory
            - name: grafana-logs
              mountPath: /var/log/grafana

            # Temporary directory
            - name: grafana-tmp
              mountPath: /tmp

          # ==============================================================================
          # Health Check Configuration
          # ==============================================================================
          livenessProbe:
            httpGet:
              path: /api/health
              port: http-grafana
              scheme: HTTPS
            initialDelaySeconds: 60
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10

          readinessProbe:
            httpGet:
              path: /api/health
              port: http-grafana
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /api/health
              port: http-grafana
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30

          # ==============================================================================
          # Lifecycle Configuration
          # ==============================================================================
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - |
                    echo "Gracefully shutting down Grafana..."
                    # Wait for ongoing requests to complete
                    sleep 15
                    echo "Grafana shutdown preparation completed"

      # ==============================================================================
      # Volumes Configuration
      # ==============================================================================
      volumes:
        # Main persistent storage
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: veridis-grafana-storage

        # Configuration files
        - name: grafana-config
          configMap:
            name: veridis-grafana-config
            defaultMode: 0644

        # Dashboard provisioning configuration
        - name: dashboard-provisioning
          configMap:
            name: veridis-grafana-dashboard-provisioning
            defaultMode: 0644

        # Data source provisioning configuration
        - name: datasource-provisioning
          configMap:
            name: veridis-grafana-datasource-provisioning
            defaultMode: 0644

        # Dashboard files
        - name: dashboards-veridis
          configMap:
            name: veridis-grafana-dashboards-veridis
            defaultMode: 0644

        - name: dashboards-infrastructure
          configMap:
            name: veridis-grafana-dashboards-infrastructure
            defaultMode: 0644

        - name: dashboards-business
          configMap:
            name: veridis-grafana-dashboards-business
            defaultMode: 0644

        # Plugin storage
        - name: grafana-plugins
          emptyDir:
            sizeLimit: 1Gi

        # TLS certificates
        - name: grafana-tls
          secret:
            secretName: veridis-grafana-tls
            defaultMode: 0400

        # Log storage
        - name: grafana-logs
          emptyDir:
            sizeLimit: 2Gi

        # Temporary storage
        - name: grafana-tmp
          emptyDir:
            sizeLimit: 1Gi

      # ==============================================================================
      # Image Pull Secrets Configuration
      # ==============================================================================
      imagePullSecrets:
        - name: veridis-registry-credentials

# ==============================================================================
# Veridis Grafana Deployment Summary and Enterprise Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS GRAFANA DEPLOYMENT STRATEGY:
# ==================================================
#
# VERIDIS GRAFANA DEPLOYMENT ARCHITECTURE OVERVIEW:
# -------------------------------------------------
# 1. Core Grafana Deployment Configuration:
#    - Comprehensive high-performance deployment with intelligent dashboard management and advanced visualization optimization for production monitoring
#    - Advanced deployment configuration with 3 replicas, RollingUpdate strategy, 600s progress deadline, and comprehensive lifecycle management
#    - Multi-tier deployment architecture with enterprise tier, high availability, TLS encryption, and performance optimization
#    - Enterprise deployment policies with OAuth2 authentication, RBAC authorization, PostgreSQL backend, and comprehensive security integration
#    - Performance optimization with intelligent dashboard management, caching optimization, plugin capabilities, and monitoring for maximum efficiency
#
# 2. Advanced Security and Authentication Integration:
#    - OAuth2 authentication with Veridis identity provider, generic OAuth configuration, and comprehensive session management
#    - TLS encryption with certificate-based security, HTTPS enforcement, secure cookies, and comprehensive transport security
#    - RBAC authorization with role-based access control, team management, organization structure, and comprehensive permission management
#    - Security hardening with restricted security context, non-root execution, capability dropping, and comprehensive security policies
#    - Enterprise authentication with SSO integration, multi-factor authentication support, session timeout, and comprehensive identity management
#
# 3. Enterprise Database and Storage Integration:
#    - PostgreSQL backend with dedicated Grafana database, connection pooling (100 max), SSL encryption, and comprehensive data management
#    - Persistent storage with dedicated PVC, dashboard persistence, configuration backup, and comprehensive data protection
#    - Redis caching with session storage (db=2), dashboard caching (db=1), performance optimization, and comprehensive cache management
#    - Storage optimization with plugin storage, log rotation, temporary file management, and comprehensive storage lifecycle
#    - Data integrity with backup integration, disaster recovery, configuration versioning, and comprehensive data protection
#
# 4. Comprehensive Dashboard and Visualization Management:
#    - Dashboard provisioning with automatic import, template management, version control, and comprehensive dashboard lifecycle
#    - Multi-category dashboards with Veridis-specific, infrastructure, business intelligence, and comprehensive monitoring coverage
#    - Plugin ecosystem with enterprise plugins, custom panels, data transformations, and comprehensive visualization enhancement
#    - Performance optimization with dashboard caching, query optimization, rendering acceleration, and comprehensive user experience
#    - Template management with dashboard templates, variable management, dynamic dashboards, and comprehensive customization
#
# 5. Advanced Data Source and Integration Management:
#    - Prometheus integration with metrics collection, alerting rules, query optimization, and comprehensive monitoring analytics
#    - Jaeger integration with distributed tracing, performance analysis, service mapping, and comprehensive observability
#    - Elasticsearch integration with log analytics, search capabilities, visualization, and comprehensive log intelligence
#    - PostgreSQL integration with database metrics, query analysis, performance monitoring, and comprehensive database intelligence
#    - Redis integration with cache analytics, performance monitoring, operation tracking, and comprehensive cache intelligence
#
# 6. Enterprise Performance and Scalability Optimization:
#    - High-performance configuration with 3 replicas, resource optimization (2 CPU, 4Gi memory), and comprehensive performance tuning
#    - Caching optimization with Redis backend, session management, dashboard caching, and comprehensive performance enhancement
#    - Query optimization with connection pooling, query retries, timeout management, and comprehensive database performance
#    - Rendering optimization with external renderer service, image generation, PDF export, and comprehensive report generation
#    - Concurrent user support with 500 user capacity, session management, load balancing, and comprehensive scalability
#
# 7. Advanced Monitoring and Alerting Integration:
#    - Self-monitoring with Prometheus metrics, health endpoints, performance tracking, and comprehensive observability
#    - Alerting integration with alert manager, notification channels, escalation policies, and comprehensive incident management
#    - Health monitoring with startup, liveness, readiness probes, and comprehensive service health validation
#    - Performance monitoring with resource utilization, response times, error rates, and comprehensive performance analytics
#    - Business monitoring with dashboard usage, user analytics, system performance, and comprehensive business intelligence
#
# 8. Comprehensive Configuration and Environment Management:
#    - Feature flags with enterprise features, alpha features, public dashboards, and comprehensive feature management
#    - Environment configuration with production settings, security hardening, performance optimization, and comprehensive environment tuning
#    - Plugin management with approved plugins, security validation, performance optimization, and comprehensive plugin lifecycle
#    - Configuration management with provisioning automation, version control, backup procedures, and comprehensive configuration lifecycle
#    - Enterprise licensing with optional license management, feature enablement, compliance tracking, and comprehensive enterprise support
#
# ENTERPRISE GRAFANA DEPLOYMENT FEATURES:
# =======================================
# Advanced Deployment Management and Container Optimization:
#   - Multi-replica deployment with high availability (3 replicas), rolling updates (25% surge/unavailable), and comprehensive deployment strategies
#   - Intelligent container management with security hardening, resource optimization, health monitoring, and comprehensive lifecycle management
#   - Container discovery with performance monitoring, resource tracking, health monitoring, and comprehensive container analytics
#   - Deployment management with strategy configuration, revision history (10), progress deadlines (600s), and comprehensive deployment intelligence
#   - Performance tuning with resource optimization (500m-2 CPU, 1-4Gi memory), ephemeral storage (1-5Gi), and intelligent resource management
#
# Comprehensive Security and Compliance Integration:
#   - OAuth2 integration with enterprise identity provider, SSO support, role mapping, and comprehensive authentication management
#   - TLS encryption with certificate management, HTTPS enforcement, secure session cookies, and comprehensive transport security
#   - Security hardening with restricted security context, non-root execution, capability dropping, and comprehensive security policies
#   - Compliance integration with audit logging, access tracking, configuration validation, and comprehensive compliance management
#   - Enterprise security with vulnerability scanning, security monitoring, incident response, and comprehensive security operations
#
# Enterprise Dashboard and Visualization Intelligence:
#   - Multi-tier dashboards with business intelligence, infrastructure monitoring, application analytics, and comprehensive visualization coverage
#   - Dashboard automation with provisioning pipelines, template management, version control, and comprehensive dashboard lifecycle
#   - Visualization optimization with performance tuning, caching strategies, rendering acceleration, and comprehensive user experience
#   - Business intelligence with custom dashboards, KPI tracking, trend analysis, and comprehensive strategic insights
#   - Template management with reusable components, variable management, dynamic content, and comprehensive customization framework
#
# Advanced Data Source and Integration Management:
#   - Multi-source integration with Prometheus, Jaeger, Elasticsearch, PostgreSQL, Redis, and comprehensive data source management
#   - Performance optimization with query caching, connection pooling, timeout management, and comprehensive data access optimization
#   - Data security with encrypted connections, access control, audit logging, and comprehensive data protection
#   - Query optimization with performance tuning, result caching, efficient queries, and comprehensive data analytics
#   - Integration intelligence with data correlation, cross-source analysis, unified views, and comprehensive data insights
#
# OPERATIONAL EXCELLENCE:
# ======================
# Grafana Deployment Lifecycle Management:
#   - Multi-container deployment with main Grafana container, init containers (dashboard provisioner, plugin installer), and comprehensive container orchestration
#   - Intelligent deployment management with predictive analytics and resource utilization correlation
#   - Advanced monitoring with comprehensive deployment analytics and container business intelligence
#   - Configuration validation with deployment schema enforcement and container deployment safety checks
#   - Automated optimization with deployment pattern analysis and container configuration recommendation engine
#
# Security Integration and Compliance:
#   - SOC 2 Type II deployment controls with comprehensive audit requirements and container logging
#   - GDPR deployment compliance with data protection and privacy-preserving container management
#   - ISO 27001 deployment security management with information security and container compliance integration
#   - NIST 800-190 container deployment security with container validation and compliance
#   - Zero-trust deployment architecture with comprehensive encryption and container authentication requirements
#
# Business Intelligence Integration:
#   - Deployment analytics with cost correlation and container resource utilization optimization
#   - Performance analytics with user experience optimization and deployment business intelligence
#   - Container intelligence with resource pattern monitoring and deployment optimization recommendations
#   - Strategic planning with capacity management and deployment forecasting
#   - Business impact assessment with deployment performance correlation and availability tracking
#
# Developer Experience Excellence:
#   - Multi-environment deployment support with production, development, HA, and enterprise configurations
#   - Comprehensive documentation with deployment guides and container troubleshooting procedures
#   - Environment-specific deployments with production, development, testing, and multi-cluster support
#   - Testing integration with deployment development workflow and container debugging capabilities
#   - Deployment monitoring with comprehensive tracking and container correlation
#
# ==============================================================================
