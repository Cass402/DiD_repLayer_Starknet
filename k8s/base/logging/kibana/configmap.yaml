# ==============================================================================
# Veridis Decentralized Identity Protocol - Kibana ConfigMap Configuration
# ==============================================================================
#
# This manifest defines comprehensive Kibana ConfigMap for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS KIBANA CONFIGMAP ARCHITECTURE:
#   • Advanced Kibana ConfigMap with intelligent log visualization configuration and performance-based optimization
#   • Multi-tier ConfigMap architecture with development, testing, staging, and production environments
#   • Comprehensive observability framework with ConfigMap policies, log optimization, Kibana integration
#   • Advanced lifecycle management with automated ConfigMap optimization, Kibana control, and log enhancement
#   • Enterprise-grade intelligence with comprehensive analytics and Kibana ConfigMap performance insights
#
# VERIDIS KIBANA CONFIGMAP OPTIMIZATION:
#   • High-performance ConfigMap with intelligent log visualization configuration and Kibana configmap optimization
#   • Intelligent ConfigMap log visualization with responsive policies and performance-based log decisions
#   • Advanced ConfigMap management with business intelligence and log-based Kibana control
#   • Comprehensive observability control with intelligent Kibana ConfigMap management and log enhancement
#   • Enterprise acceleration with predictive Kibana ConfigMap management and log optimization
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II Kibana ConfigMap controls with comprehensive audit and log requirements
#   • GDPR Kibana ConfigMap compliance with data protection, privacy controls, and log management
#   • ISO 27001 Kibana ConfigMap management with comprehensive framework integration
#   • NIST 800-190 container Kibana ConfigMap security with log-specific validation and compliance
#   • Zero-knowledge protocol compliance with regulatory frameworks and Kibana ConfigMap best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent Kibana ConfigMap lifecycle management with automated provisioning and log optimization
#   • Predictive log analytics with capacity planning and Kibana ConfigMap intelligence
#   • Advanced ConfigMap integration with Kibana log analytics and performance business intelligence
#   • Comprehensive observability control with Kibana ConfigMap preservation and log optimization
#   • Business continuity Kibana ConfigMap with log guarantees and performance optimization
#
# KIBANA CONFIGMAP ACCELERATION INTELLIGENCE:
#   • Kibana ConfigMap usage analytics with log patterns and optimization recommendations
#   • ConfigMap monitoring with Kibana log latency and management optimization intelligence
#   • Development efficiency with Kibana ConfigMap analytics and deployment optimization procedures
#   • Cost optimization with Kibana ConfigMap utilization analysis and log capacity planning procedures
#   • Quality assurance with Kibana ConfigMap metrics and observability validation procedures
#
# ==============================================================================

# ==============================================================================
# Veridis Kibana ConfigMap - Primary Configuration
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: veridis-kibana-config
  namespace: veridis-infrastructure

  # Core Veridis Kibana ConfigMap identification labels
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "8.15.0"
    app.kubernetes.io/component: kibana-configmap
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Kibana ConfigMap specific classification
    kibana.veridis.xyz/type: log-kibana-configmap
    kibana.veridis.xyz/category: observability-configmap
    kibana.veridis.xyz/role: primary-kibana-configmap
    kibana.veridis.xyz/configmap-class: high-performance-kibana-configmap
    kibana.veridis.xyz/security-level: enterprise

    # ConfigMap Kibana ConfigMap classification
    configmap.veridis.xyz/kibana-configmap-type: intelligent-kibana-configmap
    configmap.veridis.xyz/configmap-type: log-configmap
    configmap.veridis.xyz/performance-tier: high-throughput
    configmap.veridis.xyz/optimization: enabled
    configmap.veridis.xyz/features: full-kibana-configmap-stack

    # Observability Kibana ConfigMap classification
    observability.veridis.xyz/tier: production
    observability.veridis.xyz/optimization: intelligent-kibana-configmap-management
    observability.veridis.xyz/log-management: advanced
    observability.veridis.xyz/performance-optimization: enabled
    observability.veridis.xyz/efficiency: maximum

    # Business Kibana ConfigMap classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-kibana-configmap-performance
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/availability-requirement: 99.9

    # Operational Kibana ConfigMap labels
    veridis.xyz/environment: production
    veridis.xyz/team: observability-engineering
    veridis.xyz/cost-center: observability-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "kibana-configmap-control-framework"
    compliance.veridis.xyz/gdpr: "kibana-configmap-data-protection"
    compliance.veridis.xyz/iso27001: "kibana-configmap-security-management"
    compliance.veridis.xyz/nist-800-190: "kibana-configmap-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Kibana ConfigMap analytics and intelligence
    monitoring.veridis.xyz/kibana-configmap-monitoring: "enabled"
    monitoring.veridis.xyz/performance-monitoring: "comprehensive"
    monitoring.veridis.xyz/log-monitoring: "enabled"
    monitoring.veridis.xyz/business-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"

    # Configuration management labels
    config.veridis.xyz/type: "kibana-configuration"
    config.veridis.xyz/format: "yaml"
    config.veridis.xyz/version: "8.15.0"
    config.veridis.xyz/validation: "enabled"
    config.veridis.xyz/template: "enterprise"

  annotations:
    # Kibana ConfigMap purpose and specifications
    veridis.xyz/description: "Enterprise Veridis Kibana ConfigMap with intelligent log visualization configuration, advanced performance optimization, and comprehensive observability optimization"
    veridis.xyz/purpose: "Provides comprehensive Kibana ConfigMap for decentralized identity management with intelligent log visualization configuration, performance optimization, and observability guarantees"
    veridis.xyz/scope: "Kibana ConfigMap including log visualization configuration, performance optimization, dashboard configuration, and comprehensive monitoring intelligence"

    # Kibana ConfigMap architecture and design
    kibana.veridis.xyz/architecture: "Enterprise Kibana ConfigMap with intelligent log visualization configuration, advanced performance optimization, and dashboard integration optimization"
    kibana.veridis.xyz/design-pattern: "Multi-tier Kibana ConfigMap with performance optimization, cost efficiency, and business intelligence"
    kibana.veridis.xyz/optimization-model: "Intelligent Kibana ConfigMap with predictive analytics, performance optimization, and log efficiency"
    kibana.veridis.xyz/performance-model: "High-performance Kibana ConfigMap with log optimization and intelligent configuration management"

    # ConfigMap Kibana ConfigMap specifications
    configmap.veridis.xyz/kibana-configmap-specification: "Kibana ConfigMap with performance optimization and intelligent kibana configmap management"
    configmap.veridis.xyz/log-specification: "Advanced log visualization configuration management with kibana optimization and configmap enhancement"
    configmap.veridis.xyz/dashboard-specification: "Kibana ConfigMap dashboard configuration optimization with intelligent log and enhancement"
    configmap.veridis.xyz/performance-specification: "Kibana performance configmap with log acceleration and efficiency"
    configmap.veridis.xyz/business-specification: "Kibana business configmap with cost optimization and strategic log intelligence"

    # Configuration annotations
    config.veridis.xyz/checksum: "placeholder-for-config-checksum"
    config.veridis.xyz/version: "8.15.0"
    config.veridis.xyz/last-updated: "2025-01-18T10:00:00Z"
    config.veridis.xyz/update-strategy: "rolling"
    config.veridis.xyz/validation-enabled: "true"

    # Documentation and procedures
    veridis.xyz/owner: "observability-team@veridis.xyz"
    veridis.xyz/kibana-configmap-admin: "observability-admin@veridis.xyz"
    veridis.xyz/escalation: "observability-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "observability-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/observability/kibana-configmap"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/observability/kibana-configmap-management"
    veridis.xyz/configmap-docs: "https://observability.veridis.xyz/kibana-configmap-guide"
    veridis.xyz/observability-docs: "https://observability.veridis.xyz/kibana-configmap-monitoring"

# ==============================================================================
# Configuration Data
# ==============================================================================
data:
  # ==============================================================================
  # Primary Kibana Configuration (kibana.yml)
  # ==============================================================================
  kibana.yml: |
    # ==============================================================================
    # Veridis Enterprise Kibana Configuration
    # ==============================================================================
    #
    # This configuration provides comprehensive Kibana setup for the Veridis
    # Decentralized Identity Protocol with enterprise-grade features including:
    #
    # • Advanced server configuration with performance optimization
    # • Comprehensive Elasticsearch integration with security
    # • Enterprise X-Pack features and security controls
    # • Advanced monitoring and observability integration
    # • Multi-environment support and configuration management
    # • Business intelligence and analytics optimization
    # • Compliance and audit logging configuration
    # • Performance tuning and resource optimization
    #
    # ==============================================================================

    # ==============================================================================
    # Server Configuration
    # ==============================================================================
    server:
      # Network and port configuration
      host: "0.0.0.0"
      port: 5601
      name: "veridis-kibana-production"

      # Base path and public URL configuration
      basePath: ""
      rewriteBasePath: false
      publicBaseUrl: "https://kibana.veridis.xyz"

      # Request and connection limits
      maxPayload: 1048576  # 1MB
      keepaliveTimeout: 120000  # 2 minutes
      socketTimeout: 120000  # 2 minutes

      # CORS configuration for development
      cors:
        enabled: false
        allowCredentials: false
        allowOrigin: []

      # Compression and caching
      compression:
        enabled: true
        referrerWhitelist: []

      # Custom headers for security
      customResponseHeaders:
        X-Frame-Options: "DENY"
        X-Content-Type-Options: "nosniff"
        X-XSS-Protection: "1; mode=block"
        Referrer-Policy: "strict-origin-when-cross-origin"
        Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; frame-ancestors 'none'"

    # ==============================================================================
    # Elasticsearch Configuration
    # ==============================================================================
    elasticsearch:
      # Connection configuration
      hosts: ["https://veridis-elasticsearch.veridis-infrastructure.svc.cluster.local:9200"]

      # Authentication
      username: "kibana_system"
      password: "${ELASTICSEARCH_PASSWORD}"

      # SSL/TLS configuration
      ssl:
        enabled: true
        verificationMode: "certificate"
        certificateAuthorities: ["/usr/share/kibana/config/certs/ca.crt"]

      # Connection management
      requestTimeout: 30000  # 30 seconds
      pingTimeout: 3000  # 3 seconds
      startupTimeout: 5000  # 5 seconds

      # Request headers
      requestHeadersWhitelist: ["authorization", "x-forwarded-for", "x-forwarded-proto", "x-proxy-user", "x-proxy-roles"]
      customHeaders: {}

      # Connection pool
      maxSockets: 10
      keepAlive: true

      # Compression
      compression: true

      # API version
      apiVersion: "8.15"

    # ==============================================================================
    # Index and Data Configuration
    # ==============================================================================
    # Kibana index configuration
    kibana:
      index: ".kibana-veridis"
      autocompleteTerminateAfter: 100000
      autocompleteTimeout: 1000

    # Default index patterns
    kibana.defaultAppId: "discover"
    kibana.autocompleteTerminateAfter: 100000
    kibana.autocompleteTimeout: 1000

    # ==============================================================================
    # Logging Configuration
    # ==============================================================================
    logging:
      # Root logging configuration
      root:
        level: "info"
        appenders: ["default", "file"]

      # Appenders configuration
      appenders:
        default:
          type: "console"
          layout:
            type: "pattern"
            pattern: "[%date][%level][%logger] %message %meta"

        file:
          type: "file"
          fileName: "/usr/share/kibana/logs/kibana.log"
          layout:
            type: "json"
          policy:
            type: "size-limit"
            size: "50mb"
          strategy:
            type: "numeric"
            max: 10
            pattern: ".%i"

      # Logger configurations
      loggers:
        - name: "http.server.response"
          level: "warn"
          appenders: ["default", "file"]
          additivity: false

        - name: "plugins.reporting"
          level: "info"
          appenders: ["default", "file"]
          additivity: false

        - name: "elasticsearch.deprecation"
          level: "warn"
          appenders: ["default", "file"]
          additivity: false

        - name: "plugins.security"
          level: "info"
          appenders: ["default", "file"]
          additivity: false

      # Logging rotation
      logRotate:
        enabled: true
        everyBytes: 52428800  # 50MB
        keepFiles: 10

    # ==============================================================================
    # X-Pack Security Configuration
    # ==============================================================================
    xpack:
      # Security configuration
      security:
        enabled: true
        encryptionKey: "${XPACK_SECURITY_ENCRYPTION_KEY}"
        sessionTimeout: "8h"
        cookieName: "veridis-kibana-session"
        sameSiteCookies: "Strict"
        secureCookies: true

        # Authentication providers
        authc:
          providers:
            basic:
              basic1:
                order: 0
                enabled: true
                showLoginForm: true
                hint: "Veridis Identity Protocol Login"

        # Role mapping
        roleMapping:
          enabled: true

        # Audit logging
        audit:
          enabled: true
          appender:
            type: "file"
            fileName: "/usr/share/kibana/logs/kibana-audit.log"
            layout:
              type: "json"
            policy:
              type: "size-limit"
              size: "50mb"
            strategy:
              type: "numeric"
              max: 10

      # Monitoring configuration
      monitoring:
        enabled: true
        collection:
          enabled: false  # Use Metricbeat instead
        ui:
          container:
            elasticsearch:
              enabled: true
              logFetchCount: 10
            logstash:
              enabled: true

        # Cluster monitoring
        cluster_uuid: "${ELASTICSEARCH_CLUSTER_UUID}"

      # Reporting configuration
      reporting:
        enabled: true
        encryptionKey: "${XPACK_REPORTING_ENCRYPTION_KEY}"

        # Capture settings
        capture:
          browser:
            chromium:
              disableSandbox: true
              proxy:
                enabled: false

          # Network policy
          networkPolicy:
            enabled: false

        # Export settings
        csv:
          maxSizeBytes: 10485760  # 10MB
          scroll:
            duration: "30s"
            size: 500

        # Queue settings
        queue:
          indexInterval: "5s"
          pollEnabled: true
          pollInterval: "3s"
          timeout: "120s"

        # Roles
        roles:
          enabled: true
          allow: ["superuser", "kibana_admin", "reporting_user"]

      # Alerting configuration
      alerting:
        enabled: true
        healthCheck:
          interval: "60s"

        # Rules
        rules:
          minimumScheduleInterval: "1m"
          run:
            timeout: "5m"
            actions:
              max: 1000
              connectors:
                max: 1000

        # Invalidate API keys
        invalidateApiKeysTask:
          interval: "24h"
          removalDelay: "1h"

      # Actions configuration
      actions:
        enabled: true
        allowedHosts: ["*"]
        enabledActionTypes: ["*"]

        # Preconfigured connectors
        preconfigured:
          veridis-email:
            actionTypeId: ".email"
            name: "Veridis Email Notifications"
            config:
              service: "smtp"
              host: "smtp.veridis.xyz"
              port: 587
              secure: false
              hasAuth: true
            secrets:
              user: "${EMAIL_USER}"
              password: "${EMAIL_PASSWORD}"

          veridis-slack:
            actionTypeId: ".slack"
            name: "Veridis Slack Notifications"
            secrets:
              webhookUrl: "${SLACK_WEBHOOK_URL}"

      # Canvas configuration
      canvas:
        enabled: true

      # Graph configuration
      graph:
        enabled: true
        canEditDrillDownUrls: true
        savePolicy: "configAndDataWithConsent"

      # Machine Learning configuration
      ml:
        enabled: true

      # APM configuration
      apm:
        enabled: true
        ui:
          enabled: true
          transactionGroupBucketSize: 1000
          maxTraceItems: 1000

      # Maps configuration
      maps:
        enabled: true
        includeElasticMapsService: true
        proxyElasticMapsServiceInMaps: false
        tilemap:
          options:
            attribution: "© Elastic Maps Service"
        regionmap:
          includeElasticMapsService: true
          layers: []

      # Lens configuration
      lens:
        enabled: true

    # ==============================================================================
    # Data Views and Index Patterns
    # ==============================================================================
    data:
      # Search settings
      search:
        timeout: "30s"
        sessions:
          enabled: true

      # Autocomplete
      autocomplete:
        valueSuggestions:
          enabled: true
          method: "terms_enum"
          timeout: "1s"
          tiers: ["data_content", "data_hot", "data_warm"]

    # ==============================================================================
    # Visualization and Dashboard Configuration
    # ==============================================================================
    # Dashboard configuration
    dashboard:
      defaultTimeRange:
        from: "now-24h"
        to: "now"

    # Visualization limits
    visualization:
      maxBuckets: 10000

    # Discover configuration
    discover:
      maxDocFieldsDisplayed: 50
      sampleSize: 500

    # Timeline configuration
    timeline:
      enabled: true
      ui:
        enabled: true

    # ==============================================================================
    # Advanced Configuration
    # ==============================================================================
    # Console configuration
    console:
      enabled: true
      ui:
        enabled: true

    # Dev Tools configuration
    devTools:
      enabled: true

    # Newsfeed configuration
    newsfeed:
      enabled: false

    # Telemetry configuration
    telemetry:
      enabled: false
      optIn: false
      allowChangingOptInStatus: false

    # Usage collection
    usageCollection:
      enabled: false

    # Saved objects configuration
    savedObjects:
      maxImportPayloadBytes: 10485760  # 10MB
      maxImportExportSize: 10000

    # Status page configuration
    status:
      allowAnonymous: false

    # Server configuration
    server:
      # UUID for cluster identification
      uuid: "${KIBANA_SERVER_UUID}"

      # Custom headers
      customResponseHeaders:
        X-Kibana-Version: "8.15.0"
        X-Veridis-Environment: "production"
        X-Veridis-Component: "kibana"

    # ==============================================================================
    # Performance and Optimization Configuration
    # ==============================================================================
    # Memory and performance settings
    csp:
      rules:
        - "script-src 'self' 'unsafe-eval' 'unsafe-inline'"
        - "worker-src blob:"
        - "child-src blob:"
        - "img-src 'self' data: https:"
        - "font-src 'self'"

    # Interpreter configuration
    interpreter:
      enabledFunctions: ["*"]

    # Path configuration
    path:
      data: "/usr/share/kibana/data"

    # PID file
    pid:
      file: "/usr/share/kibana/kibana.pid"
      exclusive: false

    # ==============================================================================
    # Environment-Specific Configuration
    # ==============================================================================
    # Environment settings
    environment: "production"

    # Performance settings
    ops:
      interval: 5000

    # Optimize configuration
    optimize:
      enabled: true

    # i18n configuration
    i18n:
      locale: "en"

  # ==============================================================================
  # Advanced Kibana Configuration (advanced-settings.json)
  # ==============================================================================
  advanced-settings.json: |
    {
      "dateFormat": "MMM D, YYYY @ HH:mm:ss.SSS",
      "dateFormat:tz": "UTC",
      "dateFormat:scaled": [
        ["", "HH:mm:ss.SSS"],
        ["PT1S", "HH:mm:ss"],
        ["PT1M", "HH:mm"],
        ["PT1H", "YYYY-MM-DD HH:mm"],
        ["P1DT", "YYYY-MM-DD"],
        ["P1YT", "YYYY"]
      ],
      "defaultIndex": "veridis-*",
      "defaultRoute": "/app/discover",
      "doc_table:highlight": true,
      "doc_table:highlight:all_fields": false,
      "filters:pinnedByDefault": false,
      "format:defaultTypeMap": {
        "ip": { "id": "ip", "params": {} },
        "date": { "id": "date", "params": {} },
        "number": { "id": "number", "params": {} },
        "boolean": { "id": "boolean", "params": {} },
        "_source": { "id": "_source", "params": {} },
        "_default_": { "id": "string", "params": {} }
      },
      "format:number:defaultPattern": "0,0.[000]",
      "histogram:barTarget": 50,
      "histogram:maxBars": 100,
      "history:limit": 10,
      "indexPattern:placeholder": "veridis-*",
      "metaFields": ["_source", "_id", "_type", "_index", "_score"],
      "query:allowLeadingWildcards": true,
      "query:queryString:options": {
        "analyze_wildcard": true,
        "default_field": "*"
      },
      "search:timeout": 600000,
      "sort:options": ["score", "desc"],
      "state:storeInSessionStorage": false,
      "timepicker:quickRanges": [
        {
          "from": "now/d",
          "to": "now/d",
          "display": "Today"
        },
        {
          "from": "now-1d/d",
          "to": "now-1d/d",
          "display": "Yesterday"
        },
        {
          "from": "now-7d/d",
          "to": "now/d",
          "display": "Last 7 days"
        },
        {
          "from": "now-30d/d",
          "to": "now/d",
          "display": "Last 30 days"
        },
        {
          "from": "now-90d/d",
          "to": "now/d",
          "display": "Last 90 days"
        },
        {
          "from": "now-1y/d",
          "to": "now/d",
          "display": "Last 1 year"
        }
      ],
      "timepicker:refreshIntervalDefaults": {
        "pause": false,
        "value": 30000
      },
      "timepicker:timeDefaults": {
        "from": "now-24h",
        "to": "now"
      },
      "truncate:maxHeight": 115,
      "discover:searchFieldsFromSource": false,
      "discover:searchOnPageLoad": true,
      "discover:sampleSize": 500,
      "doc_table:hideTimeColumn": false,
      "discover:sort:defaultOrder": "desc",
      "context:defaultSize": 5,
      "context:step": 5,
      "context:tieBreakerFields": ["_doc"],
      "discover:maxDocFieldsDisplayed": 50
    }

  # ==============================================================================
  # Index Patterns Configuration (index-patterns.json)
  # ==============================================================================
  index-patterns.json: |
    [
      {
        "id": "veridis-logs-*",
        "title": "veridis-logs-*",
        "timeFieldName": "@timestamp",
        "fields": "[{\"name\":\"@timestamp\",\"type\":\"date\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"level\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"message\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":false},{\"name\":\"service\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"environment\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"host\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"kubernetes.pod_name\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"kubernetes.namespace_name\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true}]",
        "sourceFilters": "[]",
        "fieldFormatMap": "{\"@timestamp\":{\"id\":\"date\",\"params\":{\"pattern\":\"YYYY-MM-DD HH:mm:ss.SSS\"}}}"
      },
      {
        "id": "veridis-backend-*",
        "title": "veridis-backend-*",
        "timeFieldName": "@timestamp",
        "fields": "[{\"name\":\"@timestamp\",\"type\":\"date\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"level\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"message\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":false},{\"name\":\"service\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"trace_id\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"span_id\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"user_id\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"request_id\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true}]",
        "sourceFilters": "[]",
        "fieldFormatMap": "{\"@timestamp\":{\"id\":\"date\",\"params\":{\"pattern\":\"YYYY-MM-DD HH:mm:ss.SSS\"}}}"
      },
      {
        "id": "veridis-zk-circuits-*",
        "title": "veridis-zk-circuits-*",
        "timeFieldName": "@timestamp",
        "fields": "[{\"name\":\"@timestamp\",\"type\":\"date\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"level\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"message\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":false},{\"name\":\"service\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"circuit_type\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"proof_generation_time\",\"type\":\"number\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"gpu_utilization\",\"type\":\"number\",\"searchable\":true,\"aggregatable\":true}]",
        "sourceFilters": "[]",
        "fieldFormatMap": "{\"@timestamp\":{\"id\":\"date\",\"params\":{\"pattern\":\"YYYY-MM-DD HH:mm:ss.SSS\"}},\"proof_generation_time\":{\"id\":\"duration\",\"params\":{\"inputFormat\":\"milliseconds\",\"outputFormat\":\"humanizePrecise\"}},\"gpu_utilization\":{\"id\":\"percent\",\"params\":{\"pattern\":\"0.0%\"}}}"
      },
      {
        "id": "veridis-infrastructure-*",
        "title": "veridis-infrastructure-*",
        "timeFieldName": "@timestamp",
        "fields": "[{\"name\":\"@timestamp\",\"type\":\"date\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"level\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"message\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":false},{\"name\":\"component\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"kubernetes.pod_name\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true},{\"name\":\"kubernetes.container_name\",\"type\":\"string\",\"searchable\":true,\"aggregatable\":true}]",
        "sourceFilters": "[]",
        "fieldFormatMap": "{\"@timestamp\":{\"id\":\"date\",\"params\":{\"pattern\":\"YYYY-MM-DD HH:mm:ss.SSS\"}}}"
      }
    ]

  # ==============================================================================
  # Dashboard Templates Configuration (dashboard-templates.json)
  # ==============================================================================
  dashboard-templates.json: |
    {
      "veridis-system-overview": {
        "title": "Veridis System Overview",
        "description": "Comprehensive system overview dashboard for Veridis Protocol",
        "panelsJSON": "[{\"version\":\"8.15.0\",\"gridData\":{\"x\":0,\"y\":0,\"w\":24,\"h\":15,\"i\":\"1\"},\"panelIndex\":\"1\",\"embeddableConfig\":{},\"panelRefName\":\"panel_1\"}]",
        "optionsJSON": "{\"useMargins\":true,\"syncColors\":false,\"hidePanelTitles\":false}",
        "uiStateJSON": "{}",
        "timeRestore": false,
        "timeTo": "now",
        "timeFrom": "now-24h",
        "refreshInterval": {
          "pause": false,
          "value": 30000
        },
        "kibanaSavedObjectMeta": {
          "searchSourceJSON": "{\"query\":{\"match_all\":{}},\"filter\":[]}"
        }
      },
      "veridis-backend-performance": {
        "title": "Veridis Backend Performance",
        "description": "Backend service performance monitoring dashboard",
        "panelsJSON": "[{\"version\":\"8.15.0\",\"gridData\":{\"x\":0,\"y\":0,\"w\":24,\"h\":15,\"i\":\"1\"},\"panelIndex\":\"1\",\"embeddableConfig\":{},\"panelRefName\":\"panel_1\"}]",
        "optionsJSON": "{\"useMargins\":true,\"syncColors\":false,\"hidePanelTitles\":false}",
        "uiStateJSON": "{}",
        "timeRestore": false,
        "timeTo": "now",
        "timeFrom": "now-24h",
        "refreshInterval": {
          "pause": false,
          "value": 30000
        }
      },
      "veridis-zk-circuits-monitoring": {
        "title": "Veridis ZK Circuits Monitoring",
        "description": "Zero-knowledge circuits performance and GPU utilization monitoring",
        "panelsJSON": "[{\"version\":\"8.15.0\",\"gridData\":{\"x\":0,\"y\":0,\"w\":24,\"h\":15,\"i\":\"1\"},\"panelIndex\":\"1\",\"embeddableConfig\":{},\"panelRefName\":\"panel_1\"}]",
        "optionsJSON": "{\"useMargins\":true,\"syncColors\":false,\"hidePanelTitles\":false}",
        "uiStateJSON": "{}",
        "timeRestore": false,
        "timeTo": "now",
        "timeFrom": "now-4h",
        "refreshInterval": {
          "pause": false,
          "value": 15000
        }
      }
    }

  # ==============================================================================
  # Visualization Templates Configuration (visualizations.json)
  # ==============================================================================
  visualizations.json: |
    {
      "veridis-log-level-distribution": {
        "title": "Log Level Distribution",
        "visState": "{\"title\":\"Log Level Distribution\",\"type\":\"pie\",\"params\":{\"addTooltip\":true,\"addLegend\":true,\"legendPosition\":\"right\",\"isDonut\":true},\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"schema\":\"metric\",\"params\":{}},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"schema\":\"segment\",\"params\":{\"field\":\"level.keyword\",\"size\":10,\"order\":\"desc\",\"orderBy\":\"1\"}}]}",
        "uiStateJSON": "{}",
        "description": "Distribution of log levels across all services",
        "version": 1,
        "kibanaSavedObjectMeta": {
          "searchSourceJSON": "{\"index\":\"veridis-logs-*\",\"query\":{\"match_all\":{}},\"filter\":[]}"
        }
      },
      "veridis-service-requests-over-time": {
        "title": "Service Requests Over Time",
        "visState": "{\"title\":\"Service Requests Over Time\",\"type\":\"line\",\"params\":{\"grid\":{\"categoryLines\":false,\"style\":{\"color\":\"#eee\"}},\"categoryAxes\":[{\"id\":\"CategoryAxis-1\",\"type\":\"category\",\"position\":\"bottom\",\"show\":true,\"style\":{},\"scale\":{\"type\":\"linear\"},\"labels\":{\"show\":true,\"truncate\":100},\"title\":{}}],\"valueAxes\":[{\"id\":\"ValueAxis-1\",\"name\":\"LeftAxis-1\",\"type\":\"value\",\"position\":\"left\",\"show\":true,\"style\":{},\"scale\":{\"type\":\"linear\",\"mode\":\"normal\"},\"labels\":{\"show\":true,\"rotate\":0,\"filter\":false,\"truncate\":100},\"title\":{\"text\":\"Count\"}}],\"seriesParams\":[{\"show\":\"true\",\"type\":\"line\",\"mode\":\"normal\",\"data\":{\"label\":\"Count\",\"id\":\"1\"},\"valueAxis\":\"ValueAxis-1\",\"drawLinesBetweenPoints\":true,\"showCircles\":true}],\"addTooltip\":true,\"addLegend\":true,\"legendPosition\":\"right\",\"times\":[],\"addTimeMarker\":false},\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"schema\":\"metric\",\"params\":{}},{\"id\":\"2\",\"enabled\":true,\"type\":\"date_histogram\",\"schema\":\"segment\",\"params\":{\"field\":\"@timestamp\",\"interval\":\"auto\",\"customInterval\":\"2h\",\"min_doc_count\":1,\"extended_bounds\":{}}}]}",
        "uiStateJSON": "{}",
        "description": "Timeline of service requests and activity",
        "version": 1,
        "kibanaSavedObjectMeta": {
          "searchSourceJSON": "{\"index\":\"veridis-backend-*\",\"query\":{\"match_all\":{}},\"filter\":[]}"
        }
      }
    }

  # ==============================================================================
  # Search Templates Configuration (searches.json)
  # ==============================================================================
  searches.json: |
    {
      "veridis-error-logs": {
        "title": "Veridis Error Logs",
        "description": "Search for error-level logs across all Veridis services",
        "hits": 0,
        "columns": ["@timestamp", "service", "level", "message"],
        "sort": ["@timestamp", "desc"],
        "version": 1,
        "kibanaSavedObjectMeta": {
          "searchSourceJSON": "{\"index\":\"veridis-logs-*\",\"highlightAll\":true,\"version\":true,\"query\":{\"match\":{\"level\":\"ERROR\"}},\"filter\":[]}"
        }
      },
      "veridis-high-latency-requests": {
        "title": "High Latency Requests",
        "description": "Requests with response time > 1000ms",
        "hits": 0,
        "columns": ["@timestamp", "service", "request_id", "response_time", "endpoint"],
        "sort": ["response_time", "desc"],
        "version": 1,
        "kibanaSavedObjectMeta": {
          "searchSourceJSON": "{\"index\":\"veridis-backend-*\",\"highlightAll\":true,\"version\":true,\"query\":{\"range\":{\"response_time\":{\"gte\":1000}}},\"filter\":[]}"
        }
      },
      "veridis-zk-proof-failures": {
        "title": "ZK Proof Generation Failures",
        "description": "Failed zero-knowledge proof generation attempts",
        "hits": 0,
        "columns": ["@timestamp", "circuit_type", "error_message", "gpu_utilization"],
        "sort": ["@timestamp", "desc"],
        "version": 1,
        "kibanaSavedObjectMeta": {
          "searchSourceJSON": "{\"index\":\"veridis-zk-circuits-*\",\"highlightAll\":true,\"version\":true,\"query\":{\"bool\":{\"must\":[{\"match\":{\"level\":\"ERROR\"}},{\"match\":{\"message\":\"proof generation failed\"}}]}},\"filter\":[]}"
        }
      }
    }

---
# ==============================================================================
# Veridis Kibana Development ConfigMap - Development Environment
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: veridis-kibana-dev-config
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: veridis-development
    app.kubernetes.io/version: "8.15.0"
    app.kubernetes.io/component: kibana-dev-configmap
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    kibana.veridis.xyz/type: log-kibana-dev-configmap
    kibana.veridis.xyz/category: observability-dev-configmap
    kibana.veridis.xyz/role: development-configmap

    # Development labels
    development.veridis.xyz/type: "kibana-dev"
    development.veridis.xyz/debugging: "enabled"
    development.veridis.xyz/security-relaxed: "true"
    development.veridis.xyz/monitoring: "basic"

    veridis.xyz/environment: development
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Development environment Kibana configuration with relaxed security"
    veridis.xyz/purpose: "Provides Kibana configuration for development workflows and testing"

    # Development specific annotations
    development.veridis.xyz/debug-enabled: "true"
    development.veridis.xyz/cors-enabled: "true"
    development.veridis.xyz/security-relaxed: "true"
    development.veridis.xyz/logging-verbose: "true"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "development-environment-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/observability/kibana-configmap-development"

# ==============================================================================
# Development Configuration Data
# ==============================================================================
data:
  kibana.yml: |
    # Veridis Development Kibana Configuration
    server:
      host: "0.0.0.0"
      port: 5601
      name: "veridis-kibana-development"
      publicBaseUrl: "http://localhost:5601"

      # Relaxed CORS for development
      cors:
        enabled: true
        allowCredentials: true
        allowOrigin: ["http://localhost:3000", "http://localhost:8080"]

      # Development headers
      customResponseHeaders:
        X-Veridis-Environment: "development"
        X-Development-Mode: "enabled"

    # Elasticsearch configuration (relaxed for development)
    elasticsearch:
      hosts: ["http://veridis-elasticsearch-dev.veridis-infrastructure.svc.cluster.local:9200"]
      username: "elastic"
      password: "${ELASTICSEARCH_PASSWORD}"
      ssl:
        enabled: false

    # Relaxed security for development
    xpack:
      security:
        enabled: false
      monitoring:
        enabled: false
      reporting:
        enabled: false
      alerting:
        enabled: false

    # Verbose logging for development
    logging:
      root:
        level: "debug"
      loggers:
        - name: "elasticsearch"
          level: "debug"
        - name: "plugins"
          level: "debug"

    # Development optimizations
    kibana:
      index: ".kibana-veridis-dev"

    # Development features
    newsfeed:
      enabled: false
    telemetry:
      enabled: false

---
# ==============================================================================
# Veridis Kibana Staging ConfigMap - Staging Environment
# ==============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: veridis-kibana-staging-config
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: veridis-staging
    app.kubernetes.io/version: "8.15.0"
    app.kubernetes.io/component: kibana-staging-configmap
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    kibana.veridis.xyz/type: log-kibana-staging-configmap
    kibana.veridis.xyz/category: observability-staging-configmap
    kibana.veridis.xyz/role: staging-configmap

    # Staging labels
    staging.veridis.xyz/type: "kibana-staging"
    staging.veridis.xyz/production-like: "true"
    staging.veridis.xyz/validation: "enabled"
    staging.veridis.xyz/monitoring: "enhanced"

    veridis.xyz/environment: staging
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Staging environment Kibana configuration for pre-production validation"
    veridis.xyz/purpose: "Provides production-like Kibana configuration for staging validation"

    # Staging specific annotations
    staging.veridis.xyz/production-like: "true"
    staging.veridis.xyz/security-enhanced: "true"
    staging.veridis.xyz/monitoring-enabled: "true"
    staging.veridis.xyz/validation-testing: "enabled"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "staging-environment-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/observability/kibana-configmap-staging"

# ==============================================================================
# Staging Configuration Data
# ==============================================================================
data:
  kibana.yml: |
    # Veridis Staging Kibana Configuration (Production-like)
    server:
      host: "0.0.0.0"
      port: 5601
      name: "veridis-kibana-staging"
      publicBaseUrl: "https://kibana-staging.veridis.xyz"

      # Production-like headers
      customResponseHeaders:
        X-Frame-Options: "DENY"
        X-Content-Type-Options: "nosniff"
        X-XSS-Protection: "1; mode=block"
        X-Veridis-Environment: "staging"

    # Elasticsearch configuration with SSL
    elasticsearch:
      hosts: ["https://veridis-elasticsearch-staging.veridis-infrastructure.svc.cluster.local:9200"]
      username: "kibana_system"
      password: "${ELASTICSEARCH_PASSWORD}"
      ssl:
        enabled: true
        verificationMode: "certificate"
        certificateAuthorities: ["/usr/share/kibana/config/certs/ca.crt"]

    # Production-like security
    xpack:
      security:
        enabled: true
        encryptionKey: "${XPACK_SECURITY_ENCRYPTION_KEY}"
        sessionTimeout: "4h"  # Shorter for staging
      monitoring:
        enabled: true
      reporting:
        enabled: true
        encryptionKey: "${XPACK_REPORTING_ENCRYPTION_KEY}"
      alerting:
        enabled: true

    # Enhanced logging for staging
    logging:
      root:
        level: "info"
      loggers:
        - name: "http.server.response"
          level: "info"  # More verbose than production
        - name: "plugins.security"
          level: "info"

    # Staging index
    kibana:
      index: ".kibana-veridis-staging"

    # Disabled features for staging
    newsfeed:
      enabled: false
    telemetry:
      enabled: false

# ==============================================================================
# Veridis Kibana ConfigMap Summary and Enterprise Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS KIBANA CONFIGMAP STRATEGY:
# ===============================================
#
# VERIDIS KIBANA CONFIGMAP ARCHITECTURE OVERVIEW:
# -----------------------------------------------
# 1. Primary Production ConfigMap (veridis-kibana-config):
#    - Comprehensive enterprise-grade configmap with intelligent log visualization configuration and advanced performance optimization for production Kibana
#    - Advanced configmap configuration with comprehensive security, X-Pack features, monitoring integration, and comprehensive observability integration
#    - Multi-tier configmap architecture with enterprise settings, performance optimization, security enforcement, and comprehensive operational excellence
#    - Enterprise configmap policies with security enforcement, compliance controls, dashboard configuration, and comprehensive disaster recovery procedures
#    - Performance optimization with intelligent configuration management, resource tuning, security optimization, and efficiency for maximum performance
#
# 2. Development ConfigMap (veridis-kibana-dev-config):
#    - Development-focused configmap with relaxed security and comprehensive development coordination
#    - Advanced dev configuration with debugging support, CORS enablement, verbose logging, and comprehensive development intelligence
#    - Flexible configmap optimization with development workflow, testing support, and comprehensive development intelligence
#    - Development intelligence with debugging procedures, testing support, development automation, and comprehensive development coordination
#    - Operational excellence with development configmap, testing workflows, debugging automation, and comprehensive development environment management
#
# 3. Staging ConfigMap (veridis-kibana-staging-config):
#    - Staging-focused configmap with production-like behavior and comprehensive staging coordination
#    - Advanced staging configuration with security enforcement, monitoring enablement, validation support, and comprehensive staging intelligence
#    - Flexible configmap optimization with staging workflow, validation support, and comprehensive staging intelligence
#    - Staging intelligence with validation procedures, testing support, production simulation, and comprehensive staging coordination
#    - Validation excellence with staging configmap, production testing, validation automation, and comprehensive staging environment management
#
# ENTERPRISE KIBANA CONFIGMAP FEATURES:
# =====================================
# Advanced Configuration Management and Template Integration:
#   - Multi-tier configmap architecture with production configuration, development debugging, staging validation, and comprehensive template configurations
#   - Intelligent configuration management with dashboard templates, index patterns, visualization templates, and comprehensive configuration decisions
#   - ConfigMap discovery with template optimization, pattern management, configuration policies, and comprehensive configmap analytics
#   - Performance management with configuration tuning, template optimization, pattern efficiency, and comprehensive performance intelligence
#   - Configuration processing tuning with template management, pattern optimization, dashboard algorithms, and intelligent configmap optimization
#
# Comprehensive Security and X-Pack Integration:
#   - Multi-tier security with X-Pack security, authentication enforcement, encryption management, and comprehensive security coordination
#   - Security optimization with session management, audit logging, access controls, and comprehensive security intelligence
#   - Authentication management with provider configuration, role mapping, session handling, and comprehensive authentication coordination
#   - Business intelligence with security analytics, access correlation, usage optimization, and comprehensive strategic insights
#   - Security management with authentication policies, session optimization, access integration, and comprehensive security analytics
#
# Enterprise Performance and Resource Configuration:
#   - Multi-tier performance with memory optimization, connection tuning, resource management, and comprehensive performance coordination
#   - Performance optimization with server configuration, Elasticsearch connectivity, dashboard performance, and comprehensive performance intelligence
#   - Resource management with connection pooling, timeout optimization, caching strategies, and comprehensive resource coordination
#   - Business intelligence with performance analytics, resource correlation, efficiency optimization, and comprehensive strategic insights
#   - Tuning management with configuration optimization, performance monitoring, resource allocation, and comprehensive tuning analytics
#
# Advanced Dashboard and Visualization Templates:
#   - Multi-tier templates with dashboard templates, index patterns, visualization templates, and comprehensive template coordination
#   - Template optimization with dashboard design, visualization patterns, search templates, and comprehensive template intelligence
#   - Dashboard management with template libraries, pattern collections, visualization catalogs, and comprehensive dashboard coordination
#   - Business intelligence with template analytics, usage correlation, dashboard optimization, and comprehensive strategic insights
#   - Template management with dashboard policies, visualization optimization, pattern management, and comprehensive template analytics
#
# OPERATIONAL EXCELLENCE:
# ======================
# Kibana ConfigMap Lifecycle Management:
#   - Multi-ConfigMap deployment with production configuration, development debugging, staging validation, and comprehensive configmap coordination
#   - Intelligent configmap management with predictive analytics and configuration utilization correlation
#   - Advanced monitoring with comprehensive configmap analytics and configuration business intelligence
#   - Configuration validation with configmap schema enforcement and configuration deployment safety checks
#   - Automated optimization with configmap pattern analysis and configuration optimization recommendation engine
#
# Security Integration and Compliance:
#   - SOC 2 Type II configmap controls with comprehensive audit requirements and configuration logging
#   - GDPR configmap compliance with data protection and privacy-preserving configuration management
#   - ISO 27001 configmap security management with information security and configuration compliance integration
#   - NIST 800-190 container configmap security with configuration validation and compliance
#   - Zero-trust configmap architecture with comprehensive encryption and configuration authentication requirements
#
# Business Intelligence Integration:
#   - ConfigMap analytics with cost correlation and configuration resource utilization optimization
#   - Performance analytics with user experience optimization and configmap business intelligence
#   - Configuration intelligence with processing pattern monitoring and configmap optimization recommendations
#   - Strategic planning with capacity management and configmap forecasting
#   - Business impact assessment with configmap performance correlation and configuration tracking
#
# Developer Experience Excellence:
#   - Multi-environment configmap support with production configuration, development debugging, staging validation, and comprehensive configmap coordination
#   - Comprehensive documentation with configmap guides and configuration troubleshooting procedures
#   - Environment-specific configmaps with production, development, staging, and template support
#   - Testing integration with configmap development workflow and configuration debugging capabilities
#   - ConfigMap monitoring with comprehensive tracking and configuration correlation
#
# ==============================================================================
