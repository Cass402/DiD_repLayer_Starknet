# ==============================================================================
# Veridis Decentralized Identity Protocol - Fluent Bit ServiceAccount Configuration
# ==============================================================================
#
# This manifest defines comprehensive Fluent Bit ServiceAccount for the
# decentralized identity protocol, providing:
#
# ENTERPRISE VERIDIS FLUENT BIT SERVICEACCOUNT ARCHITECTURE:
#   • Advanced Fluent Bit ServiceAccount with intelligent log authentication and performance-based optimization
#   • Multi-tier ServiceAccount architecture with development, testing, staging, and production environments
#   • Comprehensive observability framework with ServiceAccount policies, log optimization, Fluent Bit integration
#   • Advanced lifecycle management with automated ServiceAccount optimization, Fluent Bit control, and log enhancement
#   • Enterprise-grade intelligence with comprehensive analytics and Fluent Bit ServiceAccount performance insights
#
# VERIDIS FLUENT BIT SERVICEACCOUNT OPTIMIZATION:
#   • High-performance ServiceAccount with intelligent log authentication and Fluent Bit serviceaccount optimization
#   • Intelligent ServiceAccount log authentication with responsive policies and performance-based log decisions
#   • Advanced ServiceAccount management with business intelligence and log-based Fluent Bit control
#   • Comprehensive observability control with intelligent Fluent Bit ServiceAccount management and log enhancement
#   • Enterprise acceleration with predictive Fluent Bit ServiceAccount management and log optimization
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II Fluent Bit ServiceAccount controls with comprehensive audit and log requirements
#   • GDPR Fluent Bit ServiceAccount compliance with data protection, privacy controls, and log management
#   • ISO 27001 Fluent Bit ServiceAccount management with comprehensive framework integration
#   • NIST 800-190 container Fluent Bit ServiceAccount security with log-specific validation and compliance
#   • Zero-knowledge protocol compliance with regulatory frameworks and Fluent Bit ServiceAccount best practices
#
# ENTERPRISE OPERATIONAL EXCELLENCE:
#   • Intelligent Fluent Bit ServiceAccount lifecycle management with automated provisioning and log optimization
#   • Predictive log analytics with capacity planning and Fluent Bit ServiceAccount intelligence
#   • Advanced ServiceAccount integration with Fluent Bit log analytics and performance business intelligence
#   • Comprehensive observability control with Fluent Bit ServiceAccount preservation and log optimization
#   • Business continuity Fluent Bit ServiceAccount with log guarantees and performance optimization
#
# FLUENT BIT SERVICEACCOUNT ACCELERATION INTELLIGENCE:
#   • Fluent Bit ServiceAccount usage analytics with log patterns and optimization recommendations
#   • ServiceAccount monitoring with Fluent Bit log latency and management optimization intelligence
#   • Development efficiency with Fluent Bit ServiceAccount analytics and deployment optimization procedures
#   • Cost optimization with Fluent Bit ServiceAccount utilization analysis and log capacity planning procedures
#   • Quality assurance with Fluent Bit ServiceAccount metrics and observability validation procedures
#
# ==============================================================================

# ==============================================================================
# Veridis Fluent Bit ServiceAccount - Primary Authentication Configuration
# ==============================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: veridis-fluent-bit
  namespace: veridis-infrastructure

  # Core Veridis Fluent Bit ServiceAccount identification labels
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-serviceaccount
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Fluent Bit ServiceAccount specific classification
    fluentbit.veridis.xyz/type: log-fluentbit-serviceaccount
    fluentbit.veridis.xyz/category: observability-serviceaccount
    fluentbit.veridis.xyz/role: primary-fluentbit-serviceaccount
    fluentbit.veridis.xyz/serviceaccount-class: high-performance-fluentbit-serviceaccount
    fluentbit.veridis.xyz/security-level: enterprise

    # ServiceAccount Fluent Bit ServiceAccount classification
    serviceaccount.veridis.xyz/fluentbit-serviceaccount-type: intelligent-fluentbit-serviceaccount
    serviceaccount.veridis.xyz/serviceaccount-type: log-serviceaccount
    serviceaccount.veridis.xyz/performance-tier: high-throughput
    serviceaccount.veridis.xyz/optimization: enabled
    serviceaccount.veridis.xyz/features: full-fluentbit-serviceaccount-stack

    # Observability Fluent Bit ServiceAccount classification
    observability.veridis.xyz/tier: production
    observability.veridis.xyz/optimization: intelligent-fluentbit-serviceaccount-management
    observability.veridis.xyz/log-management: advanced
    observability.veridis.xyz/performance-optimization: enabled
    observability.veridis.xyz/efficiency: maximum

    # Business Fluent Bit ServiceAccount classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/impact: high-fluentbit-serviceaccount-performance
    business.veridis.xyz/cost-tier: production
    business.veridis.xyz/sla-tier: enterprise
    business.veridis.xyz/availability-requirement: 99.9

    # Operational Fluent Bit ServiceAccount labels
    veridis.xyz/environment: production
    veridis.xyz/team: observability-engineering
    veridis.xyz/cost-center: observability-infrastructure
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "fluentbit-serviceaccount-control-framework"
    compliance.veridis.xyz/gdpr: "fluentbit-serviceaccount-data-protection"
    compliance.veridis.xyz/iso27001: "fluentbit-serviceaccount-security-management"
    compliance.veridis.xyz/nist-800-190: "fluentbit-serviceaccount-container-security"
    governance.veridis.xyz/policy-enforcement: "enterprise"

    # Fluent Bit ServiceAccount analytics and intelligence
    monitoring.veridis.xyz/fluentbit-serviceaccount-monitoring: "enabled"
    monitoring.veridis.xyz/performance-monitoring: "comprehensive"
    monitoring.veridis.xyz/log-monitoring: "enabled"
    monitoring.veridis.xyz/business-monitoring: "enabled"
    monitoring.veridis.xyz/compliance-monitoring: "enabled"

    # Authentication labels
    auth.veridis.xyz/type: "service-account"
    auth.veridis.xyz/scope: "cluster-read"
    auth.veridis.xyz/permission-level: "minimal"
    auth.veridis.xyz/token-automount: "true"
    auth.veridis.xyz/rbac-enabled: "true"

    # RBAC labels
    rbac.veridis.xyz/cluster-access: "read-only"
    rbac.veridis.xyz/namespace-access: "limited"
    rbac.veridis.xyz/resource-access: "logs-only"
    rbac.veridis.xyz/api-groups: "core,apps"
    rbac.veridis.xyz/verbs: "get,list,watch"

    # Security labels
    security.veridis.xyz/context: "observability"
    security.veridis.xyz/privilege-level: "minimal"
    security.veridis.xyz/token-expiry: "1h"
    security.veridis.xyz/token-rotation: "enabled"
    security.veridis.xyz/audit-logging: "enabled"

    # Performance labels
    performance.veridis.xyz/throughput-tier: "high"
    performance.veridis.xyz/latency-tier: "low"
    performance.veridis.xyz/concurrency-tier: "high"
    performance.veridis.xyz/optimization-enabled: "true"
    performance.veridis.xyz/caching-enabled: "true"

  annotations:
    # Fluent Bit ServiceAccount purpose and specifications
    veridis.xyz/description: "Enterprise Veridis Fluent Bit ServiceAccount with intelligent log authentication, advanced performance optimization, and comprehensive observability optimization"
    veridis.xyz/purpose: "Provides comprehensive Fluent Bit ServiceAccount for decentralized identity management with intelligent log authentication, performance optimization, and observability guarantees"
    veridis.xyz/scope: "Fluent Bit ServiceAccount including log authentication, performance optimization, RBAC integration, and comprehensive monitoring intelligence"

    # Fluent Bit ServiceAccount architecture and design
    fluentbit.veridis.xyz/architecture: "Enterprise Fluent Bit ServiceAccount with intelligent log authentication, advanced performance optimization, and RBAC integration optimization"
    fluentbit.veridis.xyz/design-pattern: "Multi-tier Fluent Bit ServiceAccount with performance optimization, cost efficiency, and business intelligence"
    fluentbit.veridis.xyz/optimization-model: "Intelligent Fluent Bit ServiceAccount with predictive analytics, performance optimization, and log efficiency"
    fluentbit.veridis.xyz/performance-model: "High-performance Fluent Bit ServiceAccount with log optimization and intelligent RBAC management"

    # ServiceAccount Fluent Bit ServiceAccount specifications
    serviceaccount.veridis.xyz/fluentbit-serviceaccount-specification: "Fluent Bit ServiceAccount with performance optimization and intelligent fluentbit serviceaccount management"
    serviceaccount.veridis.xyz/log-specification: "Advanced log authentication management with fluentbit optimization and serviceaccount enhancement"
    serviceaccount.veridis.xyz/rbac-specification: "Fluent Bit ServiceAccount RBAC management optimization with intelligent log and enhancement"
    serviceaccount.veridis.xyz/performance-specification: "Fluent Bit performance serviceaccount with log acceleration and efficiency"
    serviceaccount.veridis.xyz/business-specification: "Fluent Bit business serviceaccount with cost optimization and strategic log intelligence"

    # Authentication specific annotations
    auth.veridis.xyz/token-type: "service-account-token"
    auth.veridis.xyz/audience: "kubernetes.default.svc"
    auth.veridis.xyz/issuer: "kubernetes.default.svc"
    auth.veridis.xyz/bound-service-account: "veridis-fluent-bit"
    auth.veridis.xyz/token-expiration: "3600s"

    # RBAC specific annotations
    rbac.veridis.xyz/cluster-role: "veridis-fluent-bit-cluster-role"
    rbac.veridis.xyz/role-binding: "veridis-fluent-bit-binding"
    rbac.veridis.xyz/permission-model: "least-privilege"
    rbac.veridis.xyz/access-scope: "cluster-wide-read"
    rbac.veridis.xyz/api-access: "kubernetes-api-read"

    # Security annotations
    security.veridis.xyz/token-automount: "true"
    security.veridis.xyz/token-projection: "enabled"
    security.veridis.xyz/token-rotation: "automatic"
    security.veridis.xyz/credential-rotation: "1h"
    security.veridis.xyz/access-logging: "enabled"

    # Kubernetes API access annotations
    kubernetes.veridis.xyz/api-access: "read-only"
    kubernetes.veridis.xyz/resource-access: "pods,nodes,namespaces"
    kubernetes.veridis.xyz/metadata-access: "labels,annotations"
    kubernetes.veridis.xyz/log-access: "container-logs"
    kubernetes.veridis.xyz/event-access: "read-only"

    # Performance annotations
    performance.veridis.xyz/expected-requests-per-second: "1000"
    performance.veridis.xyz/api-call-optimization: "enabled"
    performance.veridis.xyz/caching-strategy: "metadata-cache"
    performance.veridis.xyz/rate-limiting: "kubernetes-api"
    performance.veridis.xyz/connection-pooling: "enabled"

    # Monitoring annotations
    monitoring.veridis.xyz/serviceaccount-monitoring: "enabled"
    monitoring.veridis.xyz/authentication-monitoring: "enabled"
    monitoring.veridis.xyz/permission-monitoring: "enabled"
    monitoring.veridis.xyz/token-monitoring: "enabled"
    monitoring.veridis.xyz/usage-monitoring: "enabled"

    # Business annotations
    business.veridis.xyz/cost-center: "observability-infrastructure"
    business.veridis.xyz/budget-allocation: "production-logging"
    business.veridis.xyz/cost-optimization: "enabled"
    business.veridis.xyz/usage-tracking: "comprehensive"
    business.veridis.xyz/roi-tracking: "enabled"

    # Compliance annotations
    compliance.veridis.xyz/audit-required: "true"
    compliance.veridis.xyz/access-review: "quarterly"
    compliance.veridis.xyz/permission-audit: "enabled"
    compliance.veridis.xyz/token-audit: "enabled"
    compliance.veridis.xyz/usage-audit: "comprehensive"

    # Documentation and procedures
    veridis.xyz/owner: "observability-team@veridis.xyz"
    veridis.xyz/fluentbit-serviceaccount-admin: "observability-admin@veridis.xyz"
    veridis.xyz/escalation: "observability-manager@veridis.xyz"
    veridis.xyz/emergency-contact: "observability-oncall@veridis.xyz"

    # Documentation references
    veridis.xyz/documentation: "https://docs.veridis.xyz/observability/fluent-bit-serviceaccount"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/observability/fluent-bit-serviceaccount-management"
    veridis.xyz/serviceaccount-docs: "https://observability.veridis.xyz/fluent-bit-serviceaccount-guide"
    veridis.xyz/observability-docs: "https://observability.veridis.xyz/fluent-bit-serviceaccount-monitoring"

# ==============================================================================
# ServiceAccount Configuration
# ==============================================================================
automountServiceAccountToken: true

# ==============================================================================
# Image Pull Secrets
# ==============================================================================
imagePullSecrets:
  - name: veridis-registry-secret

# ==============================================================================
# Service Account Secrets (Projected Tokens)
# ==============================================================================
secrets:
  - name: veridis-fluent-bit-token

---
# ==============================================================================
# Veridis Fluent Bit ServiceAccount - Development Environment Configuration
# ==============================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: veridis-fluent-bit-dev
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-development
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-serviceaccount-dev
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    fluentbit.veridis.xyz/type: log-fluentbit-serviceaccount-dev
    fluentbit.veridis.xyz/category: observability-serviceaccount-dev
    fluentbit.veridis.xyz/role: development-fluentbit-serviceaccount

    serviceaccount.veridis.xyz/type: "development"
    serviceaccount.veridis.xyz/auth-level: "basic"
    serviceaccount.veridis.xyz/permission-tier: "relaxed"

    veridis.xyz/environment: development
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Development Fluent Bit ServiceAccount with relaxed permissions for testing environment"
    veridis.xyz/purpose: "Provides development Fluent Bit ServiceAccount for testing and development workflows"

    auth.veridis.xyz/token-type: "service-account-token"
    auth.veridis.xyz/token-expiration: "7200s"  # Longer expiration for dev
    rbac.veridis.xyz/permission-model: "development"
    rbac.veridis.xyz/access-scope: "namespace-limited"

    # Development specific annotations
    development.veridis.xyz/testing-enabled: "true"
    development.veridis.xyz/debug-permissions: "enabled"
    development.veridis.xyz/relaxed-security: "true"
    development.veridis.xyz/cost-optimized: "true"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "development-environment-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/observability/fluent-bit-serviceaccount-development"

automountServiceAccountToken: true

imagePullSecrets:
  - name: veridis-registry-secret

secrets:
  - name: veridis-fluent-bit-dev-token

---
# ==============================================================================
# Veridis Fluent Bit ServiceAccount - Staging Environment Configuration
# ==============================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: veridis-fluent-bit-staging
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-staging
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-serviceaccount-staging
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    fluentbit.veridis.xyz/type: log-fluentbit-serviceaccount-staging
    fluentbit.veridis.xyz/category: observability-serviceaccount-staging
    fluentbit.veridis.xyz/role: staging-fluentbit-serviceaccount

    serviceaccount.veridis.xyz/type: "staging"
    serviceaccount.veridis.xyz/auth-level: "enhanced"
    serviceaccount.veridis.xyz/permission-tier: "production-like"

    veridis.xyz/environment: staging
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Staging Fluent Bit ServiceAccount with production-like permissions for pre-production testing"
    veridis.xyz/purpose: "Provides staging Fluent Bit ServiceAccount for pre-production validation and testing"

    auth.veridis.xyz/token-type: "service-account-token"
    auth.veridis.xyz/token-expiration: "3600s"
    rbac.veridis.xyz/permission-model: "production-like"
    rbac.veridis.xyz/access-scope: "cluster-read"

    # Staging specific annotations
    staging.veridis.xyz/production-like: "true"
    staging.veridis.xyz/security-enhanced: "true"
    staging.veridis.xyz/monitoring-enhanced: "true"
    staging.veridis.xyz/compliance-validation: "enabled"

    # Conditional deployment annotation
    deployment.veridis.xyz/condition: "staging-environment-enabled"

    veridis.xyz/documentation: "https://docs.veridis.xyz/observability/fluent-bit-serviceaccount-staging"

automountServiceAccountToken: true

imagePullSecrets:
  - name: veridis-registry-secret

secrets:
  - name: veridis-fluent-bit-staging-token

---
# ==============================================================================
# Veridis Fluent Bit ServiceAccount Token - Projected Token Configuration
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-fluent-bit-token
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-token
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    fluentbit.veridis.xyz/type: log-fluentbit-token
    fluentbit.veridis.xyz/category: observability-token
    fluentbit.veridis.xyz/role: authentication-token

    token.veridis.xyz/type: "service-account-token"
    token.veridis.xyz/scope: "kubernetes-api"
    token.veridis.xyz/expiration: "1h"
    token.veridis.xyz/rotation: "automatic"

    veridis.xyz/environment: production
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Fluent Bit ServiceAccount token for Kubernetes API authentication"
    veridis.xyz/purpose: "Provides authentication token for Fluent Bit to access Kubernetes API"

    # Token specific annotations
    kubernetes.io/service-account.name: "veridis-fluent-bit"
    kubernetes.io/service-account.uid: ""  # Will be populated automatically

    # Security annotations
    security.veridis.xyz/token-type: "projected"
    security.veridis.xyz/audience: "kubernetes.default.svc"
    security.veridis.xyz/expiration-seconds: "3600"
    security.veridis.xyz/auto-rotation: "enabled"

    # Compliance annotations
    compliance.veridis.xyz/audit-required: "true"
    compliance.veridis.xyz/access-review: "monthly"
    compliance.veridis.xyz/token-audit: "enabled"

type: kubernetes.io/service-account-token

data:
  # Token data will be automatically populated by Kubernetes
  # when bound to the service account

---
# ==============================================================================
# Veridis Fluent Bit ServiceAccount Token - Development Environment
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-fluent-bit-dev-token
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-development
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-token-dev
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    fluentbit.veridis.xyz/type: log-fluentbit-token-dev
    fluentbit.veridis.xyz/category: observability-token-dev
    fluentbit.veridis.xyz/role: development-authentication-token

    token.veridis.xyz/type: "service-account-token-dev"
    token.veridis.xyz/scope: "kubernetes-api-dev"
    token.veridis.xyz/expiration: "2h"  # Longer for development
    token.veridis.xyz/rotation: "manual"

    veridis.xyz/environment: development
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Development Fluent Bit ServiceAccount token for testing environment"
    veridis.xyz/purpose: "Provides authentication token for development Fluent Bit testing"

    kubernetes.io/service-account.name: "veridis-fluent-bit-dev"
    security.veridis.xyz/expiration-seconds: "7200"  # 2 hours for dev

    # Development specific annotations
    development.veridis.xyz/testing-enabled: "true"
    development.veridis.xyz/debug-mode: "enabled"
    development.veridis.xyz/relaxed-security: "true"

type: kubernetes.io/service-account-token

---
# ==============================================================================
# Veridis Fluent Bit ServiceAccount Token - Staging Environment
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-fluent-bit-staging-token
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-staging
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-token-staging
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    fluentbit.veridis.xyz/type: log-fluentbit-token-staging
    fluentbit.veridis.xyz/category: observability-token-staging
    fluentbit.veridis.xyz/role: staging-authentication-token

    token.veridis.xyz/type: "service-account-token-staging"
    token.veridis.xyz/scope: "kubernetes-api-staging"
    token.veridis.xyz/expiration: "1h"
    token.veridis.xyz/rotation: "automatic"

    veridis.xyz/environment: staging
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Staging Fluent Bit ServiceAccount token for pre-production testing"
    veridis.xyz/purpose: "Provides authentication token for staging Fluent Bit validation"

    kubernetes.io/service-account.name: "veridis-fluent-bit-staging"
    security.veridis.xyz/expiration-seconds: "3600"

    # Staging specific annotations
    staging.veridis.xyz/production-like: "true"
    staging.veridis.xyz/security-enhanced: "true"
    staging.veridis.xyz/monitoring-enhanced: "true"

type: kubernetes.io/service-account-token

---
# ==============================================================================
# Veridis Fluent Bit ServiceAccount - Multi-Environment Token Projection
# ==============================================================================
apiVersion: v1
kind: Secret
metadata:
  name: veridis-fluent-bit-projected-token
  namespace: veridis-infrastructure

  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/component: fluent-bit-projected-token
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    fluentbit.veridis.xyz/type: log-fluentbit-projected-token
    fluentbit.veridis.xyz/category: observability-projected-token
    fluentbit.veridis.xyz/role: multi-environment-token

    token.veridis.xyz/type: "projected-token"
    token.veridis.xyz/scope: "multi-environment"
    token.veridis.xyz/projection: "volume-mount"
    token.veridis.xyz/rotation: "automatic"

    veridis.xyz/environment: production
    veridis.xyz/team: observability-engineering

  annotations:
    veridis.xyz/description: "Projected ServiceAccount token for Fluent Bit with enhanced security features"
    veridis.xyz/purpose: "Provides secure projected token for Fluent Bit authentication with automatic rotation"

    # Projected token configuration
    token.veridis.xyz/audience: "kubernetes.default.svc"
    token.veridis.xyz/expiration-seconds: "3600"
    token.veridis.xyz/path: "token"
    token.veridis.xyz/projection-source: "serviceAccountToken"

    # Security enhancements
    security.veridis.xyz/token-binding: "pod"
    security.veridis.xyz/audience-validation: "strict"
    security.veridis.xyz/issuer-validation: "enabled"
    security.veridis.xyz/expiry-validation: "enabled"

    # Compliance annotations
    compliance.veridis.xyz/token-security: "enhanced"
    compliance.veridis.xyz/projection-audit: "enabled"
    compliance.veridis.xyz/rotation-audit: "comprehensive"

type: Opaque

stringData:
  # Configuration for projected token volume
  projection-config.yaml: |
    apiVersion: v1
    kind: Pod
    spec:
      serviceAccountName: veridis-fluent-bit
      volumes:
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  audience: kubernetes.default.svc
                  expirationSeconds: 3600
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - path: namespace
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace

# ==============================================================================
# Veridis Fluent Bit ServiceAccount Summary and Enterprise Architecture
# ==============================================================================
#
# COMPREHENSIVE VERIDIS FLUENT BIT SERVICEACCOUNT STRATEGY:
# =========================================================
#
# VERIDIS FLUENT BIT SERVICEACCOUNT ARCHITECTURE OVERVIEW:
# --------------------------------------------------------
# 1. Primary Production ServiceAccount (veridis-fluent-bit):
#    - Comprehensive enterprise-grade serviceaccount with intelligent log authentication and advanced performance optimization for production Fluent Bit
#    - Advanced serviceaccount configuration with minimal permissions, comprehensive RBAC, token management, and comprehensive observability integration
#    - Multi-tier serviceaccount architecture with authentication, authorization, token rotation, and comprehensive operational excellence
#    - Enterprise serviceaccount policies with least privilege access, security contexts, compliance audit, and comprehensive disaster recovery procedures
#    - Performance optimization with intelligent authentication processing, token caching, API optimization, and security for maximum efficiency
#
# 2. Development Environment ServiceAccount (veridis-fluent-bit-dev):
#    - Development-focused serviceaccount with relaxed permissions and comprehensive testing environment integration
#    - Advanced development configuration with extended token expiry, debug permissions, relaxed security, and comprehensive experimentation support
#    - Flexible serviceaccount optimization with development access, testing permissions, and comprehensive development intelligence
#    - Development intelligence with debug procedures, authentication support, rapid iteration, and comprehensive development coordination
#    - Testing excellence with relaxed permissions, development workflows, extended tokens, and comprehensive development environment management
#
# 3. Staging Environment ServiceAccount (veridis-fluent-bit-staging):
#    - Pre-production serviceaccount with production-like permissions and comprehensive staging environment integration
#    - Staging configuration with enhanced security, production-like RBAC, compliance validation, and comprehensive validation procedures
#    - Production-like serviceaccount optimization with authentication testing, permission validation, and comprehensive staging intelligence
#    - Production simulation with realistic authentication, security testing, compliance validation, and comprehensive pre-production coordination
#    - Validation excellence with production-like behavior, security testing, permission validation, and comprehensive staging environment management
#
# 4. Token Management (veridis-fluent-bit-*-token):
#    - Token-focused serviceaccount with projected tokens and comprehensive authentication enhancement integration
#    - Advanced token configuration with automatic rotation, audience validation, expiration management, and comprehensive token support
#    - Flexible serviceaccount optimization with secure tokens, compliance authentication, and comprehensive token intelligence
#    - Token intelligence with security procedures, compliance support, rotation automation, and comprehensive token coordination
#    - Authentication excellence with secure tokens, automatic rotation, compliance validation, and comprehensive token environment management
#
# ENTERPRISE FLUENT BIT SERVICEACCOUNT FEATURES:
# ==============================================
# Advanced Authentication and Performance Integration:
#   - Multi-environment serviceaccount architecture with production, development, staging, and token management configurations
#   - Intelligent authentication management with token algorithms, RBAC policies, permission optimization, and comprehensive authentication decisions
#   - ServiceAccount discovery with API optimization, token management, permission policies, and comprehensive authentication analytics
#   - Performance management with high throughput (1K requests/sec), low latency, token caching, and comprehensive performance intelligence
#   - Authentication processing tuning with token management, RBAC optimization, API algorithms, and intelligent serviceaccount optimization
#
# Comprehensive RBAC and Permission Integration:
#   - Least privilege access with minimal permissions, read-only access, limited scope, and comprehensive permission coordination
#   - Permission optimization with RBAC integration, cluster access, namespace limits, and comprehensive permission intelligence
#   - Security management with token rotation, audience validation, expiration management, and comprehensive security coordination
#   - Business intelligence with permission analytics, access correlation, cost optimization, and comprehensive strategic insights
#   - Access management with permission policies, RBAC validation, security audit, and comprehensive access analytics
#
# Enterprise Security and Compliance Integration:
#   - Token security with automatic rotation, audience validation, expiration management, and comprehensive security enforcement
#   - Authentication audit with access tracking, permission monitoring, token audit, and comprehensive authentication management
#   - Compliance processing with RBAC audit, permission review, access validation, and comprehensive compliance management
#   - Security monitoring with token tracking, authentication validation, permission audit, and comprehensive security management
#   - Compliance intelligence with audit trails, access review, permission validation, and comprehensive compliance analytics
#
# Advanced Token Management and Security Optimization:
#   - Multi-tier token management with service account tokens, projected tokens, automatic rotation, and comprehensive token coordination
#   - Token optimization with expiration management, audience validation, rotation policies, and comprehensive token intelligence
#   - Security management with token binding, issuer validation, expiry validation, and comprehensive security coordination
#   - Business intelligence with token analytics, authentication correlation, security optimization, and comprehensive strategic insights
#   - Authentication management with token security, rotation automation, compliance validation, and comprehensive authentication analytics
#
# OPERATIONAL EXCELLENCE:
# ======================
# Fluent Bit ServiceAccount Lifecycle Management:
#   - Multi-ServiceAccount deployment with production authentication, development flexibility, staging validation, and comprehensive serviceaccount coordination
#   - Intelligent serviceaccount management with predictive analytics and authentication utilization correlation
#   - Advanced monitoring with comprehensive serviceaccount analytics and authentication business intelligence
#   - Configuration validation with serviceaccount schema enforcement and authentication deployment safety checks
#   - Automated optimization with serviceaccount pattern analysis and authentication configuration recommendation engine
#
# Security Integration and Compliance:
#   - SOC 2 Type II serviceaccount controls with comprehensive audit requirements and authentication logging
#   - GDPR serviceaccount compliance with data protection and privacy-preserving authentication management
#   - ISO 27001 serviceaccount security management with information security and authentication compliance integration
#   - NIST 800-190 container serviceaccount security with authentication validation and compliance
#   - Zero-trust serviceaccount architecture with comprehensive encryption and authentication authentication requirements
#
# Business Intelligence Integration:
#   - ServiceAccount analytics with cost correlation and authentication resource utilization optimization
#   - Performance analytics with user experience optimization and serviceaccount business intelligence
#   - Authentication intelligence with processing pattern monitoring and serviceaccount optimization recommendations
#   - Strategic planning with capacity management and serviceaccount forecasting
#   - Business impact assessment with serviceaccount performance correlation and authentication tracking
#
# Developer Experience Excellence:
#   - Multi-environment serviceaccount support with production authentication, development debugging, staging validation, and comprehensive serviceaccount coordination
#   - Comprehensive documentation with serviceaccount guides and authentication troubleshooting procedures
#   - Environment-specific serviceaccounts with production, development, staging, and token support
#   - Testing integration with serviceaccount development workflow and authentication debugging capabilities
#   - ServiceAccount monitoring with comprehensive tracking and authentication correlation
#
# ==============================================================================
