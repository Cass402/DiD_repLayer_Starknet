# ==============================================================================
# Veridis Decentralized Identity Protocol - Pod Disruption Budgets
# ==============================================================================
#
# This manifest defines comprehensive pod disruption budgets for the Veridis deployment,
# providing:
#
# HIGH AVAILABILITY ARCHITECTURE:
#   • Service continuity during planned maintenance with minimum disruption guarantees
#   • Business continuity enforcement with SLA-aligned availability requirements
#   • Rolling update protection with zero-downtime deployment capabilities
#   • Disaster recovery integration with failover and recovery time objectives
#   • Capacity planning coordination with auto-scaling and resource management
#
# OPERATIONAL RESILIENCE FRAMEWORK:
#   • Cluster maintenance coordination with workload availability preservation
#   • Node upgrade orchestration with service impact minimization
#   • Resource rebalancing support with performance consistency maintenance
#   • Emergency maintenance procedures with rapid response capabilities
#   • Multi-zone deployment protection with geographic distribution requirements
#
# COMPLIANCE FRAMEWORK INTEGRATION:
#   • SOC 2 Type II availability controls and service level monitoring
#   • GDPR data processing continuity with minimal service interruption
#   • ISO 27001 business continuity management and availability requirements
#   • SLA compliance enforcement with uptime guarantees and penalty avoidance
#   • Regulatory reporting integration with availability metrics and incident tracking
#
# ENTERPRISE AVAILABILITY FEATURES:
#   • Multi-tier service availability with priority-based disruption management
#   • Cross-service dependency management with cascading failure prevention
#   • Performance degradation controls with graceful service degradation
#   • Customer impact minimization with user experience protection
#   • Revenue protection mechanisms with business-critical service prioritization
#
# OPERATIONAL SECURITY INTEGRATION:
#   • Security patching coordination with availability preservation
#   • Incident response procedures with controlled service disruption
#   • Threat mitigation deployment with minimal operational impact
#   • Compliance remediation activities with service continuity maintenance
#   • Emergency response capabilities with rapid deployment and rollback
#
# ==============================================================================

# ==============================================================================
# Backend Service - Mission Critical Availability
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-backend-pdb
  namespace: veridis

  # Core resource identification labels
  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Pod disruption budget specific classification
    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: backend
    availability.veridis.xyz/criticality: mission-critical
    availability.veridis.xyz/sla-tier: platinum
    availability.veridis.xyz/availability-target: "99.99"

    # High availability classification
    ha.veridis.xyz/strategy: active-active
    ha.veridis.xyz/min-replicas: "3"
    ha.veridis.xyz/max-unavailable: "1"
    ha.veridis.xyz/disruption-tolerance: minimal
    ha.veridis.xyz/recovery-priority: highest

    # Business classification
    business.veridis.xyz/criticality: mission-critical
    business.veridis.xyz/revenue-impact: direct
    business.veridis.xyz/customer-facing: "true"
    business.veridis.xyz/compliance-scope: "soc2,gdpr,iso27001,sla"
    business.veridis.xyz/business-hours: "24x7"

    # Security classification
    security.veridis.xyz/availability-requirement: maximum
    security.veridis.xyz/incident-impact: critical
    security.veridis.xyz/maintenance-window: planned-only
    security.veridis.xyz/emergency-procedures: enabled

    # Operational labels
    veridis.xyz/environment: production
    veridis.xyz/service: backend
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: engineering
    veridis.xyz/business-unit: identity-protocol

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "availability-control"
    compliance.veridis.xyz/gdpr: "data-processing-continuity"
    compliance.veridis.xyz/iso27001: "business-continuity-control"
    compliance.veridis.xyz/sla: "uptime-guarantee"
    governance.veridis.xyz/policy-enforcement: strict

  annotations:
    # Pod disruption budget purpose and scope
    veridis.xyz/description: "Mission-critical backend service pod disruption budget ensuring 99.99% availability during planned maintenance and cluster operations"
    veridis.xyz/purpose: "Guarantees minimum backend service availability during planned disruptions while enabling safe cluster maintenance and updates"
    veridis.xyz/scope: "Backend API services, authentication endpoints, data processing workflows, customer-facing functionality"

    # High availability architecture
    ha.veridis.xyz/architecture: "Multi-zone active-active deployment with load balancing and health monitoring"
    ha.veridis.xyz/failover-strategy: "Automatic failover with sub-30-second detection and recovery"
    ha.veridis.xyz/capacity-planning: "N+2 redundancy with 40% headroom for traffic spikes and maintenance"
    ha.veridis.xyz/performance-targets: "Sub-100ms API response times maintained during disruptions"

    # Business continuity requirements
    business.veridis.xyz/rto: "30 seconds maximum recovery time objective"
    business.veridis.xyz/rpo: "0 seconds recovery point objective - zero data loss"
    business.veridis.xyz/availability-sla: "99.99% monthly uptime guarantee with financial penalties"
    business.veridis.xyz/customer-impact: "Direct customer authentication and API access impact"

    # Operational procedures
    ops.veridis.xyz/maintenance-coordination: "Coordinate with SRE team for planned maintenance windows"
    ops.veridis.xyz/deployment-strategy: "Rolling updates with health checks and automatic rollback"
    ops.veridis.xyz/monitoring-integration: "Real-time availability monitoring with immediate alerting"
    ops.veridis.xyz/escalation-procedures: "Immediate escalation for availability SLA violations"

    # Security and compliance considerations
    security.veridis.xyz/security-patching: "Critical patches deployed with zero-downtime procedures"
    security.veridis.xyz/incident-response: "Security incidents addressed with service continuity priority"
    compliance.veridis.xyz/audit-requirements: "All availability events logged for compliance reporting"
    compliance.veridis.xyz/regulatory-impact: "Service availability required for regulatory compliance"

    # Performance and resource management
    performance.veridis.xyz/load-balancing: "Intelligent load distribution during pod disruptions"
    performance.veridis.xyz/auto-scaling: "Horizontal pod autoscaler integration for capacity management"
    performance.veridis.xyz/resource-planning: "CPU and memory reservations for consistent performance"

    # Emergency procedures and contact information
    veridis.xyz/emergency-contact: "backend-oncall@veridis.xyz"
    veridis.xyz/escalation-path: "SRE → Engineering Manager → CTO → CEO"
    veridis.xyz/incident-commander: "backend-team-lead@veridis.xyz"

    # Documentation and procedures
    veridis.xyz/runbook: "https://docs.veridis.xyz/operations/backend-availability"
    veridis.xyz/sla-documentation: "https://docs.veridis.xyz/sla/backend-service"
    veridis.xyz/disaster-recovery: "https://docs.veridis.xyz/dr/backend-recovery"

    # Contact information and ownership
    veridis.xyz/owner: "backend-team@veridis.xyz"
    veridis.xyz/service-owner: "platform-engineering@veridis.xyz"
    veridis.xyz/sre-contact: "sre@veridis.xyz"
    veridis.xyz/business-owner: "product-management@veridis.xyz"

# Pod disruption budget specification
spec:
  # Maximum number of pods that can be unavailable during disruption
  maxUnavailable: 1

  # Alternative: minimum number of available pods
  # minAvailable: 2

  # Selector for backend service pods
  selector:
    matchLabels:
      app.kubernetes.io/name: veridis
      app.kubernetes.io/component: backend

---
# ==============================================================================
# Database Service - Maximum Data Availability Protection
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-database-pdb
  namespace: veridis

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: database
    availability.veridis.xyz/criticality: system-critical
    availability.veridis.xyz/sla-tier: diamond
    availability.veridis.xyz/availability-target: "99.999"

    ha.veridis.xyz/strategy: primary-secondary-replication
    ha.veridis.xyz/min-replicas: "3"
    ha.veridis.xyz/max-unavailable: "0"
    ha.veridis.xyz/disruption-tolerance: zero
    ha.veridis.xyz/recovery-priority: maximum

    business.veridis.xyz/criticality: system-critical
    business.veridis.xyz/revenue-impact: direct
    business.veridis.xyz/data-sovereignty: regulated
    business.veridis.xyz/compliance-scope: "soc2,gdpr,iso27001,pci-dss"
    business.veridis.xyz/disaster-recovery: tier-1

    security.veridis.xyz/availability-requirement: maximum
    security.veridis.xyz/data-protection: critical
    security.veridis.xyz/backup-integrity: required
    security.veridis.xyz/maintenance-window: emergency-only

    veridis.xyz/environment: production
    veridis.xyz/service: database
    veridis.xyz/team: database-administration
    veridis.xyz/cost-center: engineering

    compliance.veridis.xyz/soc2: "data-availability-control"
    compliance.veridis.xyz/gdpr: "data-controller-availability"
    compliance.veridis.xyz/iso27001: "information-availability"
    compliance.veridis.xyz/pci-dss: "cardholder-data-availability"
    governance.veridis.xyz/policy-enforcement: maximum

  annotations:
    veridis.xyz/description: "System-critical database pod disruption budget ensuring maximum data availability and zero data loss during all operations"
    veridis.xyz/purpose: "Protects customer data availability with zero disruption tolerance and comprehensive disaster recovery integration"
    veridis.xyz/scope: "PostgreSQL primary and secondary instances, backup operations, replication services, data processing workflows"

    # Maximum data protection architecture
    ha.veridis.xyz/data-protection: "Synchronous replication with automatic failover and zero data loss guarantee"
    ha.veridis.xyz/backup-strategy: "Continuous backup with point-in-time recovery and cross-region replication"
    ha.veridis.xyz/replication-topology: "Primary-secondary with witness node for automatic failover decisions"
    ha.veridis.xyz/consistency-model: "Strong consistency with ACID transactions and isolation guarantees"

    # Regulatory and compliance requirements
    compliance.veridis.xyz/data-residency: "EU and US data centers with sovereignty compliance"
    compliance.veridis.xyz/retention-requirements: "7-year data retention with availability guarantees"
    compliance.veridis.xyz/audit-trail: "Complete audit log availability with tamper-evident storage"
    compliance.veridis.xyz/regulatory-reporting: "Real-time availability metrics for regulatory compliance"

    # Business continuity and disaster recovery
    business.veridis.xyz/rto: "15 minutes maximum recovery time objective"
    business.veridis.xyz/rpo: "5 minutes maximum recovery point objective"
    business.veridis.xyz/availability-sla: "99.999% annual uptime with zero planned downtime"
    business.veridis.xyz/financial-impact: "Direct revenue loss and regulatory penalties for downtime"

    # Data integrity and security
    security.veridis.xyz/data-integrity: "Cryptographic checksums and continuous integrity verification"
    security.veridis.xyz/encryption-requirements: "Encryption at rest and in transit with key rotation"
    security.veridis.xyz/access-logging: "Complete data access audit trail with real-time monitoring"
    security.veridis.xyz/threat-protection: "Advanced threat detection with automated response"

    # Operational excellence
    ops.veridis.xyz/maintenance-philosophy: "Zero planned downtime with online maintenance procedures"
    ops.veridis.xyz/upgrade-strategy: "Rolling upgrades with compatibility testing and automatic rollback"
    ops.veridis.xyz/capacity-management: "Proactive capacity planning with auto-scaling and alerting"
    ops.veridis.xyz/performance-monitoring: "Real-time performance monitoring with predictive analytics"

    # Emergency procedures
    veridis.xyz/emergency-contact: "database-oncall@veridis.xyz"
    veridis.xyz/dba-escalation: "senior-dba@veridis.xyz"
    veridis.xyz/data-protection-officer: "dpo@veridis.xyz"
    veridis.xyz/incident-commander: "database-team-lead@veridis.xyz"

    veridis.xyz/owner: "database-team@veridis.xyz"
    veridis.xyz/dba: "dba@veridis.xyz"
    veridis.xyz/security-contact: "data-protection@veridis.xyz"

# Maximum data protection specification
spec:
  # Zero disruption tolerance for database service
  maxUnavailable: 0

  # Ensure minimum availability during any disruption
  minAvailable: 1

  # Selector for database service pods
  selector:
    matchLabels:
      app.kubernetes.io/name: veridis
      app.kubernetes.io/component: database

---
# ==============================================================================
# ZK Circuits Service - Cryptographic Operation Continuity
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-zk-circuits-pdb
  namespace: veridis

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: zk-circuits
    availability.veridis.xyz/criticality: business-critical
    availability.veridis.xyz/sla-tier: gold
    availability.veridis.xyz/availability-target: "99.9"

    ha.veridis.xyz/strategy: load-balanced-compute
    ha.veridis.xyz/min-replicas: "2"
    ha.veridis.xyz/max-unavailable: "50%"
    ha.veridis.xyz/disruption-tolerance: moderate
    ha.veridis.xyz/recovery-priority: high

    business.veridis.xyz/criticality: business-critical
    business.veridis.xyz/revenue-impact: direct
    business.veridis.xyz/ip-classification: trade-secrets
    business.veridis.xyz/compliance-scope: "soc2,gdpr,iso27001,fips-140-2"
    business.veridis.xyz/competitive-advantage: core-technology

    security.veridis.xyz/availability-requirement: high
    security.veridis.xyz/crypto-operations: fips-compliant
    security.veridis.xyz/gpu-security: enhanced
    security.veridis.xyz/ip-protection: maximum

    veridis.xyz/environment: production
    veridis.xyz/service: zk-circuits
    veridis.xyz/team: cryptography-engineering
    veridis.xyz/cost-center: research-development

    compliance.veridis.xyz/soc2: "cryptographic-availability"
    compliance.veridis.xyz/fips-140-2: "crypto-module-availability"
    compliance.veridis.xyz/iso27001: "cryptographic-service-continuity"
    governance.veridis.xyz/policy-enforcement: high
    governance.veridis.xyz/ip-protection: critical

  annotations:
    veridis.xyz/description: "Business-critical ZK circuits pod disruption budget ensuring cryptographic operation continuity with GPU resource protection"
    veridis.xyz/purpose: "Maintains cryptographic service availability while protecting intellectual property and ensuring FIPS compliance during operations"
    veridis.xyz/scope: "GPU-accelerated proof generation, cryptographic key operations, algorithm execution, performance optimization workflows"

    # Cryptographic service architecture
    ha.veridis.xyz/crypto-architecture: "Load-balanced cryptographic compute with GPU resource pooling"
    ha.veridis.xyz/gpu-management: "NVIDIA GPU resource scheduling with failover and load balancing"
    ha.veridis.xyz/proof-generation: "Distributed proof generation with work queue and result aggregation"
    ha.veridis.xyz/performance-scaling: "Auto-scaling based on proof generation demand and GPU utilization"

    # Intellectual property protection
    business.veridis.xyz/ip-continuity: "Proprietary algorithm availability with trade secret protection"
    business.veridis.xyz/algorithm-protection: "Secure algorithm execution with performance data confidentiality"
    business.veridis.xyz/competitive-advantage: "Core cryptographic technology availability for business operations"

    # FIPS compliance and cryptographic requirements
    compliance.veridis.xyz/fips-operations: "FIPS 140-2 Level 2 cryptographic operations with continuous availability"
    compliance.veridis.xyz/crypto-integrity: "Cryptographic algorithm integrity with tamper detection"
    compliance.veridis.xyz/key-availability: "Secure key management service availability with HSM integration"

    # GPU resource management and optimization
    performance.veridis.xyz/gpu-optimization: "NVIDIA RTX 4090/A100 optimal utilization during disruptions"
    performance.veridis.xyz/compute-efficiency: "Proof generation throughput maintained during pod disruptions"
    performance.veridis.xyz/resource-allocation: "Dynamic GPU resource allocation with priority scheduling"

    # Operational considerations
    ops.veridis.xyz/maintenance-strategy: "GPU-aware maintenance with compute workload migration"
    ops.veridis.xyz/scaling-behavior: "Horizontal scaling based on proof generation demand"
    ops.veridis.xyz/cost-optimization: "Cost-effective GPU utilization with demand-based scaling"

    veridis.xyz/owner: "zk-engineering@veridis.xyz"
    veridis.xyz/crypto-architect: "cryptography-architect@veridis.xyz"
    veridis.xyz/gpu-specialist: "gpu-engineering@veridis.xyz"

# Cryptographic service continuity specification
spec:
  # Allow moderate disruption for cost optimization
  maxUnavailable: 50%

  # Alternative: ensure minimum compute capacity
  # minAvailable: 1

  # Selector for ZK circuits service pods
  selector:
    matchLabels:
      app.kubernetes.io/name: veridis
      app.kubernetes.io/component: zk-circuits

---
# ==============================================================================
# Frontend UI Service - User Experience Protection
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-ui-pdb
  namespace: veridis

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: ui
    availability.veridis.xyz/criticality: customer-facing
    availability.veridis.xyz/sla-tier: gold
    availability.veridis.xyz/availability-target: "99.9"

    ha.veridis.xyz/strategy: cdn-backed-load-balanced
    ha.veridis.xyz/min-replicas: "3"
    ha.veridis.xyz/max-unavailable: "33%"
    ha.veridis.xyz/disruption-tolerance: low
    ha.veridis.xyz/recovery-priority: high

    business.veridis.xyz/criticality: customer-facing
    business.veridis.xyz/revenue-impact: indirect
    business.veridis.xyz/user-experience: critical
    business.veridis.xyz/compliance-scope: "gdpr,accessibility"
    business.veridis.xyz/brand-impact: high

    security.veridis.xyz/availability-requirement: high
    security.veridis.xyz/user-facing: "true"
    security.veridis.xyz/session-continuity: required
    security.veridis.xyz/cdn-integration: secure

    veridis.xyz/environment: production
    veridis.xyz/service: ui
    veridis.xyz/team: frontend-engineering
    veridis.xyz/cost-center: engineering

    compliance.veridis.xyz/gdpr: "user-interface-availability"
    compliance.veridis.xyz/accessibility: "wcag-2.1-aa-compliance"
    governance.veridis.xyz/policy-enforcement: high

  annotations:
    veridis.xyz/description: "Customer-facing UI pod disruption budget ensuring optimal user experience with CDN integration and session continuity"
    veridis.xyz/purpose: "Maintains user interface availability and performance during planned maintenance with minimal user impact"
    veridis.xyz/scope: "React/Next.js frontend, user authentication flows, dashboard interfaces, mobile responsive design"

    # User experience architecture
    ha.veridis.xyz/ux-architecture: "CDN-backed global distribution with edge caching and load balancing"
    ha.veridis.xyz/session-management: "Sticky sessions with graceful failover and state preservation"
    ha.veridis.xyz/performance-targets: "Sub-2-second page load times maintained during disruptions"
    ha.veridis.xyz/mobile-optimization: "Progressive web app with offline capabilities and responsive design"

    # Customer experience protection
    business.veridis.xyz/user-impact: "Direct customer interface with brand reputation implications"
    business.veridis.xyz/conversion-optimization: "Checkout and onboarding flow protection during maintenance"
    business.veridis.xyz/accessibility-compliance: "WCAG 2.1 AA compliance maintained during all operations"
    business.veridis.xyz/internationalization: "Multi-language support with regional CDN optimization"

    # Performance and scalability
    performance.veridis.xyz/cdn-strategy: "Global CDN with intelligent routing and cache optimization"
    performance.veridis.xyz/auto-scaling: "Traffic-based auto-scaling with predictive capacity management"
    performance.veridis.xyz/load-balancing: "Geographic load balancing with health check integration"
    performance.veridis.xyz/caching-strategy: "Multi-layer caching with dynamic content optimization"

    # Security and compliance
    security.veridis.xyz/web-security: "Content Security Policy, XSS protection, secure headers enforcement"
    security.veridis.xyz/authentication-flow: "OIDC integration with session management and MFA support"
    compliance.veridis.xyz/gdpr-compliance: "Cookie consent management and privacy controls"
    compliance.veridis.xyz/data-protection: "Client-side data protection and secure transmission"

    veridis.xyz/owner: "frontend-team@veridis.xyz"
    veridis.xyz/ui-lead: "ui-engineering@veridis.xyz"
    veridis.xyz/ux-contact: "user-experience@veridis.xyz"

# User experience protection specification
spec:
  # Allow limited disruption for user experience
  maxUnavailable: 33%

  # Alternative: ensure minimum user-facing capacity
  # minAvailable: 2

  # Selector for UI service pods
  selector:
    matchLabels:
      app.kubernetes.io/name: veridis
      app.kubernetes.io/component: ui

---
# ==============================================================================
# Redis Cache Service - Performance Continuity
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-cache-pdb
  namespace: veridis

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: cache
    availability.veridis.xyz/criticality: performance-critical
    availability.veridis.xyz/sla-tier: silver
    availability.veridis.xyz/availability-target: "99.5"

    ha.veridis.xyz/strategy: redis-sentinel-clustering
    ha.veridis.xyz/min-replicas: "3"
    ha.veridis.xyz/max-unavailable: "1"
    ha.veridis.xyz/disruption-tolerance: low
    ha.veridis.xyz/recovery-priority: medium

    business.veridis.xyz/criticality: performance-critical
    business.veridis.xyz/revenue-impact: indirect
    business.veridis.xyz/performance-optimization: required
    business.veridis.xyz/compliance-scope: "soc2,gdpr"
    business.veridis.xyz/cost-optimization: high

    security.veridis.xyz/availability-requirement: medium
    security.veridis.xyz/data-classification: cached-temporary
    security.veridis.xyz/encryption-transit: required
    security.veridis.xyz/access-control: rbac

    veridis.xyz/environment: production
    veridis.xyz/service: cache
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: engineering

    compliance.veridis.xyz/soc2: "performance-availability"
    compliance.veridis.xyz/gdpr: "temporary-data-processing"
    governance.veridis.xyz/policy-enforcement: medium

  annotations:
    veridis.xyz/description: "Performance-critical Redis cache pod disruption budget ensuring system performance with sentinel-based high availability"
    veridis.xyz/purpose: "Maintains caching service availability for optimal system performance while enabling safe maintenance operations"
    veridis.xyz/scope: "Redis primary/replica clusters, session storage, application caching, performance optimization"

    # Cache architecture and performance
    ha.veridis.xyz/cache-architecture: "Redis Sentinel clustering with automatic failover and read scaling"
    ha.veridis.xyz/replication-strategy: "Asynchronous replication with configurable consistency levels"
    ha.veridis.xyz/performance-impact: "Cache misses acceptable during brief disruptions with backend fallback"
    ha.veridis.xyz/data-persistence: "Configurable persistence with RDB snapshots and AOF logging"

    # Performance optimization
    performance.veridis.xyz/cache-strategy: "Multi-tier caching with TTL optimization and memory management"
    performance.veridis.xyz/hit-ratio-targets: "95% cache hit ratio maintained during normal operations"
    performance.veridis.xyz/latency-requirements: "Sub-1ms cache response times with SLA monitoring"
    performance.veridis.xyz/throughput-capacity: "100K ops/sec with auto-scaling and load balancing"

    # Operational considerations
    ops.veridis.xyz/maintenance-impact: "Brief performance degradation acceptable during maintenance"
    ops.veridis.xyz/backup-strategy: "Regular snapshots with point-in-time recovery capabilities"
    ops.veridis.xyz/monitoring-integration: "Redis metrics, sentinel health, and performance monitoring"

    veridis.xyz/owner: "platform-engineering@veridis.xyz"
    veridis.xyz/cache-admin: "cache-engineering@veridis.xyz"

# Cache service continuity specification
spec:
  # Allow minimal disruption for performance optimization
  maxUnavailable: 1

  # Selector for Redis cache service pods
  selector:
    matchLabels:
      app.kubernetes.io/name: veridis
      app.kubernetes.io/component: cache

---
# ==============================================================================
# Monitoring Services - Observability Continuity
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-monitoring-pdb
  namespace: monitoring

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: monitoring
    availability.veridis.xyz/criticality: operational-critical
    availability.veridis.xyz/sla-tier: bronze
    availability.veridis.xyz/availability-target: "99.0"

    ha.veridis.xyz/strategy: distributed-monitoring
    ha.veridis.xyz/min-replicas: "2"
    ha.veridis.xyz/max-unavailable: "50%"
    ha.veridis.xyz/disruption-tolerance: moderate
    ha.veridis.xyz/recovery-priority: medium

    business.veridis.xyz/criticality: operational-critical
    business.veridis.xyz/revenue-impact: indirect
    business.veridis.xyz/operational-visibility: required
    business.veridis.xyz/compliance-scope: "soc2"
    business.veridis.xyz/cost-sensitivity: high

    security.veridis.xyz/availability-requirement: medium
    security.veridis.xyz/monitoring-continuity: required
    security.veridis.xyz/audit-logging: continuous
    security.veridis.xyz/incident-detection: real-time

    veridis.xyz/environment: production
    veridis.xyz/service: monitoring
    veridis.xyz/team: sre
    veridis.xyz/cost-center: engineering

    compliance.veridis.xyz/soc2: "monitoring-availability"
    governance.veridis.xyz/policy-enforcement: medium

  annotations:
    veridis.xyz/description: "Operational-critical monitoring pod disruption budget ensuring observability continuity with cost-effective availability"
    veridis.xyz/purpose: "Maintains monitoring and alerting capabilities during planned maintenance while optimizing infrastructure costs"
    veridis.xyz/scope: "Prometheus, Grafana, Jaeger, logging infrastructure, alerting systems, metrics collection"

    # Monitoring architecture
    ha.veridis.xyz/monitoring-architecture: "Distributed monitoring with federation and remote storage"
    ha.veridis.xyz/alerting-continuity: "High-availability alerting with multiple notification channels"
    ha.veridis.xyz/data-retention: "Long-term metrics storage with automated lifecycle management"
    ha.veridis.xyz/dashboard-availability: "Grafana clustering with shared dashboard configuration"

    # Operational requirements
    ops.veridis.xyz/alerting-sla: "Critical alerts must fire within 60 seconds of threshold breach"
    ops.veridis.xyz/data-collection: "Metrics collection continues during individual component disruptions"
    ops.veridis.xyz/cost-optimization: "Balanced availability with infrastructure cost considerations"

    veridis.xyz/owner: "sre-team@veridis.xyz"
    veridis.xyz/monitoring-lead: "monitoring@veridis.xyz"

# Monitoring service continuity specification
spec:
  # Allow moderate disruption for cost optimization
  maxUnavailable: 50%

  # Selector for monitoring service pods
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus

# Additional monitoring services
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-grafana-pdb
  namespace: monitoring

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/component: pod-disruption-budget
    availability.veridis.xyz/service: grafana

spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana

---
# ==============================================================================
# Staging Environment - Development Continuity
# ==============================================================================
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: veridis-staging-pdb
  namespace: veridis-staging

  labels:
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-staging
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: pod-disruption-budget
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    availability.veridis.xyz/type: pod-disruption-budget
    availability.veridis.xyz/service: staging
    availability.veridis.xyz/criticality: testing-important
    availability.veridis.xyz/sla-tier: bronze
    availability.veridis.xyz/availability-target: "95.0"

    ha.veridis.xyz/strategy: minimal-redundancy
    ha.veridis.xyz/min-replicas: "1"
    ha.veridis.xyz/max-unavailable: "50%"
    ha.veridis.xyz/disruption-tolerance: high
    ha.veridis.xyz/recovery-priority: low

    business.veridis.xyz/criticality: testing-important
    business.veridis.xyz/revenue-impact: none
    business.veridis.xyz/customer-facing: "false"
    business.veridis.xyz/compliance-scope: "basic"
    business.veridis.xyz/cost-optimization: maximum

    veridis.xyz/environment: staging
    veridis.xyz/service: all-services
    veridis.xyz/team: platform-engineering
    veridis.xyz/cost-center: engineering

  annotations:
    veridis.xyz/description: "Staging environment pod disruption budget with high disruption tolerance for cost optimization and testing flexibility"
    veridis.xyz/purpose: "Enables cost-effective staging operations while maintaining essential testing capabilities"
    veridis.xyz/scope: "Integration testing, deployment validation, performance testing, quality assurance workflows"

    # Testing and development focus
    ha.veridis.xyz/testing-continuity: "Essential testing workflows protected with flexible availability"
    ha.veridis.xyz/cost-efficiency: "Maximum cost optimization with minimal redundancy requirements"
    ha.veridis.xyz/development-productivity: "Balanced availability for continuous integration and testing"

    veridis.xyz/owner: "platform-engineering@veridis.xyz"
    veridis.xyz/staging-lead: "staging-environment@veridis.xyz"

# Staging environment specification
spec:
  # High disruption tolerance for cost optimization
  maxUnavailable: 50%

  # Selector for all staging services
  selector:
    matchLabels:
      app.kubernetes.io/name: veridis

# ==============================================================================
# Pod Disruption Budget Summary and High Availability Architecture
# ==============================================================================
#
# COMPREHENSIVE AVAILABILITY MANAGEMENT:
# ======================================
#
# SERVICE AVAILABILITY TIERS:
# ---------------------------
# 1. Diamond Tier - Database (99.999% SLA):
#    - Zero disruption tolerance (maxUnavailable: 0)
#    - Continuous data availability with disaster recovery
#    - Regulatory compliance and audit requirements
#    - 24/7 operations with emergency-only maintenance
#
# 2. Platinum Tier - Backend (99.99% SLA):
#    - Minimal disruption (maxUnavailable: 1)
#    - Mission-critical API and authentication services
#    - Revenue-impacting customer-facing functionality
#    - Immediate escalation for SLA violations
#
# 3. Gold Tier - UI & ZK Circuits (99.9% SLA):
#    - Limited disruption (maxUnavailable: 33-50%)
#    - Customer experience and cryptographic operations
#    - Performance optimization with cost considerations
#    - Balanced availability and operational efficiency
#
# 4. Silver Tier - Cache (99.5% SLA):
#    - Moderate disruption tolerance (maxUnavailable: 1)
#    - Performance optimization with backend fallback
#    - Cost-effective high availability with Redis Sentinel
#    - Brief performance degradation acceptable
#
# 5. Bronze Tier - Monitoring & Staging (95-99% SLA):
#    - High disruption tolerance (maxUnavailable: 50%)
#    - Cost-optimized operations with flexible availability
#    - Testing and observability with minimal redundancy
#    - Development productivity and infrastructure efficiency
#
# BUSINESS CONTINUITY INTEGRATION:
# ================================
# Revenue Protection:
#   - Direct revenue services (Backend, Database) with maximum protection
#   - Customer experience services (UI) with balanced availability
#   - Operational services with cost-optimized availability
#
# Compliance Requirements:
#   - SOC 2 Type II availability controls and monitoring
#   - GDPR data processing continuity requirements
#   - ISO 27001 business continuity management
#   - Regulatory reporting and audit trail preservation
#
# Disaster Recovery Alignment:
#   - RTO/RPO objectives integrated with disruption budgets
#   - Cross-region failover capabilities and procedures
#   - Automated recovery with service priority management
#   - Emergency procedures and escalation matrices
#
# OPERATIONAL EXCELLENCE FEATURES:
# ================================
# Maintenance Coordination:
#   - Planned maintenance windows with service impact analysis
#   - Rolling updates with health checks and automatic rollback
#   - Cluster operations with workload migration and balancing
#
# Performance Management:
#   - Auto-scaling integration with disruption budget constraints
#   - Load balancing with health monitoring and failover
#   - Resource optimization with availability guarantees
#
# Cost Optimization:
#   - Service tier alignment with business value and cost
#   - Right-sizing availability with operational requirements
#   - Automated scaling with disruption budget compliance
#
# Monitoring and Alerting:
#   - Real-time availability monitoring with SLA tracking
#   - Disruption budget violation alerts and escalation
#   - Compliance reporting with availability metrics
#
# ==============================================================================
