# ==============================================================================
# Veridis Decentralized Identity Protocol - Kubernetes Namespace
# ==============================================================================
#
# This namespace manifest establishes the complete runtime environment for the
# Veridis Decentralized Identity Protocol on Kubernetes, providing:
#
# NAMESPACE FEATURES:
#   • Strict security boundaries with Pod Security Standards
#   • Network microsegmentation with default-deny policies
#   • Resource quotas and limits for workload isolation
#   • Service mesh integration with automatic sidecar injection
#   • Comprehensive compliance and audit labeling
#   • Multi-tenancy support with tenant isolation
#
# SECURITY CONTROLS:
#   • Pod Security Standards - Restricted profile enforcement
#   • Network Policies - Default-deny with explicit allow rules
#   • RBAC Integration - Service account isolation
#   • Admission Controllers - OPA Gatekeeper policy enforcement
#   • Resource Quotas - Prevent resource exhaustion attacks
#   • Priority Classes - Workload scheduling priorities
#
# COMPLIANCE STANDARDS:
#   • SOC 2 Type II - Security and availability controls
#   • GDPR - Data protection boundary enforcement
#   • ISO 27001 - Information security management
#   • NIST 800-190 - Container security guidelines
#   • PCI DSS - Payment card data isolation (if applicable)
#   • HIPAA - Healthcare data protection (if applicable)
#
# MONITORING & OBSERVABILITY:
#   • Automatic metrics collection and aggregation
#   • Distributed tracing with Jaeger integration
#   • Centralized logging with structured log formats
#   • Security event monitoring and alerting
#   • Audit log retention and compliance reporting
#
# SERVICE MESH INTEGRATION:
#   • Istio service mesh with automatic sidecar injection
#   • mTLS encryption for all inter-service communication
#   • Traffic policies and routing rules
#   • Telemetry collection and visualization
#   • Security policies and access control
#
# RESOURCE MANAGEMENT:
#   • CPU and memory quotas with burst allowances
#   • Storage quotas with persistent volume limits
#   • Network bandwidth policies and QoS
#   • GPU resource allocation for ZK proof generation
#   • Horizontal Pod Autoscaler integration
#
# ==============================================================================

apiVersion: v1
kind: Namespace
metadata:
  name: veridis

  # ==============================================================================
  # Comprehensive Namespace Labels
  # ==============================================================================
  labels:
    # Core namespace identification
    name: veridis
    app.kubernetes.io/name: veridis
    app.kubernetes.io/instance: veridis-production
    app.kubernetes.io/version: "3.2.1"
    app.kubernetes.io/component: namespace
    app.kubernetes.io/part-of: veridis-protocol
    app.kubernetes.io/managed-by: kustomize

    # Environment and deployment context
    veridis.xyz/environment: production
    veridis.xyz/deployment-tier: core
    veridis.xyz/protocol-version: "3.2.1"
    veridis.xyz/release-channel: stable

    # Security and compliance classification
    security-tier: sensitive
    compliance-level: enterprise
    data-classification: confidential
    security-zone: dmz
    network-policy: strict
    encryption-required: "true"

    # Compliance framework labels
    compliance.veridis.xyz/soc2: "enabled"
    compliance.veridis.xyz/gdpr: "enabled"
    compliance.veridis.xyz/iso27001: "enabled"
    compliance.veridis.xyz/nist: "enabled"
    compliance.veridis.xyz/pci-dss: "conditional"
    compliance.veridis.xyz/hipaa: "conditional"

    # Pod Security Standards
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted

    # Service mesh integration
    istio-injection: enabled
    istio.io/rev: stable
    service-mesh: istio
    mtls-mode: strict

    # Monitoring and observability
    monitoring.veridis.xyz/prometheus: "enabled"
    monitoring.veridis.xyz/grafana: "enabled"
    monitoring.veridis.xyz/jaeger: "enabled"
    monitoring.veridis.xyz/fluent-bit: "enabled"
    monitoring.veridis.xyz/metrics-retention: "90d"
    monitoring.veridis.xyz/logs-retention: "365d"

    # Resource management
    resource-tier: high
    gpu-enabled: "true"
    storage-tier: ssd
    backup-enabled: "true"
    disaster-recovery: "enabled"

    # Network and traffic management
    network-zone: internal
    traffic-policy: restricted
    ingress-class: nginx
    load-balancer-type: internal

    # Operational labels
    team: platform-engineering
    cost-center: engineering
    business-unit: identity-protocol
    project: veridis-did-protocol

    # Technology stack labels
    blockchain: starknet
    primary-language: rust
    zk-language: nodejs
    database: postgresql
    cache: redis
    secrets-manager: vault

    # Audit and governance
    audit-required: "true"
    change-management: "required"
    approval-required: "true"
    backup-frequency: daily

  # ==============================================================================
  # Comprehensive Namespace Annotations
  # ==============================================================================
  annotations:
    # Basic namespace information
    veridis.xyz/description: "Production namespace for the Veridis Decentralized Identity Protocol - a comprehensive DID management system built on StarkNet"
    veridis.xyz/purpose: "Hosts the complete Veridis Protocol stack including identity management, attestation services, verification engines, compliance automation, cross-chain bridges, and zero-knowledge proof generation"
    veridis.xyz/created-by: "Veridis Platform Engineering Team"
    veridis.xyz/creation-date: "2025-01-18T10:00:00Z"

    # Contact and ownership information
    veridis.xyz/owner: "Veridis Core Team"
    veridis.xyz/technical-lead: "platform-engineering@veridis.xyz"
    veridis.xyz/product-owner: "product@veridis.xyz"
    veridis.xyz/security-contact: "security@veridis.xyz"
    veridis.xyz/compliance-contact: "compliance@veridis.xyz"
    veridis.xyz/ops-contact: "ops@veridis.xyz"
    veridis.xyz/emergency-contact: "oncall@veridis.xyz"

    # Documentation and support
    veridis.xyz/documentation: "https://docs.veridis.xyz/deployment/kubernetes"
    veridis.xyz/runbook: "https://runbooks.veridis.xyz/namespace/veridis"
    veridis.xyz/troubleshooting: "https://wiki.veridis.xyz/troubleshooting/kubernetes"
    veridis.xyz/support-channel: "#veridis-support"
    veridis.xyz/escalation-path: "#veridis-oncall"
    veridis.xyz/sla-document: "https://docs.veridis.xyz/sla/production"

    # Architecture and technology
    veridis.xyz/architecture: "microservices"
    veridis.xyz/deployment-pattern: "blue-green"
    veridis.xyz/scaling-strategy: "horizontal"
    veridis.xyz/availability-target: "99.9%"
    veridis.xyz/rto-target: "15m"
    veridis.xyz/rpo-target: "5m"

    # Version and build information
    veridis.xyz/protocol-version: "3.2.1"
    veridis.xyz/api-version: "v1"
    veridis.xyz/cairo-version: "2.11.4"
    veridis.xyz/starknet-version: "0.13.4"
    veridis.xyz/rust-version: "1.87.0"
    veridis.xyz/node-version: "22.14.0"
    veridis.xyz/garaga-version: "0.18.1"
    veridis.xyz/kubernetes-version: "1.28+"
    veridis.xyz/istio-version: "1.20+"

    # Security and compliance annotations
    veridis.xyz/security-level: "enterprise"
    veridis.xyz/threat-model: "https://security.veridis.xyz/threat-model"
    veridis.xyz/security-controls: "network-policies,pod-security-standards,rbac,service-mesh,admission-controllers"
    veridis.xyz/penetration-test-date: "2025-01-15"
    veridis.xyz/security-audit-date: "2025-01-10"
    veridis.xyz/vulnerability-scan-date: "2025-01-18"
    veridis.xyz/compliance-audit-date: "2025-01-05"

    # Encryption and data protection
    veridis.xyz/encryption-at-rest: "enabled"
    veridis.xyz/encryption-in-transit: "enabled"
    veridis.xyz/key-management: "vault"
    veridis.xyz/certificate-management: "cert-manager"
    veridis.xyz/secrets-encryption: "enabled"
    veridis.xyz/data-classification: "confidential"

    # Network security
    veridis.xyz/network-policies: "enabled"
    veridis.xyz/default-deny: "true"
    veridis.xyz/ingress-whitelist: "internal-only"
    veridis.xyz/egress-policy: "restricted"
    veridis.xyz/service-mesh-mtls: "strict"
    veridis.xyz/network-segmentation: "enabled"

    # Resource management and limits
    veridis.xyz/resource-quotas: "enabled"
    veridis.xyz/limit-ranges: "enabled"
    veridis.xyz/priority-classes: "configured"
    veridis.xyz/hpa-enabled: "true"
    veridis.xyz/vpa-enabled: "false"
    veridis.xyz/cluster-autoscaler: "enabled"

    # Monitoring and observability
    veridis.xyz/monitoring-stack: "prometheus,grafana,jaeger,alertmanager"
    veridis.xyz/logging-stack: "fluent-bit,elasticsearch,kibana"
    veridis.xyz/tracing-enabled: "true"
    veridis.xyz/metrics-scraping: "enabled"
    veridis.xyz/alerting-rules: "configured"
    veridis.xyz/dashboards: "configured"

    # Backup and disaster recovery
    veridis.xyz/backup-strategy: "velero"
    veridis.xyz/backup-frequency: "daily"
    veridis.xyz/backup-retention: "90d"
    veridis.xyz/point-in-time-recovery: "enabled"
    veridis.xyz/cross-region-backup: "enabled"
    veridis.xyz/disaster-recovery-plan: "https://docs.veridis.xyz/dr/kubernetes"

    # Change management and governance
    veridis.xyz/change-management: "required"
    veridis.xyz/approval-workflow: "enabled"
    veridis.xyz/automated-rollback: "enabled"
    veridis.xyz/canary-deployment: "supported"
    veridis.xyz/feature-flags: "enabled"
    veridis.xyz/circuit-breaker: "enabled"

    # Cost management
    veridis.xyz/cost-allocation: "engineering"
    veridis.xyz/budget-alerts: "enabled"
    veridis.xyz/resource-optimization: "enabled"
    veridis.xyz/rightsizing: "automated"
    veridis.xyz/spot-instances: "enabled"

    # Operational annotations
    veridis.xyz/maintenance-window: "Sunday 02:00-04:00 UTC"
    veridis.xyz/patching-schedule: "monthly"
    veridis.xyz/health-check-endpoint: "/health"
    veridis.xyz/readiness-check-endpoint: "/ready"
    veridis.xyz/metrics-endpoint: "/metrics"

    # Integration annotations
    veridis.xyz/service-dependencies: "postgres,redis,vault,starknet-devnet"
    veridis.xyz/external-dependencies: "starknet-mainnet,ethereum-mainnet"
    veridis.xyz/api-gateway: "enabled"
    veridis.xyz/load-balancer: "nginx-ingress"
    veridis.xyz/cdn: "cloudflare"

    # Compliance framework annotations
    compliance.veridis.xyz/framework: "soc2,gdpr,iso27001,nist"
    compliance.veridis.xyz/audit-frequency: "quarterly"
    compliance.veridis.xyz/evidence-collection: "automated"
    compliance.veridis.xyz/policy-enforcement: "opa-gatekeeper"
    compliance.veridis.xyz/data-retention: "7-years"
    compliance.veridis.xyz/right-to-erasure: "automated"

    # GDPR specific annotations
    gdpr.veridis.xyz/data-controller: "Veridis Technologies Inc."
    gdpr.veridis.xyz/privacy-policy: "https://veridis.xyz/privacy"
    gdpr.veridis.xyz/dpo-contact: "dpo@veridis.xyz"
    gdpr.veridis.xyz/lawful-basis: "legitimate-interest"
    gdpr.veridis.xyz/data-minimization: "enabled"
    gdpr.veridis.xyz/consent-management: "automated"

    # Performance and scaling annotations
    performance.veridis.xyz/target-rps: "10000"
    performance.veridis.xyz/target-latency: "100ms"
    performance.veridis.xyz/scaling-metric: "cpu-memory-composite"
    performance.veridis.xyz/min-replicas: "3"
    performance.veridis.xyz/max-replicas: "50"
    performance.veridis.xyz/target-utilization: "70%"

    # Chaos engineering annotations
    chaos.veridis.xyz/chaos-monkey: "enabled"
    chaos.veridis.xyz/failure-injection: "controlled"
    chaos.veridis.xyz/resilience-testing: "automated"
    chaos.veridis.xyz/blast-radius: "namespace"
    chaos.veridis.xyz/recovery-time: "5m"

    # GitOps and deployment annotations
    gitops.veridis.xyz/repository: "https://github.com/veridis/veridis-protocol"
    gitops.veridis.xyz/branch: "main"
    gitops.veridis.xyz/sync-policy: "automated"
    gitops.veridis.xyz/prune: "true"
    gitops.veridis.xyz/self-heal: "true"
    gitops.veridis.xyz/revision: "${GIT_COMMIT:-unknown}"

    # Certificate and TLS annotations
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    cert-manager.io/acme-challenge-type: "dns01"
    cert-manager.io/acme-dns01-provider: "cloudflare"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"

    # Admission controller annotations
    admission.gatekeeper.sh/ignore: "false"
    policies.gatekeeper.sh/enforce: "true"
    validation.gatekeeper.sh/required: "true"
    mutation.gatekeeper.sh/enabled: "true"

    # Kubernetes native annotations
    scheduler.alpha.kubernetes.io/node-selector: "workload-type=application"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    kubernetes.io/managed-by: "kustomize"

    # Custom resource annotations for operators
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "veridis-production"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8080"

    # Notification and alerting annotations
    alerts.veridis.xyz/slack-channel: "#veridis-alerts"
    alerts.veridis.xyz/pagerduty-service: "veridis-production"
    alerts.veridis.xyz/email-list: "oncall@veridis.xyz"
    alerts.veridis.xyz/webhook-url: "https://hooks.veridis.xyz/kubernetes"

    # Regulatory and legal annotations
    legal.veridis.xyz/data-residency: "eu-us"
    legal.veridis.xyz/export-control: "ear99"
    legal.veridis.xyz/privacy-shield: "compliant"
    legal.veridis.xyz/cross-border-transfer: "standard-contractual-clauses"

# ==============================================================================
# Namespace Resource Specifications
# ==============================================================================
spec:
  # Finalizers to ensure proper cleanup
  finalizers:
    - kubernetes
    - veridis.xyz/audit-log-retention
    - veridis.xyz/compliance-evidence-retention
    - veridis.xyz/backup-completion
    - veridis.xyz/security-scan-completion

# ==============================================================================
# Namespace Status Tracking
# ==============================================================================
# Status will be managed by Kubernetes and custom controllers
# status:
#   phase: Active
#   conditions:
#     - type: NamespaceFinalizersRemaining
#       status: "False"
#       lastTransitionTime: "2025-01-18T10:00:00Z"
#       reason: FinalizersCompleted
#       message: "All finalizers have been processed"

# ==============================================================================
# Associated Resources That Will Be Created
# ==============================================================================
# This namespace will automatically trigger the creation of:
#
# SECURITY RESOURCES:
#   • Default NetworkPolicy (deny-all ingress/egress)
#   • PodSecurityPolicy enforcement
#   • ServiceAccount with minimal permissions
#   • RBAC roles and bindings
#   • SecurityContext constraints
#
# RESOURCE MANAGEMENT:
#   • ResourceQuota for CPU, memory, storage limits
#   • LimitRange for default resource requests/limits
#   • PriorityClass for workload scheduling
#   • HorizontalPodAutoscaler configurations
#
# MONITORING RESOURCES:
#   • ServiceMonitor for Prometheus scraping
#   • PrometheusRule for alerting rules
#   • Grafana dashboard provisioning
#   • Jaeger tracing configuration
#
# BACKUP RESOURCES:
#   • Velero backup schedules
#   • PersistentVolume backup policies
#   • Application-consistent backup hooks
#   • Cross-region replication rules
#
# COMPLIANCE RESOURCES:
#   • Audit policy configurations
#   • Evidence collection jobs
#   • Compliance report generation
#   • Data retention policies
#
# ==============================================================================
